
LNA.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000b8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007124  080000b8  080000b8  000100b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001f4  080071dc  080071dc  000171dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080073d0  080073d0  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  080073d0  080073d0  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080073d0  080073d0  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080073d0  080073d0  000173d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080073d4  080073d4  000173d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  080073d8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000364  2000005c  08007434  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200003c0  08007434  000203c0  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000086  00000000  00000000  00020084  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000fd5d  00000000  00000000  0002010a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00002c09  00000000  00000000  0002fe67  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000ce8  00000000  00000000  00032a70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000009d6  00000000  00000000  00033758  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00017157  00000000  00000000  0003412e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000123b4  00000000  00000000  0004b285  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008a869  00000000  00000000  0005d639  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000312c  00000000  00000000  000e7ea4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000069  00000000  00000000  000eafd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000b8 <__do_global_dtors_aux>:
 80000b8:	b510      	push	{r4, lr}
 80000ba:	4c06      	ldr	r4, [pc, #24]	; (80000d4 <__do_global_dtors_aux+0x1c>)
 80000bc:	7823      	ldrb	r3, [r4, #0]
 80000be:	2b00      	cmp	r3, #0
 80000c0:	d107      	bne.n	80000d2 <__do_global_dtors_aux+0x1a>
 80000c2:	4b05      	ldr	r3, [pc, #20]	; (80000d8 <__do_global_dtors_aux+0x20>)
 80000c4:	2b00      	cmp	r3, #0
 80000c6:	d002      	beq.n	80000ce <__do_global_dtors_aux+0x16>
 80000c8:	4804      	ldr	r0, [pc, #16]	; (80000dc <__do_global_dtors_aux+0x24>)
 80000ca:	e000      	b.n	80000ce <__do_global_dtors_aux+0x16>
 80000cc:	bf00      	nop
 80000ce:	2301      	movs	r3, #1
 80000d0:	7023      	strb	r3, [r4, #0]
 80000d2:	bd10      	pop	{r4, pc}
 80000d4:	2000005c 	.word	0x2000005c
 80000d8:	00000000 	.word	0x00000000
 80000dc:	080071c4 	.word	0x080071c4

080000e0 <frame_dummy>:
 80000e0:	4b04      	ldr	r3, [pc, #16]	; (80000f4 <frame_dummy+0x14>)
 80000e2:	b510      	push	{r4, lr}
 80000e4:	2b00      	cmp	r3, #0
 80000e6:	d003      	beq.n	80000f0 <frame_dummy+0x10>
 80000e8:	4903      	ldr	r1, [pc, #12]	; (80000f8 <frame_dummy+0x18>)
 80000ea:	4804      	ldr	r0, [pc, #16]	; (80000fc <frame_dummy+0x1c>)
 80000ec:	e000      	b.n	80000f0 <frame_dummy+0x10>
 80000ee:	bf00      	nop
 80000f0:	bd10      	pop	{r4, pc}
 80000f2:	46c0      	nop			; (mov r8, r8)
 80000f4:	00000000 	.word	0x00000000
 80000f8:	20000060 	.word	0x20000060
 80000fc:	080071c4 	.word	0x080071c4

08000100 <__gnu_thumb1_case_shi>:
 8000100:	b403      	push	{r0, r1}
 8000102:	4671      	mov	r1, lr
 8000104:	0849      	lsrs	r1, r1, #1
 8000106:	0040      	lsls	r0, r0, #1
 8000108:	0049      	lsls	r1, r1, #1
 800010a:	5e09      	ldrsh	r1, [r1, r0]
 800010c:	0049      	lsls	r1, r1, #1
 800010e:	448e      	add	lr, r1
 8000110:	bc03      	pop	{r0, r1}
 8000112:	4770      	bx	lr

08000114 <__udivsi3>:
 8000114:	2200      	movs	r2, #0
 8000116:	0843      	lsrs	r3, r0, #1
 8000118:	428b      	cmp	r3, r1
 800011a:	d374      	bcc.n	8000206 <__udivsi3+0xf2>
 800011c:	0903      	lsrs	r3, r0, #4
 800011e:	428b      	cmp	r3, r1
 8000120:	d35f      	bcc.n	80001e2 <__udivsi3+0xce>
 8000122:	0a03      	lsrs	r3, r0, #8
 8000124:	428b      	cmp	r3, r1
 8000126:	d344      	bcc.n	80001b2 <__udivsi3+0x9e>
 8000128:	0b03      	lsrs	r3, r0, #12
 800012a:	428b      	cmp	r3, r1
 800012c:	d328      	bcc.n	8000180 <__udivsi3+0x6c>
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d30d      	bcc.n	8000150 <__udivsi3+0x3c>
 8000134:	22ff      	movs	r2, #255	; 0xff
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	ba12      	rev	r2, r2
 800013a:	0c03      	lsrs	r3, r0, #16
 800013c:	428b      	cmp	r3, r1
 800013e:	d302      	bcc.n	8000146 <__udivsi3+0x32>
 8000140:	1212      	asrs	r2, r2, #8
 8000142:	0209      	lsls	r1, r1, #8
 8000144:	d065      	beq.n	8000212 <__udivsi3+0xfe>
 8000146:	0b03      	lsrs	r3, r0, #12
 8000148:	428b      	cmp	r3, r1
 800014a:	d319      	bcc.n	8000180 <__udivsi3+0x6c>
 800014c:	e000      	b.n	8000150 <__udivsi3+0x3c>
 800014e:	0a09      	lsrs	r1, r1, #8
 8000150:	0bc3      	lsrs	r3, r0, #15
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x46>
 8000156:	03cb      	lsls	r3, r1, #15
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b83      	lsrs	r3, r0, #14
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x52>
 8000162:	038b      	lsls	r3, r1, #14
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b43      	lsrs	r3, r0, #13
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x5e>
 800016e:	034b      	lsls	r3, r1, #13
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0b03      	lsrs	r3, r0, #12
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x6a>
 800017a:	030b      	lsls	r3, r1, #12
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0ac3      	lsrs	r3, r0, #11
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x76>
 8000186:	02cb      	lsls	r3, r1, #11
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a83      	lsrs	r3, r0, #10
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x82>
 8000192:	028b      	lsls	r3, r1, #10
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a43      	lsrs	r3, r0, #9
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x8e>
 800019e:	024b      	lsls	r3, r1, #9
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	0a03      	lsrs	r3, r0, #8
 80001a6:	428b      	cmp	r3, r1
 80001a8:	d301      	bcc.n	80001ae <__udivsi3+0x9a>
 80001aa:	020b      	lsls	r3, r1, #8
 80001ac:	1ac0      	subs	r0, r0, r3
 80001ae:	4152      	adcs	r2, r2
 80001b0:	d2cd      	bcs.n	800014e <__udivsi3+0x3a>
 80001b2:	09c3      	lsrs	r3, r0, #7
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xa8>
 80001b8:	01cb      	lsls	r3, r1, #7
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0983      	lsrs	r3, r0, #6
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xb4>
 80001c4:	018b      	lsls	r3, r1, #6
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0943      	lsrs	r3, r0, #5
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xc0>
 80001d0:	014b      	lsls	r3, r1, #5
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	0903      	lsrs	r3, r0, #4
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xcc>
 80001dc:	010b      	lsls	r3, r1, #4
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	08c3      	lsrs	r3, r0, #3
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xd8>
 80001e8:	00cb      	lsls	r3, r1, #3
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0883      	lsrs	r3, r0, #2
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xe4>
 80001f4:	008b      	lsls	r3, r1, #2
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	0843      	lsrs	r3, r0, #1
 80001fc:	428b      	cmp	r3, r1
 80001fe:	d301      	bcc.n	8000204 <__udivsi3+0xf0>
 8000200:	004b      	lsls	r3, r1, #1
 8000202:	1ac0      	subs	r0, r0, r3
 8000204:	4152      	adcs	r2, r2
 8000206:	1a41      	subs	r1, r0, r1
 8000208:	d200      	bcs.n	800020c <__udivsi3+0xf8>
 800020a:	4601      	mov	r1, r0
 800020c:	4152      	adcs	r2, r2
 800020e:	4610      	mov	r0, r2
 8000210:	4770      	bx	lr
 8000212:	e7ff      	b.n	8000214 <__udivsi3+0x100>
 8000214:	b501      	push	{r0, lr}
 8000216:	2000      	movs	r0, #0
 8000218:	f000 f8f0 	bl	80003fc <__aeabi_idiv0>
 800021c:	bd02      	pop	{r1, pc}
 800021e:	46c0      	nop			; (mov r8, r8)

08000220 <__aeabi_uidivmod>:
 8000220:	2900      	cmp	r1, #0
 8000222:	d0f7      	beq.n	8000214 <__udivsi3+0x100>
 8000224:	e776      	b.n	8000114 <__udivsi3>
 8000226:	4770      	bx	lr

08000228 <__divsi3>:
 8000228:	4603      	mov	r3, r0
 800022a:	430b      	orrs	r3, r1
 800022c:	d47f      	bmi.n	800032e <__divsi3+0x106>
 800022e:	2200      	movs	r2, #0
 8000230:	0843      	lsrs	r3, r0, #1
 8000232:	428b      	cmp	r3, r1
 8000234:	d374      	bcc.n	8000320 <__divsi3+0xf8>
 8000236:	0903      	lsrs	r3, r0, #4
 8000238:	428b      	cmp	r3, r1
 800023a:	d35f      	bcc.n	80002fc <__divsi3+0xd4>
 800023c:	0a03      	lsrs	r3, r0, #8
 800023e:	428b      	cmp	r3, r1
 8000240:	d344      	bcc.n	80002cc <__divsi3+0xa4>
 8000242:	0b03      	lsrs	r3, r0, #12
 8000244:	428b      	cmp	r3, r1
 8000246:	d328      	bcc.n	800029a <__divsi3+0x72>
 8000248:	0c03      	lsrs	r3, r0, #16
 800024a:	428b      	cmp	r3, r1
 800024c:	d30d      	bcc.n	800026a <__divsi3+0x42>
 800024e:	22ff      	movs	r2, #255	; 0xff
 8000250:	0209      	lsls	r1, r1, #8
 8000252:	ba12      	rev	r2, r2
 8000254:	0c03      	lsrs	r3, r0, #16
 8000256:	428b      	cmp	r3, r1
 8000258:	d302      	bcc.n	8000260 <__divsi3+0x38>
 800025a:	1212      	asrs	r2, r2, #8
 800025c:	0209      	lsls	r1, r1, #8
 800025e:	d065      	beq.n	800032c <__divsi3+0x104>
 8000260:	0b03      	lsrs	r3, r0, #12
 8000262:	428b      	cmp	r3, r1
 8000264:	d319      	bcc.n	800029a <__divsi3+0x72>
 8000266:	e000      	b.n	800026a <__divsi3+0x42>
 8000268:	0a09      	lsrs	r1, r1, #8
 800026a:	0bc3      	lsrs	r3, r0, #15
 800026c:	428b      	cmp	r3, r1
 800026e:	d301      	bcc.n	8000274 <__divsi3+0x4c>
 8000270:	03cb      	lsls	r3, r1, #15
 8000272:	1ac0      	subs	r0, r0, r3
 8000274:	4152      	adcs	r2, r2
 8000276:	0b83      	lsrs	r3, r0, #14
 8000278:	428b      	cmp	r3, r1
 800027a:	d301      	bcc.n	8000280 <__divsi3+0x58>
 800027c:	038b      	lsls	r3, r1, #14
 800027e:	1ac0      	subs	r0, r0, r3
 8000280:	4152      	adcs	r2, r2
 8000282:	0b43      	lsrs	r3, r0, #13
 8000284:	428b      	cmp	r3, r1
 8000286:	d301      	bcc.n	800028c <__divsi3+0x64>
 8000288:	034b      	lsls	r3, r1, #13
 800028a:	1ac0      	subs	r0, r0, r3
 800028c:	4152      	adcs	r2, r2
 800028e:	0b03      	lsrs	r3, r0, #12
 8000290:	428b      	cmp	r3, r1
 8000292:	d301      	bcc.n	8000298 <__divsi3+0x70>
 8000294:	030b      	lsls	r3, r1, #12
 8000296:	1ac0      	subs	r0, r0, r3
 8000298:	4152      	adcs	r2, r2
 800029a:	0ac3      	lsrs	r3, r0, #11
 800029c:	428b      	cmp	r3, r1
 800029e:	d301      	bcc.n	80002a4 <__divsi3+0x7c>
 80002a0:	02cb      	lsls	r3, r1, #11
 80002a2:	1ac0      	subs	r0, r0, r3
 80002a4:	4152      	adcs	r2, r2
 80002a6:	0a83      	lsrs	r3, r0, #10
 80002a8:	428b      	cmp	r3, r1
 80002aa:	d301      	bcc.n	80002b0 <__divsi3+0x88>
 80002ac:	028b      	lsls	r3, r1, #10
 80002ae:	1ac0      	subs	r0, r0, r3
 80002b0:	4152      	adcs	r2, r2
 80002b2:	0a43      	lsrs	r3, r0, #9
 80002b4:	428b      	cmp	r3, r1
 80002b6:	d301      	bcc.n	80002bc <__divsi3+0x94>
 80002b8:	024b      	lsls	r3, r1, #9
 80002ba:	1ac0      	subs	r0, r0, r3
 80002bc:	4152      	adcs	r2, r2
 80002be:	0a03      	lsrs	r3, r0, #8
 80002c0:	428b      	cmp	r3, r1
 80002c2:	d301      	bcc.n	80002c8 <__divsi3+0xa0>
 80002c4:	020b      	lsls	r3, r1, #8
 80002c6:	1ac0      	subs	r0, r0, r3
 80002c8:	4152      	adcs	r2, r2
 80002ca:	d2cd      	bcs.n	8000268 <__divsi3+0x40>
 80002cc:	09c3      	lsrs	r3, r0, #7
 80002ce:	428b      	cmp	r3, r1
 80002d0:	d301      	bcc.n	80002d6 <__divsi3+0xae>
 80002d2:	01cb      	lsls	r3, r1, #7
 80002d4:	1ac0      	subs	r0, r0, r3
 80002d6:	4152      	adcs	r2, r2
 80002d8:	0983      	lsrs	r3, r0, #6
 80002da:	428b      	cmp	r3, r1
 80002dc:	d301      	bcc.n	80002e2 <__divsi3+0xba>
 80002de:	018b      	lsls	r3, r1, #6
 80002e0:	1ac0      	subs	r0, r0, r3
 80002e2:	4152      	adcs	r2, r2
 80002e4:	0943      	lsrs	r3, r0, #5
 80002e6:	428b      	cmp	r3, r1
 80002e8:	d301      	bcc.n	80002ee <__divsi3+0xc6>
 80002ea:	014b      	lsls	r3, r1, #5
 80002ec:	1ac0      	subs	r0, r0, r3
 80002ee:	4152      	adcs	r2, r2
 80002f0:	0903      	lsrs	r3, r0, #4
 80002f2:	428b      	cmp	r3, r1
 80002f4:	d301      	bcc.n	80002fa <__divsi3+0xd2>
 80002f6:	010b      	lsls	r3, r1, #4
 80002f8:	1ac0      	subs	r0, r0, r3
 80002fa:	4152      	adcs	r2, r2
 80002fc:	08c3      	lsrs	r3, r0, #3
 80002fe:	428b      	cmp	r3, r1
 8000300:	d301      	bcc.n	8000306 <__divsi3+0xde>
 8000302:	00cb      	lsls	r3, r1, #3
 8000304:	1ac0      	subs	r0, r0, r3
 8000306:	4152      	adcs	r2, r2
 8000308:	0883      	lsrs	r3, r0, #2
 800030a:	428b      	cmp	r3, r1
 800030c:	d301      	bcc.n	8000312 <__divsi3+0xea>
 800030e:	008b      	lsls	r3, r1, #2
 8000310:	1ac0      	subs	r0, r0, r3
 8000312:	4152      	adcs	r2, r2
 8000314:	0843      	lsrs	r3, r0, #1
 8000316:	428b      	cmp	r3, r1
 8000318:	d301      	bcc.n	800031e <__divsi3+0xf6>
 800031a:	004b      	lsls	r3, r1, #1
 800031c:	1ac0      	subs	r0, r0, r3
 800031e:	4152      	adcs	r2, r2
 8000320:	1a41      	subs	r1, r0, r1
 8000322:	d200      	bcs.n	8000326 <__divsi3+0xfe>
 8000324:	4601      	mov	r1, r0
 8000326:	4152      	adcs	r2, r2
 8000328:	4610      	mov	r0, r2
 800032a:	4770      	bx	lr
 800032c:	e05d      	b.n	80003ea <__divsi3+0x1c2>
 800032e:	0fca      	lsrs	r2, r1, #31
 8000330:	d000      	beq.n	8000334 <__divsi3+0x10c>
 8000332:	4249      	negs	r1, r1
 8000334:	1003      	asrs	r3, r0, #32
 8000336:	d300      	bcc.n	800033a <__divsi3+0x112>
 8000338:	4240      	negs	r0, r0
 800033a:	4053      	eors	r3, r2
 800033c:	2200      	movs	r2, #0
 800033e:	469c      	mov	ip, r3
 8000340:	0903      	lsrs	r3, r0, #4
 8000342:	428b      	cmp	r3, r1
 8000344:	d32d      	bcc.n	80003a2 <__divsi3+0x17a>
 8000346:	0a03      	lsrs	r3, r0, #8
 8000348:	428b      	cmp	r3, r1
 800034a:	d312      	bcc.n	8000372 <__divsi3+0x14a>
 800034c:	22fc      	movs	r2, #252	; 0xfc
 800034e:	0189      	lsls	r1, r1, #6
 8000350:	ba12      	rev	r2, r2
 8000352:	0a03      	lsrs	r3, r0, #8
 8000354:	428b      	cmp	r3, r1
 8000356:	d30c      	bcc.n	8000372 <__divsi3+0x14a>
 8000358:	0189      	lsls	r1, r1, #6
 800035a:	1192      	asrs	r2, r2, #6
 800035c:	428b      	cmp	r3, r1
 800035e:	d308      	bcc.n	8000372 <__divsi3+0x14a>
 8000360:	0189      	lsls	r1, r1, #6
 8000362:	1192      	asrs	r2, r2, #6
 8000364:	428b      	cmp	r3, r1
 8000366:	d304      	bcc.n	8000372 <__divsi3+0x14a>
 8000368:	0189      	lsls	r1, r1, #6
 800036a:	d03a      	beq.n	80003e2 <__divsi3+0x1ba>
 800036c:	1192      	asrs	r2, r2, #6
 800036e:	e000      	b.n	8000372 <__divsi3+0x14a>
 8000370:	0989      	lsrs	r1, r1, #6
 8000372:	09c3      	lsrs	r3, r0, #7
 8000374:	428b      	cmp	r3, r1
 8000376:	d301      	bcc.n	800037c <__divsi3+0x154>
 8000378:	01cb      	lsls	r3, r1, #7
 800037a:	1ac0      	subs	r0, r0, r3
 800037c:	4152      	adcs	r2, r2
 800037e:	0983      	lsrs	r3, r0, #6
 8000380:	428b      	cmp	r3, r1
 8000382:	d301      	bcc.n	8000388 <__divsi3+0x160>
 8000384:	018b      	lsls	r3, r1, #6
 8000386:	1ac0      	subs	r0, r0, r3
 8000388:	4152      	adcs	r2, r2
 800038a:	0943      	lsrs	r3, r0, #5
 800038c:	428b      	cmp	r3, r1
 800038e:	d301      	bcc.n	8000394 <__divsi3+0x16c>
 8000390:	014b      	lsls	r3, r1, #5
 8000392:	1ac0      	subs	r0, r0, r3
 8000394:	4152      	adcs	r2, r2
 8000396:	0903      	lsrs	r3, r0, #4
 8000398:	428b      	cmp	r3, r1
 800039a:	d301      	bcc.n	80003a0 <__divsi3+0x178>
 800039c:	010b      	lsls	r3, r1, #4
 800039e:	1ac0      	subs	r0, r0, r3
 80003a0:	4152      	adcs	r2, r2
 80003a2:	08c3      	lsrs	r3, r0, #3
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d301      	bcc.n	80003ac <__divsi3+0x184>
 80003a8:	00cb      	lsls	r3, r1, #3
 80003aa:	1ac0      	subs	r0, r0, r3
 80003ac:	4152      	adcs	r2, r2
 80003ae:	0883      	lsrs	r3, r0, #2
 80003b0:	428b      	cmp	r3, r1
 80003b2:	d301      	bcc.n	80003b8 <__divsi3+0x190>
 80003b4:	008b      	lsls	r3, r1, #2
 80003b6:	1ac0      	subs	r0, r0, r3
 80003b8:	4152      	adcs	r2, r2
 80003ba:	d2d9      	bcs.n	8000370 <__divsi3+0x148>
 80003bc:	0843      	lsrs	r3, r0, #1
 80003be:	428b      	cmp	r3, r1
 80003c0:	d301      	bcc.n	80003c6 <__divsi3+0x19e>
 80003c2:	004b      	lsls	r3, r1, #1
 80003c4:	1ac0      	subs	r0, r0, r3
 80003c6:	4152      	adcs	r2, r2
 80003c8:	1a41      	subs	r1, r0, r1
 80003ca:	d200      	bcs.n	80003ce <__divsi3+0x1a6>
 80003cc:	4601      	mov	r1, r0
 80003ce:	4663      	mov	r3, ip
 80003d0:	4152      	adcs	r2, r2
 80003d2:	105b      	asrs	r3, r3, #1
 80003d4:	4610      	mov	r0, r2
 80003d6:	d301      	bcc.n	80003dc <__divsi3+0x1b4>
 80003d8:	4240      	negs	r0, r0
 80003da:	2b00      	cmp	r3, #0
 80003dc:	d500      	bpl.n	80003e0 <__divsi3+0x1b8>
 80003de:	4249      	negs	r1, r1
 80003e0:	4770      	bx	lr
 80003e2:	4663      	mov	r3, ip
 80003e4:	105b      	asrs	r3, r3, #1
 80003e6:	d300      	bcc.n	80003ea <__divsi3+0x1c2>
 80003e8:	4240      	negs	r0, r0
 80003ea:	b501      	push	{r0, lr}
 80003ec:	2000      	movs	r0, #0
 80003ee:	f000 f805 	bl	80003fc <__aeabi_idiv0>
 80003f2:	bd02      	pop	{r1, pc}

080003f4 <__aeabi_idivmod>:
 80003f4:	2900      	cmp	r1, #0
 80003f6:	d0f8      	beq.n	80003ea <__divsi3+0x1c2>
 80003f8:	e716      	b.n	8000228 <__divsi3>
 80003fa:	4770      	bx	lr

080003fc <__aeabi_idiv0>:
 80003fc:	4770      	bx	lr
 80003fe:	46c0      	nop			; (mov r8, r8)

08000400 <eeprom_1byte_read>:
	data |= EEPROM_Read(address);

	return data;
}
*/
uint8_t eeprom_1byte_read(uint8_t eaddress) {
 8000400:	b590      	push	{r4, r7, lr}
 8000402:	b085      	sub	sp, #20
 8000404:	af00      	add	r7, sp, #0
 8000406:	0002      	movs	r2, r0
 8000408:	1dfb      	adds	r3, r7, #7
 800040a:	701a      	strb	r2, [r3, #0]
	char  buff[2];
	buff[0] = eaddress;
 800040c:	240c      	movs	r4, #12
 800040e:	193b      	adds	r3, r7, r4
 8000410:	1dfa      	adds	r2, r7, #7
 8000412:	7812      	ldrb	r2, [r2, #0]
 8000414:	701a      	strb	r2, [r3, #0]
	i2c1_byteTransmit(EEPROM_CHIP_ADDR << 1, buff,1);
 8000416:	193b      	adds	r3, r7, r4
 8000418:	2201      	movs	r2, #1
 800041a:	0019      	movs	r1, r3
 800041c:	20a0      	movs	r0, #160	; 0xa0
 800041e:	f000 f9b3 	bl	8000788 <i2c1_byteTransmit>
	buff[1] = i2c1_byteReceive(EEPROM_CHIP_ADDR << 1 | 1,1);
 8000422:	2101      	movs	r1, #1
 8000424:	20a1      	movs	r0, #161	; 0xa1
 8000426:	f000 f957 	bl	80006d8 <i2c1_byteReceive>
 800042a:	0003      	movs	r3, r0
 800042c:	001a      	movs	r2, r3
 800042e:	193b      	adds	r3, r7, r4
 8000430:	705a      	strb	r2, [r3, #1]
	return buff[1];
 8000432:	193b      	adds	r3, r7, r4
 8000434:	785b      	ldrb	r3, [r3, #1]
}
 8000436:	0018      	movs	r0, r3
 8000438:	46bd      	mov	sp, r7
 800043a:	b005      	add	sp, #20
 800043c:	bd90      	pop	{r4, r7, pc}

0800043e <eeprom_1byte_write>:

void eeprom_1byte_write(uint8_t address, uint8_t data) {
 800043e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000440:	b085      	sub	sp, #20
 8000442:	af00      	add	r7, sp, #0
 8000444:	0002      	movs	r2, r0
 8000446:	1dfb      	adds	r3, r7, #7
 8000448:	701a      	strb	r2, [r3, #0]
 800044a:	1dbb      	adds	r3, r7, #6
 800044c:	1c0a      	adds	r2, r1, #0
 800044e:	701a      	strb	r2, [r3, #0]
	char  buff[2];
	uint8_t stored_data;
	buff[0] = address;
 8000450:	250c      	movs	r5, #12
 8000452:	197b      	adds	r3, r7, r5
 8000454:	1dfa      	adds	r2, r7, #7
 8000456:	7812      	ldrb	r2, [r2, #0]
 8000458:	701a      	strb	r2, [r3, #0]
	buff[1] = data;
 800045a:	197b      	adds	r3, r7, r5
 800045c:	1dba      	adds	r2, r7, #6
 800045e:	7812      	ldrb	r2, [r2, #0]
 8000460:	705a      	strb	r2, [r3, #1]

	stored_data = eeprom_1byte_read(address);
 8000462:	260f      	movs	r6, #15
 8000464:	19bc      	adds	r4, r7, r6
 8000466:	1dfb      	adds	r3, r7, #7
 8000468:	781b      	ldrb	r3, [r3, #0]
 800046a:	0018      	movs	r0, r3
 800046c:	f7ff ffc8 	bl	8000400 <eeprom_1byte_read>
 8000470:	0003      	movs	r3, r0
 8000472:	7023      	strb	r3, [r4, #0]
	if (stored_data != data)
 8000474:	19ba      	adds	r2, r7, r6
 8000476:	1dbb      	adds	r3, r7, #6
 8000478:	7812      	ldrb	r2, [r2, #0]
 800047a:	781b      	ldrb	r3, [r3, #0]
 800047c:	429a      	cmp	r2, r3
 800047e:	d005      	beq.n	800048c <eeprom_1byte_write+0x4e>
		i2c1_byteTransmit(EEPROM_CHIP_ADDR << 1, buff,2);
 8000480:	197b      	adds	r3, r7, r5
 8000482:	2202      	movs	r2, #2
 8000484:	0019      	movs	r1, r3
 8000486:	20a0      	movs	r0, #160	; 0xa0
 8000488:	f000 f97e 	bl	8000788 <i2c1_byteTransmit>
}
 800048c:	46c0      	nop			; (mov r8, r8)
 800048e:	46bd      	mov	sp, r7
 8000490:	b005      	add	sp, #20
 8000492:	bdf0      	pop	{r4, r5, r6, r7, pc}

08000494 <eeprom_2byte_write>:

void eeprom_2byte_write(uint8_t addr, uint16_t data) {
 8000494:	b580      	push	{r7, lr}
 8000496:	b082      	sub	sp, #8
 8000498:	af00      	add	r7, sp, #0
 800049a:	0002      	movs	r2, r0
 800049c:	1dfb      	adds	r3, r7, #7
 800049e:	701a      	strb	r2, [r3, #0]
 80004a0:	1d3b      	adds	r3, r7, #4
 80004a2:	1c0a      	adds	r2, r1, #0
 80004a4:	801a      	strh	r2, [r3, #0]
	eeprom_1byte_write(addr, data & 0xff);
 80004a6:	1d3b      	adds	r3, r7, #4
 80004a8:	881b      	ldrh	r3, [r3, #0]
 80004aa:	b2da      	uxtb	r2, r3
 80004ac:	1dfb      	adds	r3, r7, #7
 80004ae:	781b      	ldrb	r3, [r3, #0]
 80004b0:	0011      	movs	r1, r2
 80004b2:	0018      	movs	r0, r3
 80004b4:	f7ff ffc3 	bl	800043e <eeprom_1byte_write>
	HAL_Delay(5);
 80004b8:	2005      	movs	r0, #5
 80004ba:	f001 fe4f 	bl	800215c <HAL_Delay>
	eeprom_1byte_write(addr + 1, data >> 8);
 80004be:	1dfb      	adds	r3, r7, #7
 80004c0:	781b      	ldrb	r3, [r3, #0]
 80004c2:	3301      	adds	r3, #1
 80004c4:	b2da      	uxtb	r2, r3
 80004c6:	1d3b      	adds	r3, r7, #4
 80004c8:	881b      	ldrh	r3, [r3, #0]
 80004ca:	0a1b      	lsrs	r3, r3, #8
 80004cc:	b29b      	uxth	r3, r3
 80004ce:	b2db      	uxtb	r3, r3
 80004d0:	0019      	movs	r1, r3
 80004d2:	0010      	movs	r0, r2
 80004d4:	f7ff ffb3 	bl	800043e <eeprom_1byte_write>
}
 80004d8:	46c0      	nop			; (mov r8, r8)
 80004da:	46bd      	mov	sp, r7
 80004dc:	b002      	add	sp, #8
 80004de:	bd80      	pop	{r7, pc}

080004e0 <eeprom_2byte_read>:

uint16_t eeprom_2byte_read(uint8_t address) {
 80004e0:	b590      	push	{r4, r7, lr}
 80004e2:	b085      	sub	sp, #20
 80004e4:	af00      	add	r7, sp, #0
 80004e6:	0002      	movs	r2, r0
 80004e8:	1dfb      	adds	r3, r7, #7
 80004ea:	701a      	strb	r2, [r3, #0]
	uint16_t data = 0;
 80004ec:	240e      	movs	r4, #14
 80004ee:	193b      	adds	r3, r7, r4
 80004f0:	2200      	movs	r2, #0
 80004f2:	801a      	strh	r2, [r3, #0]
	data = eeprom_1byte_read(address + 1) << 8;
 80004f4:	1dfb      	adds	r3, r7, #7
 80004f6:	781b      	ldrb	r3, [r3, #0]
 80004f8:	3301      	adds	r3, #1
 80004fa:	b2db      	uxtb	r3, r3
 80004fc:	0018      	movs	r0, r3
 80004fe:	f7ff ff7f 	bl	8000400 <eeprom_1byte_read>
 8000502:	0003      	movs	r3, r0
 8000504:	b29a      	uxth	r2, r3
 8000506:	193b      	adds	r3, r7, r4
 8000508:	0212      	lsls	r2, r2, #8
 800050a:	801a      	strh	r2, [r3, #0]
	HAL_Delay(5);
 800050c:	2005      	movs	r0, #5
 800050e:	f001 fe25 	bl	800215c <HAL_Delay>
	data |= eeprom_1byte_read(address);
 8000512:	1dfb      	adds	r3, r7, #7
 8000514:	781b      	ldrb	r3, [r3, #0]
 8000516:	0018      	movs	r0, r3
 8000518:	f7ff ff72 	bl	8000400 <eeprom_1byte_read>
 800051c:	0003      	movs	r3, r0
 800051e:	b299      	uxth	r1, r3
 8000520:	193b      	adds	r3, r7, r4
 8000522:	193a      	adds	r2, r7, r4
 8000524:	8812      	ldrh	r2, [r2, #0]
 8000526:	430a      	orrs	r2, r1
 8000528:	801a      	strh	r2, [r3, #0]

	return data;
 800052a:	193b      	adds	r3, r7, r4
 800052c:	881b      	ldrh	r3, [r3, #0]
}
 800052e:	0018      	movs	r0, r3
 8000530:	46bd      	mov	sp, r7
 8000532:	b005      	add	sp, #20
 8000534:	bd90      	pop	{r4, r7, pc}
	...

08000538 <i2c1_init>:
 *      Author: sigmadev
 */

#include "i2c1.h"

void i2c1_init() {
 8000538:	b580      	push	{r7, lr}
 800053a:	af00      	add	r7, sp, #0

	/* SCL PB6 as alternate */

	CLEAR_BIT(GPIOB->MODER, GPIO_MODER_MODE6_0);
 800053c:	4b5c      	ldr	r3, [pc, #368]	; (80006b0 <i2c1_init+0x178>)
 800053e:	681a      	ldr	r2, [r3, #0]
 8000540:	4b5b      	ldr	r3, [pc, #364]	; (80006b0 <i2c1_init+0x178>)
 8000542:	495c      	ldr	r1, [pc, #368]	; (80006b4 <i2c1_init+0x17c>)
 8000544:	400a      	ands	r2, r1
 8000546:	601a      	str	r2, [r3, #0]
	SET_BIT(GPIOB->MODER, GPIO_MODER_MODE6_1);
 8000548:	4b59      	ldr	r3, [pc, #356]	; (80006b0 <i2c1_init+0x178>)
 800054a:	681a      	ldr	r2, [r3, #0]
 800054c:	4b58      	ldr	r3, [pc, #352]	; (80006b0 <i2c1_init+0x178>)
 800054e:	2180      	movs	r1, #128	; 0x80
 8000550:	0189      	lsls	r1, r1, #6
 8000552:	430a      	orrs	r2, r1
 8000554:	601a      	str	r2, [r3, #0]
	/* SDC PB7 as alternate */
	CLEAR_BIT(GPIOB->MODER, GPIO_MODER_MODE7_0);
 8000556:	4b56      	ldr	r3, [pc, #344]	; (80006b0 <i2c1_init+0x178>)
 8000558:	681a      	ldr	r2, [r3, #0]
 800055a:	4b55      	ldr	r3, [pc, #340]	; (80006b0 <i2c1_init+0x178>)
 800055c:	4956      	ldr	r1, [pc, #344]	; (80006b8 <i2c1_init+0x180>)
 800055e:	400a      	ands	r2, r1
 8000560:	601a      	str	r2, [r3, #0]
	SET_BIT(GPIOB->MODER, GPIO_MODER_MODE7_1);
 8000562:	4b53      	ldr	r3, [pc, #332]	; (80006b0 <i2c1_init+0x178>)
 8000564:	681a      	ldr	r2, [r3, #0]
 8000566:	4b52      	ldr	r3, [pc, #328]	; (80006b0 <i2c1_init+0x178>)
 8000568:	2180      	movs	r1, #128	; 0x80
 800056a:	0209      	lsls	r1, r1, #8
 800056c:	430a      	orrs	r2, r1
 800056e:	601a      	str	r2, [r3, #0]
	/* SCL PB6 as open-drain */
	SET_BIT(GPIOB->OTYPER, GPIO_OTYPER_OT6);
 8000570:	4b4f      	ldr	r3, [pc, #316]	; (80006b0 <i2c1_init+0x178>)
 8000572:	685a      	ldr	r2, [r3, #4]
 8000574:	4b4e      	ldr	r3, [pc, #312]	; (80006b0 <i2c1_init+0x178>)
 8000576:	2140      	movs	r1, #64	; 0x40
 8000578:	430a      	orrs	r2, r1
 800057a:	605a      	str	r2, [r3, #4]
	/* SDC PB7 as open-drain */
	SET_BIT(GPIOB->OTYPER, GPIO_OTYPER_OT7);
 800057c:	4b4c      	ldr	r3, [pc, #304]	; (80006b0 <i2c1_init+0x178>)
 800057e:	685a      	ldr	r2, [r3, #4]
 8000580:	4b4b      	ldr	r3, [pc, #300]	; (80006b0 <i2c1_init+0x178>)
 8000582:	2180      	movs	r1, #128	; 0x80
 8000584:	430a      	orrs	r2, r1
 8000586:	605a      	str	r2, [r3, #4]
	/* SCL PB6 High Speed output */
	SET_BIT(GPIOB->OSPEEDR, GPIO_OSPEEDR_OSPEED6_0);
 8000588:	4b49      	ldr	r3, [pc, #292]	; (80006b0 <i2c1_init+0x178>)
 800058a:	689a      	ldr	r2, [r3, #8]
 800058c:	4b48      	ldr	r3, [pc, #288]	; (80006b0 <i2c1_init+0x178>)
 800058e:	2180      	movs	r1, #128	; 0x80
 8000590:	0149      	lsls	r1, r1, #5
 8000592:	430a      	orrs	r2, r1
 8000594:	609a      	str	r2, [r3, #8]
	SET_BIT(GPIOB->OSPEEDR, GPIO_OSPEEDR_OSPEED6_1);
 8000596:	4b46      	ldr	r3, [pc, #280]	; (80006b0 <i2c1_init+0x178>)
 8000598:	689a      	ldr	r2, [r3, #8]
 800059a:	4b45      	ldr	r3, [pc, #276]	; (80006b0 <i2c1_init+0x178>)
 800059c:	2180      	movs	r1, #128	; 0x80
 800059e:	0189      	lsls	r1, r1, #6
 80005a0:	430a      	orrs	r2, r1
 80005a2:	609a      	str	r2, [r3, #8]
	/* SDC PB7  High Speed output */
	SET_BIT(GPIOB->OSPEEDR, GPIO_OSPEEDR_OSPEED7_0);
 80005a4:	4b42      	ldr	r3, [pc, #264]	; (80006b0 <i2c1_init+0x178>)
 80005a6:	689a      	ldr	r2, [r3, #8]
 80005a8:	4b41      	ldr	r3, [pc, #260]	; (80006b0 <i2c1_init+0x178>)
 80005aa:	2180      	movs	r1, #128	; 0x80
 80005ac:	01c9      	lsls	r1, r1, #7
 80005ae:	430a      	orrs	r2, r1
 80005b0:	609a      	str	r2, [r3, #8]
	SET_BIT(GPIOB->OSPEEDR, GPIO_OSPEEDR_OSPEED7_1);
 80005b2:	4b3f      	ldr	r3, [pc, #252]	; (80006b0 <i2c1_init+0x178>)
 80005b4:	689a      	ldr	r2, [r3, #8]
 80005b6:	4b3e      	ldr	r3, [pc, #248]	; (80006b0 <i2c1_init+0x178>)
 80005b8:	2180      	movs	r1, #128	; 0x80
 80005ba:	0209      	lsls	r1, r1, #8
 80005bc:	430a      	orrs	r2, r1
 80005be:	609a      	str	r2, [r3, #8]
	/* SCL PB6 as pull-up */
	CLEAR_BIT(GPIOB->PUPDR, GPIO_PUPDR_PUPD6_0);
 80005c0:	4b3b      	ldr	r3, [pc, #236]	; (80006b0 <i2c1_init+0x178>)
 80005c2:	68da      	ldr	r2, [r3, #12]
 80005c4:	4b3a      	ldr	r3, [pc, #232]	; (80006b0 <i2c1_init+0x178>)
 80005c6:	493b      	ldr	r1, [pc, #236]	; (80006b4 <i2c1_init+0x17c>)
 80005c8:	400a      	ands	r2, r1
 80005ca:	60da      	str	r2, [r3, #12]
	SET_BIT(GPIOB->PUPDR, GPIO_PUPDR_PUPD6_1);
 80005cc:	4b38      	ldr	r3, [pc, #224]	; (80006b0 <i2c1_init+0x178>)
 80005ce:	68da      	ldr	r2, [r3, #12]
 80005d0:	4b37      	ldr	r3, [pc, #220]	; (80006b0 <i2c1_init+0x178>)
 80005d2:	2180      	movs	r1, #128	; 0x80
 80005d4:	0189      	lsls	r1, r1, #6
 80005d6:	430a      	orrs	r2, r1
 80005d8:	60da      	str	r2, [r3, #12]
	/* SDC PB7 as pull-up */
	CLEAR_BIT(GPIOB->PUPDR, GPIO_PUPDR_PUPD7_0);
 80005da:	4b35      	ldr	r3, [pc, #212]	; (80006b0 <i2c1_init+0x178>)
 80005dc:	68da      	ldr	r2, [r3, #12]
 80005de:	4b34      	ldr	r3, [pc, #208]	; (80006b0 <i2c1_init+0x178>)
 80005e0:	4935      	ldr	r1, [pc, #212]	; (80006b8 <i2c1_init+0x180>)
 80005e2:	400a      	ands	r2, r1
 80005e4:	60da      	str	r2, [r3, #12]
	SET_BIT(GPIOB->PUPDR, GPIO_PUPDR_PUPD7_1);
 80005e6:	4b32      	ldr	r3, [pc, #200]	; (80006b0 <i2c1_init+0x178>)
 80005e8:	68da      	ldr	r2, [r3, #12]
 80005ea:	4b31      	ldr	r3, [pc, #196]	; (80006b0 <i2c1_init+0x178>)
 80005ec:	2180      	movs	r1, #128	; 0x80
 80005ee:	0209      	lsls	r1, r1, #8
 80005f0:	430a      	orrs	r2, r1
 80005f2:	60da      	str	r2, [r3, #12]
	/*  PB6 as i2c SCL */
	CLEAR_BIT(GPIOB->AFR[0], GPIO_AFRL_AFSEL6_0);
 80005f4:	4b2e      	ldr	r3, [pc, #184]	; (80006b0 <i2c1_init+0x178>)
 80005f6:	6a1a      	ldr	r2, [r3, #32]
 80005f8:	4b2d      	ldr	r3, [pc, #180]	; (80006b0 <i2c1_init+0x178>)
 80005fa:	4930      	ldr	r1, [pc, #192]	; (80006bc <i2c1_init+0x184>)
 80005fc:	400a      	ands	r2, r1
 80005fe:	621a      	str	r2, [r3, #32]
	SET_BIT(GPIOB->AFR[0], GPIO_AFRL_AFSEL6_1);
 8000600:	4b2b      	ldr	r3, [pc, #172]	; (80006b0 <i2c1_init+0x178>)
 8000602:	6a1a      	ldr	r2, [r3, #32]
 8000604:	4b2a      	ldr	r3, [pc, #168]	; (80006b0 <i2c1_init+0x178>)
 8000606:	2180      	movs	r1, #128	; 0x80
 8000608:	0489      	lsls	r1, r1, #18
 800060a:	430a      	orrs	r2, r1
 800060c:	621a      	str	r2, [r3, #32]
	SET_BIT(GPIOB->AFR[0], GPIO_AFRL_AFSEL6_2);
 800060e:	4b28      	ldr	r3, [pc, #160]	; (80006b0 <i2c1_init+0x178>)
 8000610:	6a1a      	ldr	r2, [r3, #32]
 8000612:	4b27      	ldr	r3, [pc, #156]	; (80006b0 <i2c1_init+0x178>)
 8000614:	2180      	movs	r1, #128	; 0x80
 8000616:	04c9      	lsls	r1, r1, #19
 8000618:	430a      	orrs	r2, r1
 800061a:	621a      	str	r2, [r3, #32]
	CLEAR_BIT(GPIOB->AFR[0], GPIO_AFRL_AFSEL6_3);
 800061c:	4b24      	ldr	r3, [pc, #144]	; (80006b0 <i2c1_init+0x178>)
 800061e:	6a1a      	ldr	r2, [r3, #32]
 8000620:	4b23      	ldr	r3, [pc, #140]	; (80006b0 <i2c1_init+0x178>)
 8000622:	4927      	ldr	r1, [pc, #156]	; (80006c0 <i2c1_init+0x188>)
 8000624:	400a      	ands	r2, r1
 8000626:	621a      	str	r2, [r3, #32]
	/*  PB7 as i2c SDL */
	CLEAR_BIT(GPIOB->AFR[0], GPIO_AFRL_AFSEL7_0);
 8000628:	4b21      	ldr	r3, [pc, #132]	; (80006b0 <i2c1_init+0x178>)
 800062a:	6a1a      	ldr	r2, [r3, #32]
 800062c:	4b20      	ldr	r3, [pc, #128]	; (80006b0 <i2c1_init+0x178>)
 800062e:	4925      	ldr	r1, [pc, #148]	; (80006c4 <i2c1_init+0x18c>)
 8000630:	400a      	ands	r2, r1
 8000632:	621a      	str	r2, [r3, #32]
	SET_BIT(GPIOB->AFR[0], GPIO_AFRL_AFSEL7_1);
 8000634:	4b1e      	ldr	r3, [pc, #120]	; (80006b0 <i2c1_init+0x178>)
 8000636:	6a1a      	ldr	r2, [r3, #32]
 8000638:	4b1d      	ldr	r3, [pc, #116]	; (80006b0 <i2c1_init+0x178>)
 800063a:	2180      	movs	r1, #128	; 0x80
 800063c:	0589      	lsls	r1, r1, #22
 800063e:	430a      	orrs	r2, r1
 8000640:	621a      	str	r2, [r3, #32]
	SET_BIT(GPIOB->AFR[0], GPIO_AFRL_AFSEL7_2);
 8000642:	4b1b      	ldr	r3, [pc, #108]	; (80006b0 <i2c1_init+0x178>)
 8000644:	6a1a      	ldr	r2, [r3, #32]
 8000646:	4b1a      	ldr	r3, [pc, #104]	; (80006b0 <i2c1_init+0x178>)
 8000648:	2180      	movs	r1, #128	; 0x80
 800064a:	05c9      	lsls	r1, r1, #23
 800064c:	430a      	orrs	r2, r1
 800064e:	621a      	str	r2, [r3, #32]
	CLEAR_BIT(GPIOB->AFR[0], GPIO_AFRL_AFSEL7_3);
 8000650:	4b17      	ldr	r3, [pc, #92]	; (80006b0 <i2c1_init+0x178>)
 8000652:	6a1a      	ldr	r2, [r3, #32]
 8000654:	4b16      	ldr	r3, [pc, #88]	; (80006b0 <i2c1_init+0x178>)
 8000656:	0052      	lsls	r2, r2, #1
 8000658:	0852      	lsrs	r2, r2, #1
 800065a:	621a      	str	r2, [r3, #32]

	/* select normal speed */
	SET_BIT(RCC->APBENR1, RCC_APBENR1_I2C1EN);
 800065c:	4b1a      	ldr	r3, [pc, #104]	; (80006c8 <i2c1_init+0x190>)
 800065e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8000660:	4b19      	ldr	r3, [pc, #100]	; (80006c8 <i2c1_init+0x190>)
 8000662:	2180      	movs	r1, #128	; 0x80
 8000664:	0389      	lsls	r1, r1, #14
 8000666:	430a      	orrs	r2, r1
 8000668:	63da      	str	r2, [r3, #60]	; 0x3c

	/* i2c disable */
	CLEAR_BIT(I2C1->CR1, I2C_CR1_PE);
 800066a:	4b18      	ldr	r3, [pc, #96]	; (80006cc <i2c1_init+0x194>)
 800066c:	681a      	ldr	r2, [r3, #0]
 800066e:	4b17      	ldr	r3, [pc, #92]	; (80006cc <i2c1_init+0x194>)
 8000670:	2101      	movs	r1, #1
 8000672:	438a      	bics	r2, r1
 8000674:	601a      	str	r2, [r3, #0]
// 	ATOMIC_MODIFY_REG(I2C1->TIMINGR, I2C_TIMINGR_SCLDEL, 0x7);
// 	ATOMIC_MODIFY_REG(I2C1->TIMINGR, I2C_TIMINGR_SDADEL, 0x0);
// 	ATOMIC_MODIFY_REG(I2C1->TIMINGR, I2C_TIMINGR_SCLH, 0x7D);
// 	ATOMIC_MODIFY_REG(I2C1->TIMINGR, I2C_TIMINGR_SCLL, 0xBC);

	MODIFY_REG(I2C1->TIMINGR, 0X10111111U, 0X10707DBCU);
 8000676:	4b15      	ldr	r3, [pc, #84]	; (80006cc <i2c1_init+0x194>)
 8000678:	691b      	ldr	r3, [r3, #16]
 800067a:	4a15      	ldr	r2, [pc, #84]	; (80006d0 <i2c1_init+0x198>)
 800067c:	401a      	ands	r2, r3
 800067e:	4b13      	ldr	r3, [pc, #76]	; (80006cc <i2c1_init+0x194>)
 8000680:	4914      	ldr	r1, [pc, #80]	; (80006d4 <i2c1_init+0x19c>)
 8000682:	430a      	orrs	r2, r1
 8000684:	611a      	str	r2, [r3, #16]
	/*i2c Rx interrupt enable */
	SET_BIT(I2C1->CR1, I2C_CR1_RXIE);
 8000686:	4b11      	ldr	r3, [pc, #68]	; (80006cc <i2c1_init+0x194>)
 8000688:	681a      	ldr	r2, [r3, #0]
 800068a:	4b10      	ldr	r3, [pc, #64]	; (80006cc <i2c1_init+0x194>)
 800068c:	2104      	movs	r1, #4
 800068e:	430a      	orrs	r2, r1
 8000690:	601a      	str	r2, [r3, #0]
	SET_BIT(I2C1->CR1, I2C_CR1_TXIE);
 8000692:	4b0e      	ldr	r3, [pc, #56]	; (80006cc <i2c1_init+0x194>)
 8000694:	681a      	ldr	r2, [r3, #0]
 8000696:	4b0d      	ldr	r3, [pc, #52]	; (80006cc <i2c1_init+0x194>)
 8000698:	2102      	movs	r1, #2
 800069a:	430a      	orrs	r2, r1
 800069c:	601a      	str	r2, [r3, #0]

	/* i2c enable */
	SET_BIT(I2C1->CR1, I2C_CR1_PE);
 800069e:	4b0b      	ldr	r3, [pc, #44]	; (80006cc <i2c1_init+0x194>)
 80006a0:	681a      	ldr	r2, [r3, #0]
 80006a2:	4b0a      	ldr	r3, [pc, #40]	; (80006cc <i2c1_init+0x194>)
 80006a4:	2101      	movs	r1, #1
 80006a6:	430a      	orrs	r2, r1
 80006a8:	601a      	str	r2, [r3, #0]
}
 80006aa:	46c0      	nop			; (mov r8, r8)
 80006ac:	46bd      	mov	sp, r7
 80006ae:	bd80      	pop	{r7, pc}
 80006b0:	50000400 	.word	0x50000400
 80006b4:	ffffefff 	.word	0xffffefff
 80006b8:	ffffbfff 	.word	0xffffbfff
 80006bc:	feffffff 	.word	0xfeffffff
 80006c0:	f7ffffff 	.word	0xf7ffffff
 80006c4:	efffffff 	.word	0xefffffff
 80006c8:	40021000 	.word	0x40021000
 80006cc:	40005400 	.word	0x40005400
 80006d0:	ef8e8242 	.word	0xef8e8242
 80006d4:	10707dbc 	.word	0x10707dbc

080006d8 <i2c1_byteReceive>:

char i2c1_byteReceive(char saddr, uint8_t N) {
 80006d8:	b580      	push	{r7, lr}
 80006da:	b084      	sub	sp, #16
 80006dc:	af00      	add	r7, sp, #0
 80006de:	0002      	movs	r2, r0
 80006e0:	1dfb      	adds	r3, r7, #7
 80006e2:	701a      	strb	r2, [r3, #0]
 80006e4:	1dbb      	adds	r3, r7, #6
 80006e6:	1c0a      	adds	r2, r1, #0
 80006e8:	701a      	strb	r2, [r3, #0]

	i2c1_start(saddr, READ, N);
 80006ea:	1dbb      	adds	r3, r7, #6
 80006ec:	781a      	ldrb	r2, [r3, #0]
 80006ee:	1dfb      	adds	r3, r7, #7
 80006f0:	781b      	ldrb	r3, [r3, #0]
 80006f2:	2101      	movs	r1, #1
 80006f4:	0018      	movs	r0, r3
 80006f6:	f000 f897 	bl	8000828 <i2c1_start>

	char data = 0;
 80006fa:	230f      	movs	r3, #15
 80006fc:	18fb      	adds	r3, r7, r3
 80006fe:	2200      	movs	r2, #0
 8000700:	701a      	strb	r2, [r3, #0]
	for (int i = 0; i < N; i++) {
 8000702:	2300      	movs	r3, #0
 8000704:	60bb      	str	r3, [r7, #8]
 8000706:	e01a      	b.n	800073e <i2c1_byteReceive+0x66>
		while (!READ_BIT(I2C1->ISR, I2C_ISR_RXNE)
 8000708:	46c0      	nop			; (mov r8, r8)
 800070a:	4b1e      	ldr	r3, [pc, #120]	; (8000784 <i2c1_byteReceive+0xac>)
 800070c:	699b      	ldr	r3, [r3, #24]
 800070e:	2204      	movs	r2, #4
 8000710:	4013      	ands	r3, r2
				& !READ_BIT(I2C1->ISR, I2C_ISR_NACKF)) {
 8000712:	425a      	negs	r2, r3
 8000714:	4153      	adcs	r3, r2
 8000716:	b2da      	uxtb	r2, r3
 8000718:	4b1a      	ldr	r3, [pc, #104]	; (8000784 <i2c1_byteReceive+0xac>)
 800071a:	699b      	ldr	r3, [r3, #24]
 800071c:	2110      	movs	r1, #16
 800071e:	400b      	ands	r3, r1
 8000720:	4259      	negs	r1, r3
 8000722:	414b      	adcs	r3, r1
 8000724:	b2db      	uxtb	r3, r3
 8000726:	4013      	ands	r3, r2
 8000728:	b2db      	uxtb	r3, r3
		while (!READ_BIT(I2C1->ISR, I2C_ISR_RXNE)
 800072a:	2b00      	cmp	r3, #0
 800072c:	d1ed      	bne.n	800070a <i2c1_byteReceive+0x32>
		}
		data = READ_REG(I2C1->RXDR);
 800072e:	4b15      	ldr	r3, [pc, #84]	; (8000784 <i2c1_byteReceive+0xac>)
 8000730:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000732:	230f      	movs	r3, #15
 8000734:	18fb      	adds	r3, r7, r3
 8000736:	701a      	strb	r2, [r3, #0]
	for (int i = 0; i < N; i++) {
 8000738:	68bb      	ldr	r3, [r7, #8]
 800073a:	3301      	adds	r3, #1
 800073c:	60bb      	str	r3, [r7, #8]
 800073e:	1dbb      	adds	r3, r7, #6
 8000740:	781b      	ldrb	r3, [r3, #0]
 8000742:	68ba      	ldr	r2, [r7, #8]
 8000744:	429a      	cmp	r2, r3
 8000746:	dbdf      	blt.n	8000708 <i2c1_byteReceive+0x30>

	}
	while (!(READ_BIT(I2C1->ISR, I2C_ISR_STOPF)
 8000748:	46c0      	nop			; (mov r8, r8)
 800074a:	4b0e      	ldr	r3, [pc, #56]	; (8000784 <i2c1_byteReceive+0xac>)
 800074c:	699b      	ldr	r3, [r3, #24]
 800074e:	2220      	movs	r2, #32
 8000750:	401a      	ands	r2, r3
			| READ_BIT(I2C1->ISR, I2C_ISR_NACKF))) {
 8000752:	4b0c      	ldr	r3, [pc, #48]	; (8000784 <i2c1_byteReceive+0xac>)
 8000754:	699b      	ldr	r3, [r3, #24]
 8000756:	2110      	movs	r1, #16
 8000758:	400b      	ands	r3, r1
 800075a:	4313      	orrs	r3, r2
	while (!(READ_BIT(I2C1->ISR, I2C_ISR_STOPF)
 800075c:	d0f5      	beq.n	800074a <i2c1_byteReceive+0x72>
	}
	SET_BIT(I2C1->ISR, I2C_ICR_STOPCF);
 800075e:	4b09      	ldr	r3, [pc, #36]	; (8000784 <i2c1_byteReceive+0xac>)
 8000760:	699a      	ldr	r2, [r3, #24]
 8000762:	4b08      	ldr	r3, [pc, #32]	; (8000784 <i2c1_byteReceive+0xac>)
 8000764:	2120      	movs	r1, #32
 8000766:	430a      	orrs	r2, r1
 8000768:	619a      	str	r2, [r3, #24]
	SET_BIT(I2C1->ISR, I2C_ICR_NACKCF);
 800076a:	4b06      	ldr	r3, [pc, #24]	; (8000784 <i2c1_byteReceive+0xac>)
 800076c:	699a      	ldr	r2, [r3, #24]
 800076e:	4b05      	ldr	r3, [pc, #20]	; (8000784 <i2c1_byteReceive+0xac>)
 8000770:	2110      	movs	r1, #16
 8000772:	430a      	orrs	r2, r1
 8000774:	619a      	str	r2, [r3, #24]

	return data;
 8000776:	230f      	movs	r3, #15
 8000778:	18fb      	adds	r3, r7, r3
 800077a:	781b      	ldrb	r3, [r3, #0]
}
 800077c:	0018      	movs	r0, r3
 800077e:	46bd      	mov	sp, r7
 8000780:	b004      	add	sp, #16
 8000782:	bd80      	pop	{r7, pc}
 8000784:	40005400 	.word	0x40005400

08000788 <i2c1_byteTransmit>:

void i2c1_byteTransmit(char saddr, char *data, uint8_t N) {
 8000788:	b580      	push	{r7, lr}
 800078a:	b084      	sub	sp, #16
 800078c:	af00      	add	r7, sp, #0
 800078e:	6039      	str	r1, [r7, #0]
 8000790:	0011      	movs	r1, r2
 8000792:	1dfb      	adds	r3, r7, #7
 8000794:	1c02      	adds	r2, r0, #0
 8000796:	701a      	strb	r2, [r3, #0]
 8000798:	1dbb      	adds	r3, r7, #6
 800079a:	1c0a      	adds	r2, r1, #0
 800079c:	701a      	strb	r2, [r3, #0]
	i2c1_start(saddr, WRITE, N);
 800079e:	1dbb      	adds	r3, r7, #6
 80007a0:	781a      	ldrb	r2, [r3, #0]
 80007a2:	1dfb      	adds	r3, r7, #7
 80007a4:	781b      	ldrb	r3, [r3, #0]
 80007a6:	2100      	movs	r1, #0
 80007a8:	0018      	movs	r0, r3
 80007aa:	f000 f83d 	bl	8000828 <i2c1_start>

	for (int i = 0; i < N; i++) {
 80007ae:	2300      	movs	r3, #0
 80007b0:	60fb      	str	r3, [r7, #12]
 80007b2:	e022      	b.n	80007fa <i2c1_byteTransmit+0x72>
		while (!READ_BIT(I2C1->ISR, I2C_ISR_TXIS)
 80007b4:	46c0      	nop			; (mov r8, r8)
 80007b6:	4b1b      	ldr	r3, [pc, #108]	; (8000824 <i2c1_byteTransmit+0x9c>)
 80007b8:	699b      	ldr	r3, [r3, #24]
 80007ba:	2202      	movs	r2, #2
 80007bc:	4013      	ands	r3, r2
				& !READ_BIT(I2C1->ISR, I2C_ISR_NACKF)) {
 80007be:	425a      	negs	r2, r3
 80007c0:	4153      	adcs	r3, r2
 80007c2:	b2da      	uxtb	r2, r3
 80007c4:	4b17      	ldr	r3, [pc, #92]	; (8000824 <i2c1_byteTransmit+0x9c>)
 80007c6:	699b      	ldr	r3, [r3, #24]
 80007c8:	2110      	movs	r1, #16
 80007ca:	400b      	ands	r3, r1
 80007cc:	4259      	negs	r1, r3
 80007ce:	414b      	adcs	r3, r1
 80007d0:	b2db      	uxtb	r3, r3
 80007d2:	4013      	ands	r3, r2
 80007d4:	b2db      	uxtb	r3, r3
		while (!READ_BIT(I2C1->ISR, I2C_ISR_TXIS)
 80007d6:	2b00      	cmp	r3, #0
 80007d8:	d1ed      	bne.n	80007b6 <i2c1_byteTransmit+0x2e>
		}
		MODIFY_REG(I2C1->TXDR, I2C_TXDR_TXDATA, data[i]);
 80007da:	4b12      	ldr	r3, [pc, #72]	; (8000824 <i2c1_byteTransmit+0x9c>)
 80007dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80007de:	22ff      	movs	r2, #255	; 0xff
 80007e0:	4393      	bics	r3, r2
 80007e2:	001a      	movs	r2, r3
 80007e4:	68fb      	ldr	r3, [r7, #12]
 80007e6:	6839      	ldr	r1, [r7, #0]
 80007e8:	18cb      	adds	r3, r1, r3
 80007ea:	781b      	ldrb	r3, [r3, #0]
 80007ec:	0019      	movs	r1, r3
 80007ee:	4b0d      	ldr	r3, [pc, #52]	; (8000824 <i2c1_byteTransmit+0x9c>)
 80007f0:	430a      	orrs	r2, r1
 80007f2:	629a      	str	r2, [r3, #40]	; 0x28
	for (int i = 0; i < N; i++) {
 80007f4:	68fb      	ldr	r3, [r7, #12]
 80007f6:	3301      	adds	r3, #1
 80007f8:	60fb      	str	r3, [r7, #12]
 80007fa:	1dbb      	adds	r3, r7, #6
 80007fc:	781b      	ldrb	r3, [r3, #0]
 80007fe:	68fa      	ldr	r2, [r7, #12]
 8000800:	429a      	cmp	r2, r3
 8000802:	dbd7      	blt.n	80007b4 <i2c1_byteTransmit+0x2c>
	}

	while (!READ_BIT(I2C1->ISR, I2C_ISR_STOPF)) {
 8000804:	46c0      	nop			; (mov r8, r8)
 8000806:	4b07      	ldr	r3, [pc, #28]	; (8000824 <i2c1_byteTransmit+0x9c>)
 8000808:	699b      	ldr	r3, [r3, #24]
 800080a:	2220      	movs	r2, #32
 800080c:	4013      	ands	r3, r2
 800080e:	d0fa      	beq.n	8000806 <i2c1_byteTransmit+0x7e>
	}
	SET_BIT(I2C1->ISR, I2C_ICR_STOPCF);
 8000810:	4b04      	ldr	r3, [pc, #16]	; (8000824 <i2c1_byteTransmit+0x9c>)
 8000812:	699a      	ldr	r2, [r3, #24]
 8000814:	4b03      	ldr	r3, [pc, #12]	; (8000824 <i2c1_byteTransmit+0x9c>)
 8000816:	2120      	movs	r1, #32
 8000818:	430a      	orrs	r2, r1
 800081a:	619a      	str	r2, [r3, #24]

}
 800081c:	46c0      	nop			; (mov r8, r8)
 800081e:	46bd      	mov	sp, r7
 8000820:	b004      	add	sp, #16
 8000822:	bd80      	pop	{r7, pc}
 8000824:	40005400 	.word	0x40005400

08000828 <i2c1_start>:

void i2c1_start(char saddr, uint8_t transfer_request, uint8_t N) {
 8000828:	b590      	push	{r4, r7, lr}
 800082a:	b083      	sub	sp, #12
 800082c:	af00      	add	r7, sp, #0
 800082e:	0004      	movs	r4, r0
 8000830:	0008      	movs	r0, r1
 8000832:	0011      	movs	r1, r2
 8000834:	1dfb      	adds	r3, r7, #7
 8000836:	1c22      	adds	r2, r4, #0
 8000838:	701a      	strb	r2, [r3, #0]
 800083a:	1dbb      	adds	r3, r7, #6
 800083c:	1c02      	adds	r2, r0, #0
 800083e:	701a      	strb	r2, [r3, #0]
 8000840:	1d7b      	adds	r3, r7, #5
 8000842:	1c0a      	adds	r2, r1, #0
 8000844:	701a      	strb	r2, [r3, #0]
	/*master 7 bit addressing mode */
	CLEAR_BIT(I2C1->CR2, I2C_CR2_ADD10);
 8000846:	4b21      	ldr	r3, [pc, #132]	; (80008cc <i2c1_start+0xa4>)
 8000848:	685a      	ldr	r2, [r3, #4]
 800084a:	4b20      	ldr	r3, [pc, #128]	; (80008cc <i2c1_start+0xa4>)
 800084c:	4920      	ldr	r1, [pc, #128]	; (80008d0 <i2c1_start+0xa8>)
 800084e:	400a      	ands	r2, r1
 8000850:	605a      	str	r2, [r3, #4]
	/* set Slave address */
	MODIFY_REG(I2C1->CR2, I2C_CR2_SADD, saddr << I2C_CR2_SADD_Pos);
 8000852:	4b1e      	ldr	r3, [pc, #120]	; (80008cc <i2c1_start+0xa4>)
 8000854:	685b      	ldr	r3, [r3, #4]
 8000856:	0a9b      	lsrs	r3, r3, #10
 8000858:	0299      	lsls	r1, r3, #10
 800085a:	1dfb      	adds	r3, r7, #7
 800085c:	781a      	ldrb	r2, [r3, #0]
 800085e:	4b1b      	ldr	r3, [pc, #108]	; (80008cc <i2c1_start+0xa4>)
 8000860:	430a      	orrs	r2, r1
 8000862:	605a      	str	r2, [r3, #4]
	/* read 1 byte */
	MODIFY_REG(I2C1->CR2, I2C_CR2_NBYTES, N << I2C_CR2_NBYTES_Pos);
 8000864:	4b19      	ldr	r3, [pc, #100]	; (80008cc <i2c1_start+0xa4>)
 8000866:	685b      	ldr	r3, [r3, #4]
 8000868:	4a1a      	ldr	r2, [pc, #104]	; (80008d4 <i2c1_start+0xac>)
 800086a:	401a      	ands	r2, r3
 800086c:	1d7b      	adds	r3, r7, #5
 800086e:	781b      	ldrb	r3, [r3, #0]
 8000870:	041b      	lsls	r3, r3, #16
 8000872:	0019      	movs	r1, r3
 8000874:	4b15      	ldr	r3, [pc, #84]	; (80008cc <i2c1_start+0xa4>)
 8000876:	430a      	orrs	r2, r1
 8000878:	605a      	str	r2, [r3, #4]
	/* stops when NBytes are transferred */
	SET_BIT(I2C1->CR2, I2C_CR2_AUTOEND);
 800087a:	4b14      	ldr	r3, [pc, #80]	; (80008cc <i2c1_start+0xa4>)
 800087c:	685a      	ldr	r2, [r3, #4]
 800087e:	4b13      	ldr	r3, [pc, #76]	; (80008cc <i2c1_start+0xa4>)
 8000880:	2180      	movs	r1, #128	; 0x80
 8000882:	0489      	lsls	r1, r1, #18
 8000884:	430a      	orrs	r2, r1
 8000886:	605a      	str	r2, [r3, #4]
	/* set START condition  automatically changes to master */

	if (transfer_request == 1) {
 8000888:	1dbb      	adds	r3, r7, #6
 800088a:	781b      	ldrb	r3, [r3, #0]
 800088c:	2b01      	cmp	r3, #1
 800088e:	d107      	bne.n	80008a0 <i2c1_start+0x78>
		/* request a read transfer */
		SET_BIT(I2C1->CR2, I2C_CR2_RD_WRN);
 8000890:	4b0e      	ldr	r3, [pc, #56]	; (80008cc <i2c1_start+0xa4>)
 8000892:	685a      	ldr	r2, [r3, #4]
 8000894:	4b0d      	ldr	r3, [pc, #52]	; (80008cc <i2c1_start+0xa4>)
 8000896:	2180      	movs	r1, #128	; 0x80
 8000898:	00c9      	lsls	r1, r1, #3
 800089a:	430a      	orrs	r2, r1
 800089c:	605a      	str	r2, [r3, #4]
 800089e:	e009      	b.n	80008b4 <i2c1_start+0x8c>
	} else if (transfer_request == 0) {
 80008a0:	1dbb      	adds	r3, r7, #6
 80008a2:	781b      	ldrb	r3, [r3, #0]
 80008a4:	2b00      	cmp	r3, #0
 80008a6:	d105      	bne.n	80008b4 <i2c1_start+0x8c>
		/* request a write transfer */
		CLEAR_BIT(I2C1->CR2, I2C_CR2_RD_WRN);
 80008a8:	4b08      	ldr	r3, [pc, #32]	; (80008cc <i2c1_start+0xa4>)
 80008aa:	685a      	ldr	r2, [r3, #4]
 80008ac:	4b07      	ldr	r3, [pc, #28]	; (80008cc <i2c1_start+0xa4>)
 80008ae:	490a      	ldr	r1, [pc, #40]	; (80008d8 <i2c1_start+0xb0>)
 80008b0:	400a      	ands	r2, r1
 80008b2:	605a      	str	r2, [r3, #4]
	}

	SET_BIT(I2C1->CR2, I2C_CR2_START);
 80008b4:	4b05      	ldr	r3, [pc, #20]	; (80008cc <i2c1_start+0xa4>)
 80008b6:	685a      	ldr	r2, [r3, #4]
 80008b8:	4b04      	ldr	r3, [pc, #16]	; (80008cc <i2c1_start+0xa4>)
 80008ba:	2180      	movs	r1, #128	; 0x80
 80008bc:	0189      	lsls	r1, r1, #6
 80008be:	430a      	orrs	r2, r1
 80008c0:	605a      	str	r2, [r3, #4]

}
 80008c2:	46c0      	nop			; (mov r8, r8)
 80008c4:	46bd      	mov	sp, r7
 80008c6:	b003      	add	sp, #12
 80008c8:	bd90      	pop	{r4, r7, pc}
 80008ca:	46c0      	nop			; (mov r8, r8)
 80008cc:	40005400 	.word	0x40005400
 80008d0:	fffff7ff 	.word	0xfffff7ff
 80008d4:	ff00ffff 	.word	0xff00ffff
 80008d8:	fffffbff 	.word	0xfffffbff

080008dc <arduino_map>:

	return (lna);
}

int8_t arduino_map(uint16_t value, uint16_t in_min, uint16_t in_max,
		int8_t out_min, int8_t out_max) {
 80008dc:	b5b0      	push	{r4, r5, r7, lr}
 80008de:	b082      	sub	sp, #8
 80008e0:	af00      	add	r7, sp, #0
 80008e2:	0005      	movs	r5, r0
 80008e4:	000c      	movs	r4, r1
 80008e6:	0010      	movs	r0, r2
 80008e8:	0019      	movs	r1, r3
 80008ea:	1dbb      	adds	r3, r7, #6
 80008ec:	1c2a      	adds	r2, r5, #0
 80008ee:	801a      	strh	r2, [r3, #0]
 80008f0:	1d3b      	adds	r3, r7, #4
 80008f2:	1c22      	adds	r2, r4, #0
 80008f4:	801a      	strh	r2, [r3, #0]
 80008f6:	1cbb      	adds	r3, r7, #2
 80008f8:	1c02      	adds	r2, r0, #0
 80008fa:	801a      	strh	r2, [r3, #0]
 80008fc:	1c7b      	adds	r3, r7, #1
 80008fe:	1c0a      	adds	r2, r1, #0
 8000900:	701a      	strb	r2, [r3, #0]
	return ((value - in_min) * (out_max - out_min) / (in_max - in_min) + out_min);
 8000902:	1dbb      	adds	r3, r7, #6
 8000904:	881a      	ldrh	r2, [r3, #0]
 8000906:	1d3b      	adds	r3, r7, #4
 8000908:	881b      	ldrh	r3, [r3, #0]
 800090a:	1ad2      	subs	r2, r2, r3
 800090c:	2318      	movs	r3, #24
 800090e:	18fb      	adds	r3, r7, r3
 8000910:	2100      	movs	r1, #0
 8000912:	5659      	ldrsb	r1, [r3, r1]
 8000914:	1c7b      	adds	r3, r7, #1
 8000916:	781b      	ldrb	r3, [r3, #0]
 8000918:	b25b      	sxtb	r3, r3
 800091a:	1acb      	subs	r3, r1, r3
 800091c:	4353      	muls	r3, r2
 800091e:	0018      	movs	r0, r3
 8000920:	1cbb      	adds	r3, r7, #2
 8000922:	881a      	ldrh	r2, [r3, #0]
 8000924:	1d3b      	adds	r3, r7, #4
 8000926:	881b      	ldrh	r3, [r3, #0]
 8000928:	1ad3      	subs	r3, r2, r3
 800092a:	0019      	movs	r1, r3
 800092c:	f7ff fc7c 	bl	8000228 <__divsi3>
 8000930:	0003      	movs	r3, r0
 8000932:	b2da      	uxtb	r2, r3
 8000934:	1c7b      	adds	r3, r7, #1
 8000936:	781b      	ldrb	r3, [r3, #0]
 8000938:	18d3      	adds	r3, r2, r3
 800093a:	b2db      	uxtb	r3, r3
 800093c:	b25b      	sxtb	r3, r3
}
 800093e:	0018      	movs	r0, r3
 8000940:	46bd      	mov	sp, r7
 8000942:	b002      	add	sp, #8
 8000944:	bdb0      	pop	{r4, r5, r7, pc}

08000946 <arduino_map16>:

uint16_t arduino_map16(uint16_t value, uint16_t in_min, uint16_t in_max,
		uint16_t out_min, uint16_t out_max) {
 8000946:	b5b0      	push	{r4, r5, r7, lr}
 8000948:	b082      	sub	sp, #8
 800094a:	af00      	add	r7, sp, #0
 800094c:	0005      	movs	r5, r0
 800094e:	000c      	movs	r4, r1
 8000950:	0010      	movs	r0, r2
 8000952:	0019      	movs	r1, r3
 8000954:	1dbb      	adds	r3, r7, #6
 8000956:	1c2a      	adds	r2, r5, #0
 8000958:	801a      	strh	r2, [r3, #0]
 800095a:	1d3b      	adds	r3, r7, #4
 800095c:	1c22      	adds	r2, r4, #0
 800095e:	801a      	strh	r2, [r3, #0]
 8000960:	1cbb      	adds	r3, r7, #2
 8000962:	1c02      	adds	r2, r0, #0
 8000964:	801a      	strh	r2, [r3, #0]
 8000966:	003b      	movs	r3, r7
 8000968:	1c0a      	adds	r2, r1, #0
 800096a:	801a      	strh	r2, [r3, #0]
	return ((value - in_min) * (out_max - out_min) / (in_max - in_min) + out_min);
 800096c:	1dbb      	adds	r3, r7, #6
 800096e:	881a      	ldrh	r2, [r3, #0]
 8000970:	1d3b      	adds	r3, r7, #4
 8000972:	881b      	ldrh	r3, [r3, #0]
 8000974:	1ad2      	subs	r2, r2, r3
 8000976:	2318      	movs	r3, #24
 8000978:	18fb      	adds	r3, r7, r3
 800097a:	8819      	ldrh	r1, [r3, #0]
 800097c:	003b      	movs	r3, r7
 800097e:	881b      	ldrh	r3, [r3, #0]
 8000980:	1acb      	subs	r3, r1, r3
 8000982:	4353      	muls	r3, r2
 8000984:	0018      	movs	r0, r3
 8000986:	1cbb      	adds	r3, r7, #2
 8000988:	881a      	ldrh	r2, [r3, #0]
 800098a:	1d3b      	adds	r3, r7, #4
 800098c:	881b      	ldrh	r3, [r3, #0]
 800098e:	1ad3      	subs	r3, r2, r3
 8000990:	0019      	movs	r1, r3
 8000992:	f7ff fc49 	bl	8000228 <__divsi3>
 8000996:	0003      	movs	r3, r0
 8000998:	b29a      	uxth	r2, r3
 800099a:	003b      	movs	r3, r7
 800099c:	881b      	ldrh	r3, [r3, #0]
 800099e:	18d3      	adds	r3, r2, r3
 80009a0:	b29b      	uxth	r3, r3
}
 80009a2:	0018      	movs	r0, r3
 80009a4:	46bd      	mov	sp, r7
 80009a6:	b002      	add	sp, #8
 80009a8:	bdb0      	pop	{r4, r5, r7, pc}

080009aa <packet_lna_for_ltel_protocol>:

	return ((int8_t) (m * pout_adc + b));
}


void packet_lna_for_ltel_protocol(uint8_t *frame, struct Lna lna) {
 80009aa:	b084      	sub	sp, #16
 80009ac:	b5b0      	push	{r4, r5, r7, lr}
 80009ae:	b084      	sub	sp, #16
 80009b0:	af00      	add	r7, sp, #0
 80009b2:	6078      	str	r0, [r7, #4]
 80009b4:	2004      	movs	r0, #4
 80009b6:	2418      	movs	r4, #24
 80009b8:	1900      	adds	r0, r0, r4
 80009ba:	2508      	movs	r5, #8
 80009bc:	46ac      	mov	ip, r5
 80009be:	44bc      	add	ip, r7
 80009c0:	4460      	add	r0, ip
 80009c2:	6001      	str	r1, [r0, #0]
 80009c4:	6042      	str	r2, [r0, #4]
 80009c6:	6083      	str	r3, [r0, #8]
	uint8_t crc_frame[2];
	uint16_t crc;
	frame[0] = LTEL_START_MARK;
 80009c8:	687b      	ldr	r3, [r7, #4]
 80009ca:	227e      	movs	r2, #126	; 0x7e
 80009cc:	701a      	strb	r2, [r3, #0]
	frame[1] = MODULE_FUNCTION;
 80009ce:	687b      	ldr	r3, [r7, #4]
 80009d0:	3301      	adds	r3, #1
 80009d2:	2209      	movs	r2, #9
 80009d4:	701a      	strb	r2, [r3, #0]
	frame[2] = MODULE_ADDR;
 80009d6:	687b      	ldr	r3, [r7, #4]
 80009d8:	3302      	adds	r3, #2
 80009da:	2208      	movs	r2, #8
 80009dc:	701a      	strb	r2, [r3, #0]
	frame[3] = QUERY_PARAMETER_LTEL;
 80009de:	687b      	ldr	r3, [r7, #4]
 80009e0:	3303      	adds	r3, #3
 80009e2:	2211      	movs	r2, #17
 80009e4:	701a      	strb	r2, [r3, #0]
	frame[4] = 0x00;
 80009e6:	687b      	ldr	r3, [r7, #4]
 80009e8:	3304      	adds	r3, #4
 80009ea:	2200      	movs	r2, #0
 80009ec:	701a      	strb	r2, [r3, #0]
	frame[5] = 0x05;
 80009ee:	687b      	ldr	r3, [r7, #4]
 80009f0:	3305      	adds	r3, #5
 80009f2:	2205      	movs	r2, #5
 80009f4:	701a      	strb	r2, [r3, #0]
	frame[6] = 0x00;
 80009f6:	687b      	ldr	r3, [r7, #4]
 80009f8:	3306      	adds	r3, #6
 80009fa:	2200      	movs	r2, #0
 80009fc:	701a      	strb	r2, [r3, #0]
	frame[7] = lna.attenuation;
 80009fe:	687b      	ldr	r3, [r7, #4]
 8000a00:	3307      	adds	r3, #7
 8000a02:	2204      	movs	r2, #4
 8000a04:	1912      	adds	r2, r2, r4
 8000a06:	2108      	movs	r1, #8
 8000a08:	468c      	mov	ip, r1
 8000a0a:	44bc      	add	ip, r7
 8000a0c:	4462      	add	r2, ip
 8000a0e:	7812      	ldrb	r2, [r2, #0]
 8000a10:	701a      	strb	r2, [r3, #0]
	frame[8] = lna.gain;
 8000a12:	687b      	ldr	r3, [r7, #4]
 8000a14:	3308      	adds	r3, #8
 8000a16:	2204      	movs	r2, #4
 8000a18:	1912      	adds	r2, r2, r4
 8000a1a:	2108      	movs	r1, #8
 8000a1c:	468c      	mov	ip, r1
 8000a1e:	44bc      	add	ip, r7
 8000a20:	4462      	add	r2, ip
 8000a22:	7852      	ldrb	r2, [r2, #1]
 8000a24:	701a      	strb	r2, [r3, #0]
	frame[9] = lna.pout;
 8000a26:	2304      	movs	r3, #4
 8000a28:	191b      	adds	r3, r3, r4
 8000a2a:	2208      	movs	r2, #8
 8000a2c:	4694      	mov	ip, r2
 8000a2e:	44bc      	add	ip, r7
 8000a30:	4463      	add	r3, ip
 8000a32:	2202      	movs	r2, #2
 8000a34:	569a      	ldrsb	r2, [r3, r2]
 8000a36:	687b      	ldr	r3, [r7, #4]
 8000a38:	3309      	adds	r3, #9
 8000a3a:	b2d2      	uxtb	r2, r2
 8000a3c:	701a      	strb	r2, [r3, #0]
	frame[10] = lna.voltage;
 8000a3e:	687b      	ldr	r3, [r7, #4]
 8000a40:	330a      	adds	r3, #10
 8000a42:	2204      	movs	r2, #4
 8000a44:	1912      	adds	r2, r2, r4
 8000a46:	2108      	movs	r1, #8
 8000a48:	468c      	mov	ip, r1
 8000a4a:	44bc      	add	ip, r7
 8000a4c:	4462      	add	r2, ip
 8000a4e:	7952      	ldrb	r2, [r2, #5]
 8000a50:	701a      	strb	r2, [r3, #0]
	crc = crc_get(&(frame[1]), 10);
 8000a52:	687b      	ldr	r3, [r7, #4]
 8000a54:	3301      	adds	r3, #1
 8000a56:	210a      	movs	r1, #10
 8000a58:	0018      	movs	r0, r3
 8000a5a:	f001 fa6d 	bl	8001f38 <crc_get>
 8000a5e:	0003      	movs	r3, r0
 8000a60:	b29a      	uxth	r2, r3
 8000a62:	200a      	movs	r0, #10
 8000a64:	183b      	adds	r3, r7, r0
 8000a66:	801a      	strh	r2, [r3, #0]
	memcpy(crc_frame, &crc, 2);
 8000a68:	210c      	movs	r1, #12
 8000a6a:	187b      	adds	r3, r7, r1
 8000a6c:	183a      	adds	r2, r7, r0
 8000a6e:	8812      	ldrh	r2, [r2, #0]
 8000a70:	801a      	strh	r2, [r3, #0]
	frame[11] = crc_frame[0];
 8000a72:	687b      	ldr	r3, [r7, #4]
 8000a74:	330b      	adds	r3, #11
 8000a76:	187a      	adds	r2, r7, r1
 8000a78:	7812      	ldrb	r2, [r2, #0]
 8000a7a:	701a      	strb	r2, [r3, #0]
	frame[12] = crc_frame[1];
 8000a7c:	687b      	ldr	r3, [r7, #4]
 8000a7e:	330c      	adds	r3, #12
 8000a80:	187a      	adds	r2, r7, r1
 8000a82:	7852      	ldrb	r2, [r2, #1]
 8000a84:	701a      	strb	r2, [r3, #0]
	frame[13] = LTEL_END_MARK;
 8000a86:	687b      	ldr	r3, [r7, #4]
 8000a88:	330d      	adds	r3, #13
 8000a8a:	227f      	movs	r2, #127	; 0x7f
 8000a8c:	701a      	strb	r2, [r3, #0]
}
 8000a8e:	46c0      	nop			; (mov r8, r8)
 8000a90:	46bd      	mov	sp, r7
 8000a92:	b004      	add	sp, #16
 8000a94:	bcb0      	pop	{r4, r5, r7}
 8000a96:	bc08      	pop	{r3}
 8000a98:	b004      	add	sp, #16
 8000a9a:	4718      	bx	r3

08000a9c <sigma_set_parameter_frame>:

void sigma_set_parameter_frame(uint8_t *frame, struct Lna lna) {
 8000a9c:	b084      	sub	sp, #16
 8000a9e:	b5b0      	push	{r4, r5, r7, lr}
 8000aa0:	b084      	sub	sp, #16
 8000aa2:	af00      	add	r7, sp, #0
 8000aa4:	6078      	str	r0, [r7, #4]
 8000aa6:	2004      	movs	r0, #4
 8000aa8:	2418      	movs	r4, #24
 8000aaa:	1900      	adds	r0, r0, r4
 8000aac:	2508      	movs	r5, #8
 8000aae:	46ac      	mov	ip, r5
 8000ab0:	44bc      	add	ip, r7
 8000ab2:	4460      	add	r0, ip
 8000ab4:	6001      	str	r1, [r0, #0]
 8000ab6:	6042      	str	r2, [r0, #4]
 8000ab8:	6083      	str	r3, [r0, #8]
	uint8_t crc_frame[2];
	uint16_t crc;
	frame[0] = LTEL_START_MARK;
 8000aba:	687b      	ldr	r3, [r7, #4]
 8000abc:	227e      	movs	r2, #126	; 0x7e
 8000abe:	701a      	strb	r2, [r3, #0]
	frame[1] = MODULE_FUNCTION;
 8000ac0:	687b      	ldr	r3, [r7, #4]
 8000ac2:	3301      	adds	r3, #1
 8000ac4:	2209      	movs	r2, #9
 8000ac6:	701a      	strb	r2, [r3, #0]
	frame[2] = MODULE_ADDR;
 8000ac8:	687b      	ldr	r3, [r7, #4]
 8000aca:	3302      	adds	r3, #2
 8000acc:	2208      	movs	r2, #8
 8000ace:	701a      	strb	r2, [r3, #0]
	frame[3] = QUERY_PARAMETER_SIGMA;
 8000ad0:	687b      	ldr	r3, [r7, #4]
 8000ad2:	3303      	adds	r3, #3
 8000ad4:	2212      	movs	r2, #18
 8000ad6:	701a      	strb	r2, [r3, #0]
	frame[4] = 0x06;
 8000ad8:	687b      	ldr	r3, [r7, #4]
 8000ada:	3304      	adds	r3, #4
 8000adc:	2206      	movs	r2, #6
 8000ade:	701a      	strb	r2, [r3, #0]
	frame[5] = lna.pout;
 8000ae0:	2304      	movs	r3, #4
 8000ae2:	191b      	adds	r3, r3, r4
 8000ae4:	2208      	movs	r2, #8
 8000ae6:	4694      	mov	ip, r2
 8000ae8:	44bc      	add	ip, r7
 8000aea:	4463      	add	r3, ip
 8000aec:	2202      	movs	r2, #2
 8000aee:	569a      	ldrsb	r2, [r3, r2]
 8000af0:	687b      	ldr	r3, [r7, #4]
 8000af2:	3305      	adds	r3, #5
 8000af4:	b2d2      	uxtb	r2, r2
 8000af6:	701a      	strb	r2, [r3, #0]
	frame[6] = lna.attenuation;
 8000af8:	687b      	ldr	r3, [r7, #4]
 8000afa:	3306      	adds	r3, #6
 8000afc:	2204      	movs	r2, #4
 8000afe:	1912      	adds	r2, r2, r4
 8000b00:	2108      	movs	r1, #8
 8000b02:	468c      	mov	ip, r1
 8000b04:	44bc      	add	ip, r7
 8000b06:	4462      	add	r2, ip
 8000b08:	7812      	ldrb	r2, [r2, #0]
 8000b0a:	701a      	strb	r2, [r3, #0]
	frame[7] = lna.gain;
 8000b0c:	687b      	ldr	r3, [r7, #4]
 8000b0e:	3307      	adds	r3, #7
 8000b10:	2204      	movs	r2, #4
 8000b12:	1912      	adds	r2, r2, r4
 8000b14:	2108      	movs	r1, #8
 8000b16:	468c      	mov	ip, r1
 8000b18:	44bc      	add	ip, r7
 8000b1a:	4462      	add	r2, ip
 8000b1c:	7852      	ldrb	r2, [r2, #1]
 8000b1e:	701a      	strb	r2, [r3, #0]
	frame[8] = lna.current;
 8000b20:	687b      	ldr	r3, [r7, #4]
 8000b22:	3308      	adds	r3, #8
 8000b24:	2204      	movs	r2, #4
 8000b26:	1912      	adds	r2, r2, r4
 8000b28:	2108      	movs	r1, #8
 8000b2a:	468c      	mov	ip, r1
 8000b2c:	44bc      	add	ip, r7
 8000b2e:	4462      	add	r2, ip
 8000b30:	78d2      	ldrb	r2, [r2, #3]
 8000b32:	701a      	strb	r2, [r3, #0]
	frame[9] = lna.voltage;
 8000b34:	687b      	ldr	r3, [r7, #4]
 8000b36:	3309      	adds	r3, #9
 8000b38:	2204      	movs	r2, #4
 8000b3a:	1912      	adds	r2, r2, r4
 8000b3c:	2108      	movs	r1, #8
 8000b3e:	468c      	mov	ip, r1
 8000b40:	44bc      	add	ip, r7
 8000b42:	4462      	add	r2, ip
 8000b44:	7952      	ldrb	r2, [r2, #5]
 8000b46:	701a      	strb	r2, [r3, #0]
	frame[10] = lna.pin;
 8000b48:	2304      	movs	r3, #4
 8000b4a:	191b      	adds	r3, r3, r4
 8000b4c:	2208      	movs	r2, #8
 8000b4e:	4694      	mov	ip, r2
 8000b50:	44bc      	add	ip, r7
 8000b52:	4463      	add	r3, ip
 8000b54:	2204      	movs	r2, #4
 8000b56:	569a      	ldrsb	r2, [r3, r2]
 8000b58:	687b      	ldr	r3, [r7, #4]
 8000b5a:	330a      	adds	r3, #10
 8000b5c:	b2d2      	uxtb	r2, r2
 8000b5e:	701a      	strb	r2, [r3, #0]
	crc = crc_get(&(frame[1]), 10);
 8000b60:	687b      	ldr	r3, [r7, #4]
 8000b62:	3301      	adds	r3, #1
 8000b64:	210a      	movs	r1, #10
 8000b66:	0018      	movs	r0, r3
 8000b68:	f001 f9e6 	bl	8001f38 <crc_get>
 8000b6c:	0003      	movs	r3, r0
 8000b6e:	b29a      	uxth	r2, r3
 8000b70:	200a      	movs	r0, #10
 8000b72:	183b      	adds	r3, r7, r0
 8000b74:	801a      	strh	r2, [r3, #0]
	memcpy(crc_frame, &crc, 2);
 8000b76:	210c      	movs	r1, #12
 8000b78:	187b      	adds	r3, r7, r1
 8000b7a:	183a      	adds	r2, r7, r0
 8000b7c:	8812      	ldrh	r2, [r2, #0]
 8000b7e:	801a      	strh	r2, [r3, #0]
	frame[11] = crc_frame[0];
 8000b80:	687b      	ldr	r3, [r7, #4]
 8000b82:	330b      	adds	r3, #11
 8000b84:	187a      	adds	r2, r7, r1
 8000b86:	7812      	ldrb	r2, [r2, #0]
 8000b88:	701a      	strb	r2, [r3, #0]
	frame[12] = crc_frame[1];
 8000b8a:	687b      	ldr	r3, [r7, #4]
 8000b8c:	330c      	adds	r3, #12
 8000b8e:	187a      	adds	r2, r7, r1
 8000b90:	7852      	ldrb	r2, [r2, #1]
 8000b92:	701a      	strb	r2, [r3, #0]
	frame[13] = LTEL_END_MARK;
 8000b94:	687b      	ldr	r3, [r7, #4]
 8000b96:	330d      	adds	r3, #13
 8000b98:	227f      	movs	r2, #127	; 0x7f
 8000b9a:	701a      	strb	r2, [r3, #0]
}
 8000b9c:	46c0      	nop			; (mov r8, r8)
 8000b9e:	46bd      	mov	sp, r7
 8000ba0:	b004      	add	sp, #16
 8000ba2:	bcb0      	pop	{r4, r5, r7}
 8000ba4:	bc08      	pop	{r3}
 8000ba6:	b004      	add	sp, #16
 8000ba8:	4718      	bx	r3
	...

08000bac <get_db_gain>:
	else if (adc_gain < 725)
		return 0;
	return 0;
}

uint8_t get_db_gain(uint16_t adc, uint8_t fix) {
 8000bac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000bae:	b087      	sub	sp, #28
 8000bb0:	af02      	add	r7, sp, #8
 8000bb2:	0002      	movs	r2, r0
 8000bb4:	1dbb      	adds	r3, r7, #6
 8000bb6:	801a      	strh	r2, [r3, #0]
 8000bb8:	1d7b      	adds	r3, r7, #5
 8000bba:	1c0a      	adds	r2, r1, #0
 8000bbc:	701a      	strb	r2, [r3, #0]

	uint16_t adc_max = 3781;
 8000bbe:	210e      	movs	r1, #14
 8000bc0:	187b      	adds	r3, r7, r1
 8000bc2:	4a15      	ldr	r2, [pc, #84]	; (8000c18 <get_db_gain+0x6c>)
 8000bc4:	801a      	strh	r2, [r3, #0]
	uint16_t adc_min = 725;
 8000bc6:	200c      	movs	r0, #12
 8000bc8:	183b      	adds	r3, r7, r0
 8000bca:	4a14      	ldr	r2, [pc, #80]	; (8000c1c <get_db_gain+0x70>)
 8000bcc:	801a      	strh	r2, [r3, #0]
	uint8_t gain_min = 0;
 8000bce:	240b      	movs	r4, #11
 8000bd0:	193b      	adds	r3, r7, r4
 8000bd2:	2200      	movs	r2, #0
 8000bd4:	701a      	strb	r2, [r3, #0]
	uint8_t gain_max = 45;
 8000bd6:	260a      	movs	r6, #10
 8000bd8:	19bb      	adds	r3, r7, r6
 8000bda:	222d      	movs	r2, #45	; 0x2d
 8000bdc:	701a      	strb	r2, [r3, #0]
	uint8_t gain;

	gain = arduino_map(adc, adc_min, adc_max, gain_min, gain_max);
 8000bde:	193b      	adds	r3, r7, r4
 8000be0:	2500      	movs	r5, #0
 8000be2:	575d      	ldrsb	r5, [r3, r5]
 8000be4:	19bb      	adds	r3, r7, r6
 8000be6:	781b      	ldrb	r3, [r3, #0]
 8000be8:	b25b      	sxtb	r3, r3
 8000bea:	187a      	adds	r2, r7, r1
 8000bec:	8814      	ldrh	r4, [r2, #0]
 8000bee:	183a      	adds	r2, r7, r0
 8000bf0:	8811      	ldrh	r1, [r2, #0]
 8000bf2:	1dba      	adds	r2, r7, #6
 8000bf4:	8810      	ldrh	r0, [r2, #0]
 8000bf6:	9300      	str	r3, [sp, #0]
 8000bf8:	002b      	movs	r3, r5
 8000bfa:	0022      	movs	r2, r4
 8000bfc:	f7ff fe6e 	bl	80008dc <arduino_map>
 8000c00:	0003      	movs	r3, r0
 8000c02:	001a      	movs	r2, r3
 8000c04:	2109      	movs	r1, #9
 8000c06:	187b      	adds	r3, r7, r1
 8000c08:	701a      	strb	r2, [r3, #0]
	return (gain);
 8000c0a:	187b      	adds	r3, r7, r1
 8000c0c:	781b      	ldrb	r3, [r3, #0]
}
 8000c0e:	0018      	movs	r0, r3
 8000c10:	46bd      	mov	sp, r7
 8000c12:	b005      	add	sp, #20
 8000c14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c16:	46c0      	nop			; (mov r8, r8)
 8000c18:	00000ec5 	.word	0x00000ec5
 8000c1c:	000002d5 	.word	0x000002d5

08000c20 <get_dbm_pout>:

uint8_t get_dbm_pout(uint16_t value,uint8_t fix) {
 8000c20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c22:	b087      	sub	sp, #28
 8000c24:	af02      	add	r7, sp, #8
 8000c26:	0002      	movs	r2, r0
 8000c28:	1dbb      	adds	r3, r7, #6
 8000c2a:	801a      	strh	r2, [r3, #0]
 8000c2c:	1d7b      	adds	r3, r7, #5
 8000c2e:	1c0a      	adds	r2, r1, #0
 8000c30:	701a      	strb	r2, [r3, #0]
	uint16_t adc_max = 0;
 8000c32:	250e      	movs	r5, #14
 8000c34:	197b      	adds	r3, r7, r5
 8000c36:	2200      	movs	r2, #0
 8000c38:	801a      	strh	r2, [r3, #0]
	uint16_t adc_min = 0;
 8000c3a:	260c      	movs	r6, #12
 8000c3c:	19bb      	adds	r3, r7, r6
 8000c3e:	2200      	movs	r2, #0
 8000c40:	801a      	strh	r2, [r3, #0]
	uint8_t pout;

//	do {
	adc_max = eeprom_2byte_read(POUT_ADC_MAX_ADDR);
 8000c42:	197c      	adds	r4, r7, r5
 8000c44:	2003      	movs	r0, #3
 8000c46:	f7ff fc4b 	bl	80004e0 <eeprom_2byte_read>
 8000c4a:	0003      	movs	r3, r0
 8000c4c:	8023      	strh	r3, [r4, #0]
	HAL_Delay(2);
 8000c4e:	2002      	movs	r0, #2
 8000c50:	f001 fa84 	bl	800215c <HAL_Delay>
	adc_min = eeprom_2byte_read(POUT_ADC_MIN_ADDR);
 8000c54:	19bc      	adds	r4, r7, r6
 8000c56:	2005      	movs	r0, #5
 8000c58:	f7ff fc42 	bl	80004e0 <eeprom_2byte_read>
 8000c5c:	0003      	movs	r3, r0
 8000c5e:	8023      	strh	r3, [r4, #0]
//	} while (adc_max == adc_min);
	pout = arduino_map(value, adc_min, adc_max, POUT_DBM_MIN, POUT_DBM_MAX);
 8000c60:	231e      	movs	r3, #30
 8000c62:	425c      	negs	r4, r3
 8000c64:	197b      	adds	r3, r7, r5
 8000c66:	881a      	ldrh	r2, [r3, #0]
 8000c68:	19bb      	adds	r3, r7, r6
 8000c6a:	8819      	ldrh	r1, [r3, #0]
 8000c6c:	1dbb      	adds	r3, r7, #6
 8000c6e:	8818      	ldrh	r0, [r3, #0]
 8000c70:	2300      	movs	r3, #0
 8000c72:	9300      	str	r3, [sp, #0]
 8000c74:	0023      	movs	r3, r4
 8000c76:	f7ff fe31 	bl	80008dc <arduino_map>
 8000c7a:	0003      	movs	r3, r0
 8000c7c:	001a      	movs	r2, r3
 8000c7e:	210b      	movs	r1, #11
 8000c80:	187b      	adds	r3, r7, r1
 8000c82:	701a      	strb	r2, [r3, #0]
	return (pout+fix);
 8000c84:	187a      	adds	r2, r7, r1
 8000c86:	1d7b      	adds	r3, r7, #5
 8000c88:	7812      	ldrb	r2, [r2, #0]
 8000c8a:	781b      	ldrb	r3, [r3, #0]
 8000c8c:	18d3      	adds	r3, r2, r3
 8000c8e:	b2db      	uxtb	r3, r3
}
 8000c90:	0018      	movs	r0, r3
 8000c92:	46bd      	mov	sp, r7
 8000c94:	b005      	add	sp, #20
 8000c96:	bdf0      	pop	{r4, r5, r6, r7, pc}

08000c98 <get_voltage>:
uint8_t get_voltage(uint16_t value,uint8_t fix) {
 8000c98:	b5b0      	push	{r4, r5, r7, lr}
 8000c9a:	b088      	sub	sp, #32
 8000c9c:	af02      	add	r7, sp, #8
 8000c9e:	0002      	movs	r2, r0
 8000ca0:	1dbb      	adds	r3, r7, #6
 8000ca2:	801a      	strh	r2, [r3, #0]
 8000ca4:	1d7b      	adds	r3, r7, #5
 8000ca6:	1c0a      	adds	r2, r1, #0
 8000ca8:	701a      	strb	r2, [r3, #0]
	uint16_t adc_max = 2362;
 8000caa:	2116      	movs	r1, #22
 8000cac:	187b      	adds	r3, r7, r1
 8000cae:	4a13      	ldr	r2, [pc, #76]	; (8000cfc <get_voltage+0x64>)
 8000cb0:	801a      	strh	r2, [r3, #0]
	uint16_t adc_min = 1635;
 8000cb2:	2014      	movs	r0, #20
 8000cb4:	183b      	adds	r3, r7, r0
 8000cb6:	4a12      	ldr	r2, [pc, #72]	; (8000d00 <get_voltage+0x68>)
 8000cb8:	801a      	strh	r2, [r3, #0]
	uint16_t voltage_min = 120;
 8000cba:	2412      	movs	r4, #18
 8000cbc:	193b      	adds	r3, r7, r4
 8000cbe:	2278      	movs	r2, #120	; 0x78
 8000cc0:	801a      	strh	r2, [r3, #0]
	uint16_t voltage_max = 240;
 8000cc2:	2510      	movs	r5, #16
 8000cc4:	197b      	adds	r3, r7, r5
 8000cc6:	22f0      	movs	r2, #240	; 0xf0
 8000cc8:	801a      	strh	r2, [r3, #0]
	uint8_t voltage;

	voltage = arduino_map16(value, adc_min, adc_max, voltage_min, voltage_max);
 8000cca:	193b      	adds	r3, r7, r4
 8000ccc:	881c      	ldrh	r4, [r3, #0]
 8000cce:	187b      	adds	r3, r7, r1
 8000cd0:	881a      	ldrh	r2, [r3, #0]
 8000cd2:	183b      	adds	r3, r7, r0
 8000cd4:	8819      	ldrh	r1, [r3, #0]
 8000cd6:	1dbb      	adds	r3, r7, #6
 8000cd8:	8818      	ldrh	r0, [r3, #0]
 8000cda:	197b      	adds	r3, r7, r5
 8000cdc:	881b      	ldrh	r3, [r3, #0]
 8000cde:	9300      	str	r3, [sp, #0]
 8000ce0:	0023      	movs	r3, r4
 8000ce2:	f7ff fe30 	bl	8000946 <arduino_map16>
 8000ce6:	0003      	movs	r3, r0
 8000ce8:	001a      	movs	r2, r3
 8000cea:	210f      	movs	r1, #15
 8000cec:	187b      	adds	r3, r7, r1
 8000cee:	701a      	strb	r2, [r3, #0]
	return (voltage);
 8000cf0:	187b      	adds	r3, r7, r1
 8000cf2:	781b      	ldrb	r3, [r3, #0]
}
 8000cf4:	0018      	movs	r0, r3
 8000cf6:	46bd      	mov	sp, r7
 8000cf8:	b006      	add	sp, #24
 8000cfa:	bdb0      	pop	{r4, r5, r7, pc}
 8000cfc:	0000093a 	.word	0x0000093a
 8000d00:	00000663 	.word	0x00000663

08000d04 <get_current>:

uint8_t get_current(uint16_t value,uint8_t fix) {
 8000d04:	b5b0      	push	{r4, r5, r7, lr}
 8000d06:	b086      	sub	sp, #24
 8000d08:	af02      	add	r7, sp, #8
 8000d0a:	0002      	movs	r2, r0
 8000d0c:	1dbb      	adds	r3, r7, #6
 8000d0e:	801a      	strh	r2, [r3, #0]
 8000d10:	1d7b      	adds	r3, r7, #5
 8000d12:	1c0a      	adds	r2, r1, #0
 8000d14:	701a      	strb	r2, [r3, #0]
	uint16_t adc_min = 2310;
 8000d16:	210e      	movs	r1, #14
 8000d18:	187b      	adds	r3, r7, r1
 8000d1a:	4a15      	ldr	r2, [pc, #84]	; (8000d70 <get_current+0x6c>)
 8000d1c:	801a      	strh	r2, [r3, #0]
	uint16_t adc_max = 2340;
 8000d1e:	200c      	movs	r0, #12
 8000d20:	183b      	adds	r3, r7, r0
 8000d22:	4a14      	ldr	r2, [pc, #80]	; (8000d74 <get_current+0x70>)
 8000d24:	801a      	strh	r2, [r3, #0]
	uint8_t current_max = 190;
 8000d26:	240b      	movs	r4, #11
 8000d28:	193b      	adds	r3, r7, r4
 8000d2a:	22be      	movs	r2, #190	; 0xbe
 8000d2c:	701a      	strb	r2, [r3, #0]
	uint8_t current_min = 170;
 8000d2e:	250a      	movs	r5, #10
 8000d30:	197b      	adds	r3, r7, r5
 8000d32:	22aa      	movs	r2, #170	; 0xaa
 8000d34:	701a      	strb	r2, [r3, #0]
	uint8_t current;

	current = arduino_map16(value, adc_min, adc_max, current_min, current_max);
 8000d36:	197b      	adds	r3, r7, r5
 8000d38:	781b      	ldrb	r3, [r3, #0]
 8000d3a:	b29d      	uxth	r5, r3
 8000d3c:	193b      	adds	r3, r7, r4
 8000d3e:	781b      	ldrb	r3, [r3, #0]
 8000d40:	b29b      	uxth	r3, r3
 8000d42:	183a      	adds	r2, r7, r0
 8000d44:	8814      	ldrh	r4, [r2, #0]
 8000d46:	187a      	adds	r2, r7, r1
 8000d48:	8811      	ldrh	r1, [r2, #0]
 8000d4a:	1dba      	adds	r2, r7, #6
 8000d4c:	8810      	ldrh	r0, [r2, #0]
 8000d4e:	9300      	str	r3, [sp, #0]
 8000d50:	002b      	movs	r3, r5
 8000d52:	0022      	movs	r2, r4
 8000d54:	f7ff fdf7 	bl	8000946 <arduino_map16>
 8000d58:	0003      	movs	r3, r0
 8000d5a:	001a      	movs	r2, r3
 8000d5c:	2109      	movs	r1, #9
 8000d5e:	187b      	adds	r3, r7, r1
 8000d60:	701a      	strb	r2, [r3, #0]
	return (current);
 8000d62:	187b      	adds	r3, r7, r1
 8000d64:	781b      	ldrb	r3, [r3, #0]
}
 8000d66:	0018      	movs	r0, r3
 8000d68:	46bd      	mov	sp, r7
 8000d6a:	b004      	add	sp, #16
 8000d6c:	bdb0      	pop	{r4, r5, r7, pc}
 8000d6e:	46c0      	nop			; (mov r8, r8)
 8000d70:	00000906 	.word	0x00000906
 8000d74:	00000924 	.word	0x00000924

08000d78 <calulate_lna_real_values>:


struct Lna calulate_lna_real_values(volatile uint16_t *adc) {
 8000d78:	b5b0      	push	{r4, r5, r7, lr}
 8000d7a:	b0aa      	sub	sp, #168	; 0xa8
 8000d7c:	af00      	add	r7, sp, #0
 8000d7e:	6078      	str	r0, [r7, #4]
 8000d80:	6039      	str	r1, [r7, #0]

	struct Lna lna;
	//adc_media_calc();
	uint8_t pout_fix = 1;
 8000d82:	21a7      	movs	r1, #167	; 0xa7
 8000d84:	187b      	adds	r3, r7, r1
 8000d86:	2201      	movs	r2, #1
 8000d88:	701a      	strb	r2, [r3, #0]
	uint8_t gain_fix = 0;
 8000d8a:	25a6      	movs	r5, #166	; 0xa6
 8000d8c:	197b      	adds	r3, r7, r5
 8000d8e:	2200      	movs	r2, #0
 8000d90:	701a      	strb	r2, [r3, #0]
	lna.pout = get_dbm_pout(adc[POUT_INDEX],pout_fix);
 8000d92:	683b      	ldr	r3, [r7, #0]
 8000d94:	881b      	ldrh	r3, [r3, #0]
 8000d96:	b29a      	uxth	r2, r3
 8000d98:	187b      	adds	r3, r7, r1
 8000d9a:	781b      	ldrb	r3, [r3, #0]
 8000d9c:	0019      	movs	r1, r3
 8000d9e:	0010      	movs	r0, r2
 8000da0:	f7ff ff3e 	bl	8000c20 <get_dbm_pout>
 8000da4:	0003      	movs	r3, r0
 8000da6:	b25a      	sxtb	r2, r3
 8000da8:	240c      	movs	r4, #12
 8000daa:	193b      	adds	r3, r7, r4
 8000dac:	709a      	strb	r2, [r3, #2]
	//lna.current = ADC_CURRENT_FACTOR * adc[CURRENT_INDEX] / 4096.0f;
	lna.current = get_current(adc[CURRENT_INDEX], 0);
 8000dae:	683b      	ldr	r3, [r7, #0]
 8000db0:	3302      	adds	r3, #2
 8000db2:	881b      	ldrh	r3, [r3, #0]
 8000db4:	b29b      	uxth	r3, r3
 8000db6:	2100      	movs	r1, #0
 8000db8:	0018      	movs	r0, r3
 8000dba:	f7ff ffa3 	bl	8000d04 <get_current>
 8000dbe:	0003      	movs	r3, r0
 8000dc0:	001a      	movs	r2, r3
 8000dc2:	193b      	adds	r3, r7, r4
 8000dc4:	70da      	strb	r2, [r3, #3]
	lna.gain = get_db_gain(adc[GAIN_INDEX],gain_fix);
 8000dc6:	683b      	ldr	r3, [r7, #0]
 8000dc8:	3304      	adds	r3, #4
 8000dca:	881b      	ldrh	r3, [r3, #0]
 8000dcc:	b29a      	uxth	r2, r3
 8000dce:	197b      	adds	r3, r7, r5
 8000dd0:	781b      	ldrb	r3, [r3, #0]
 8000dd2:	0019      	movs	r1, r3
 8000dd4:	0010      	movs	r0, r2
 8000dd6:	f7ff fee9 	bl	8000bac <get_db_gain>
 8000dda:	0003      	movs	r3, r0
 8000ddc:	001a      	movs	r2, r3
 8000dde:	193b      	adds	r3, r7, r4
 8000de0:	705a      	strb	r2, [r3, #1]
	//lna.voltage = ADC_VOLTAGE_FACTOR * (float) adc[VOLTAGE_INDEX];
	lna.voltage = get_voltage(adc[VOLTAGE_INDEX], 0)/10;
 8000de2:	683b      	ldr	r3, [r7, #0]
 8000de4:	3306      	adds	r3, #6
 8000de6:	881b      	ldrh	r3, [r3, #0]
 8000de8:	b29b      	uxth	r3, r3
 8000dea:	2100      	movs	r1, #0
 8000dec:	0018      	movs	r0, r3
 8000dee:	f7ff ff53 	bl	8000c98 <get_voltage>
 8000df2:	0003      	movs	r3, r0
 8000df4:	210a      	movs	r1, #10
 8000df6:	0018      	movs	r0, r3
 8000df8:	f7ff f98c 	bl	8000114 <__udivsi3>
 8000dfc:	0003      	movs	r3, r0
 8000dfe:	b2da      	uxtb	r2, r3
 8000e00:	193b      	adds	r3, r7, r4
 8000e02:	715a      	strb	r2, [r3, #5]
	lna.attenuation = eeprom_1byte_read(LNA_ATT_ADDR);
 8000e04:	2000      	movs	r0, #0
 8000e06:	f7ff fafb 	bl	8000400 <eeprom_1byte_read>
 8000e0a:	0003      	movs	r3, r0
 8000e0c:	001a      	movs	r2, r3
 8000e0e:	0021      	movs	r1, r4
 8000e10:	187b      	adds	r3, r7, r1
 8000e12:	701a      	strb	r2, [r3, #0]
	lna.pin = lna.pout - lna.gain + lna.attenuation;
 8000e14:	187b      	adds	r3, r7, r1
 8000e16:	789b      	ldrb	r3, [r3, #2]
 8000e18:	b25b      	sxtb	r3, r3
 8000e1a:	b2da      	uxtb	r2, r3
 8000e1c:	187b      	adds	r3, r7, r1
 8000e1e:	785b      	ldrb	r3, [r3, #1]
 8000e20:	1ad3      	subs	r3, r2, r3
 8000e22:	b2da      	uxtb	r2, r3
 8000e24:	187b      	adds	r3, r7, r1
 8000e26:	781b      	ldrb	r3, [r3, #0]
 8000e28:	18d3      	adds	r3, r2, r3
 8000e2a:	b2db      	uxtb	r3, r3
 8000e2c:	b25a      	sxtb	r2, r3
 8000e2e:	187b      	adds	r3, r7, r1
 8000e30:	711a      	strb	r2, [r3, #4]
	return (lna);
 8000e32:	687a      	ldr	r2, [r7, #4]
 8000e34:	187b      	adds	r3, r7, r1
 8000e36:	0010      	movs	r0, r2
 8000e38:	0019      	movs	r1, r3
 8000e3a:	2398      	movs	r3, #152	; 0x98
 8000e3c:	001a      	movs	r2, r3
 8000e3e:	f005 fe35 	bl	8006aac <memcpy>
}
 8000e42:	6878      	ldr	r0, [r7, #4]
 8000e44:	46bd      	mov	sp, r7
 8000e46:	b02a      	add	sp, #168	; 0xa8
 8000e48:	bdb0      	pop	{r4, r5, r7, pc}

08000e4a <lna_check_valid_str>:
		if (READ_BIT(USART1->ISR, USART_ISR_RXNE_RXFNE))
			buffer[rcvcount++] = USART1->RDR;
	}
}

bool lna_check_valid_str(uint8_t *buffer) {
 8000e4a:	b580      	push	{r7, lr}
 8000e4c:	b084      	sub	sp, #16
 8000e4e:	af00      	add	r7, sp, #0
 8000e50:	6078      	str	r0, [r7, #4]
	bool is_valid_data = false;
 8000e52:	230f      	movs	r3, #15
 8000e54:	18fb      	adds	r3, r7, r3
 8000e56:	2200      	movs	r2, #0
 8000e58:	701a      	strb	r2, [r3, #0]
	if (buffer[0] == LTEL_START_MARK)
 8000e5a:	687b      	ldr	r3, [r7, #4]
 8000e5c:	781b      	ldrb	r3, [r3, #0]
 8000e5e:	2b7e      	cmp	r3, #126	; 0x7e
 8000e60:	d124      	bne.n	8000eac <lna_check_valid_str+0x62>
		if (buffer[1] == MODULE_FUNCTION)
 8000e62:	687b      	ldr	r3, [r7, #4]
 8000e64:	3301      	adds	r3, #1
 8000e66:	781b      	ldrb	r3, [r3, #0]
 8000e68:	2b09      	cmp	r3, #9
 8000e6a:	d11f      	bne.n	8000eac <lna_check_valid_str+0x62>
			if (buffer[2] == MODULE_ADDR)
 8000e6c:	687b      	ldr	r3, [r7, #4]
 8000e6e:	3302      	adds	r3, #2
 8000e70:	781b      	ldrb	r3, [r3, #0]
 8000e72:	2b08      	cmp	r3, #8
 8000e74:	d11a      	bne.n	8000eac <lna_check_valid_str+0x62>
				for (int i = 3; i < RX_UART1_BUFFLEN && is_valid_data == false;
 8000e76:	2303      	movs	r3, #3
 8000e78:	60bb      	str	r3, [r7, #8]
 8000e7a:	e00c      	b.n	8000e96 <lna_check_valid_str+0x4c>
						i++)
					is_valid_data = buffer[i] == LTEL_END_MARK ?
 8000e7c:	68bb      	ldr	r3, [r7, #8]
 8000e7e:	687a      	ldr	r2, [r7, #4]
 8000e80:	18d3      	adds	r3, r2, r3
 8000e82:	781a      	ldrb	r2, [r3, #0]
 8000e84:	230f      	movs	r3, #15
 8000e86:	18fb      	adds	r3, r7, r3
 8000e88:	3a7f      	subs	r2, #127	; 0x7f
 8000e8a:	4251      	negs	r1, r2
 8000e8c:	414a      	adcs	r2, r1
 8000e8e:	701a      	strb	r2, [r3, #0]
						i++)
 8000e90:	68bb      	ldr	r3, [r7, #8]
 8000e92:	3301      	adds	r3, #1
 8000e94:	60bb      	str	r3, [r7, #8]
				for (int i = 3; i < RX_UART1_BUFFLEN && is_valid_data == false;
 8000e96:	68bb      	ldr	r3, [r7, #8]
 8000e98:	2b18      	cmp	r3, #24
 8000e9a:	dc07      	bgt.n	8000eac <lna_check_valid_str+0x62>
 8000e9c:	230f      	movs	r3, #15
 8000e9e:	18fb      	adds	r3, r7, r3
 8000ea0:	781b      	ldrb	r3, [r3, #0]
 8000ea2:	2201      	movs	r2, #1
 8000ea4:	4053      	eors	r3, r2
 8000ea6:	b2db      	uxtb	r3, r3
 8000ea8:	2b00      	cmp	r3, #0
 8000eaa:	d1e7      	bne.n	8000e7c <lna_check_valid_str+0x32>
					true :
																	false;
	return (is_valid_data);
 8000eac:	230f      	movs	r3, #15
 8000eae:	18fb      	adds	r3, r7, r3
 8000eb0:	781b      	ldrb	r3, [r3, #0]
}
 8000eb2:	0018      	movs	r0, r3
 8000eb4:	46bd      	mov	sp, r7
 8000eb6:	b004      	add	sp, #16
 8000eb8:	bd80      	pop	{r7, pc}

08000eba <bda4601_set_att>:

void bda4601_set_att(uint8_t attenuation, uint8_t times) {
 8000eba:	b580      	push	{r7, lr}
 8000ebc:	b084      	sub	sp, #16
 8000ebe:	af00      	add	r7, sp, #0
 8000ec0:	0002      	movs	r2, r0
 8000ec2:	1dfb      	adds	r3, r7, #7
 8000ec4:	701a      	strb	r2, [r3, #0]
 8000ec6:	1dbb      	adds	r3, r7, #6
 8000ec8:	1c0a      	adds	r2, r1, #0
 8000eca:	701a      	strb	r2, [r3, #0]
	if (attenuation < 0 || attenuation > 31) {
 8000ecc:	1dfb      	adds	r3, r7, #7
 8000ece:	781b      	ldrb	r3, [r3, #0]
 8000ed0:	2b1f      	cmp	r3, #31
 8000ed2:	d902      	bls.n	8000eda <bda4601_set_att+0x20>
		attenuation = 0;
 8000ed4:	1dfb      	adds	r3, r7, #7
 8000ed6:	2200      	movs	r2, #0
 8000ed8:	701a      	strb	r2, [r3, #0]
	}

	for (uint8_t i = 0; i < times; i++) {
 8000eda:	230f      	movs	r3, #15
 8000edc:	18fb      	adds	r3, r7, r3
 8000ede:	2200      	movs	r2, #0
 8000ee0:	701a      	strb	r2, [r3, #0]
 8000ee2:	e059      	b.n	8000f98 <bda4601_set_att+0xde>
		uint8_t mask = 0b00100000;
 8000ee4:	230e      	movs	r3, #14
 8000ee6:	18fb      	adds	r3, r7, r3
 8000ee8:	2220      	movs	r2, #32
 8000eea:	701a      	strb	r2, [r3, #0]
		for (uint8_t j = 0; j < 6; j++) {
 8000eec:	230d      	movs	r3, #13
 8000eee:	18fb      	adds	r3, r7, r3
 8000ef0:	2200      	movs	r2, #0
 8000ef2:	701a      	strb	r2, [r3, #0]
 8000ef4:	e034      	b.n	8000f60 <bda4601_set_att+0xa6>
			//Ciclo for de 6 vueltas para enviar los 6bits de configuración
			if (mask & attenuation) {
 8000ef6:	230e      	movs	r3, #14
 8000ef8:	18fb      	adds	r3, r7, r3
 8000efa:	1dfa      	adds	r2, r7, #7
 8000efc:	781b      	ldrb	r3, [r3, #0]
 8000efe:	7812      	ldrb	r2, [r2, #0]
 8000f00:	4013      	ands	r3, r2
 8000f02:	b2db      	uxtb	r3, r3
 8000f04:	2b00      	cmp	r3, #0
 8000f06:	d007      	beq.n	8000f18 <bda4601_set_att+0x5e>
				//Si el bit de la mascara en 1 coincide con el bit del valor, entonces
				HAL_GPIO_WritePin(GPIOA, DATA_ATTENUATOR_Pin, GPIO_PIN_SET); //Pin data en alto
 8000f08:	23a0      	movs	r3, #160	; 0xa0
 8000f0a:	05db      	lsls	r3, r3, #23
 8000f0c:	2201      	movs	r2, #1
 8000f0e:	2120      	movs	r1, #32
 8000f10:	0018      	movs	r0, r3
 8000f12:	f002 fee5 	bl	8003ce0 <HAL_GPIO_WritePin>
 8000f16:	e006      	b.n	8000f26 <bda4601_set_att+0x6c>
			} else {
				HAL_GPIO_WritePin(GPIOA, DATA_ATTENUATOR_Pin, GPIO_PIN_RESET); //Pin data en bajo
 8000f18:	23a0      	movs	r3, #160	; 0xa0
 8000f1a:	05db      	lsls	r3, r3, #23
 8000f1c:	2200      	movs	r2, #0
 8000f1e:	2120      	movs	r1, #32
 8000f20:	0018      	movs	r0, r3
 8000f22:	f002 fedd 	bl	8003ce0 <HAL_GPIO_WritePin>
			}
			HAL_GPIO_WritePin(GPIOA, CLK_ATTENUATOR_Pin, GPIO_PIN_SET); //Pin clock en alto
 8000f26:	23a0      	movs	r3, #160	; 0xa0
 8000f28:	05db      	lsls	r3, r3, #23
 8000f2a:	2201      	movs	r2, #1
 8000f2c:	2110      	movs	r1, #16
 8000f2e:	0018      	movs	r0, r3
 8000f30:	f002 fed6 	bl	8003ce0 <HAL_GPIO_WritePin>
			HAL_Delay(1); //Delay de 1mS
 8000f34:	2001      	movs	r0, #1
 8000f36:	f001 f911 	bl	800215c <HAL_Delay>
			HAL_GPIO_WritePin(GPIOA, CLK_ATTENUATOR_Pin, GPIO_PIN_RESET); //Pin clock en bajo
 8000f3a:	23a0      	movs	r3, #160	; 0xa0
 8000f3c:	05db      	lsls	r3, r3, #23
 8000f3e:	2200      	movs	r2, #0
 8000f40:	2110      	movs	r1, #16
 8000f42:	0018      	movs	r0, r3
 8000f44:	f002 fecc 	bl	8003ce0 <HAL_GPIO_WritePin>
			mask = mask >> 1; //Muevo la máscara una posición
 8000f48:	220e      	movs	r2, #14
 8000f4a:	18bb      	adds	r3, r7, r2
 8000f4c:	18ba      	adds	r2, r7, r2
 8000f4e:	7812      	ldrb	r2, [r2, #0]
 8000f50:	0852      	lsrs	r2, r2, #1
 8000f52:	701a      	strb	r2, [r3, #0]
		for (uint8_t j = 0; j < 6; j++) {
 8000f54:	210d      	movs	r1, #13
 8000f56:	187b      	adds	r3, r7, r1
 8000f58:	781a      	ldrb	r2, [r3, #0]
 8000f5a:	187b      	adds	r3, r7, r1
 8000f5c:	3201      	adds	r2, #1
 8000f5e:	701a      	strb	r2, [r3, #0]
 8000f60:	230d      	movs	r3, #13
 8000f62:	18fb      	adds	r3, r7, r3
 8000f64:	781b      	ldrb	r3, [r3, #0]
 8000f66:	2b05      	cmp	r3, #5
 8000f68:	d9c5      	bls.n	8000ef6 <bda4601_set_att+0x3c>
		}
		HAL_GPIO_WritePin(GPIOA, LE_ATTENUATOR_Pin, GPIO_PIN_SET); //Pin LE en alto
 8000f6a:	23a0      	movs	r3, #160	; 0xa0
 8000f6c:	05db      	lsls	r3, r3, #23
 8000f6e:	2201      	movs	r2, #1
 8000f70:	2102      	movs	r1, #2
 8000f72:	0018      	movs	r0, r3
 8000f74:	f002 feb4 	bl	8003ce0 <HAL_GPIO_WritePin>
		HAL_Delay(1);
 8000f78:	2001      	movs	r0, #1
 8000f7a:	f001 f8ef 	bl	800215c <HAL_Delay>
		HAL_GPIO_WritePin(GPIOA, LE_ATTENUATOR_Pin, GPIO_PIN_RESET); //Pin LE en bajo
 8000f7e:	23a0      	movs	r3, #160	; 0xa0
 8000f80:	05db      	lsls	r3, r3, #23
 8000f82:	2200      	movs	r2, #0
 8000f84:	2102      	movs	r1, #2
 8000f86:	0018      	movs	r0, r3
 8000f88:	f002 feaa 	bl	8003ce0 <HAL_GPIO_WritePin>
	for (uint8_t i = 0; i < times; i++) {
 8000f8c:	210f      	movs	r1, #15
 8000f8e:	187b      	adds	r3, r7, r1
 8000f90:	781a      	ldrb	r2, [r3, #0]
 8000f92:	187b      	adds	r3, r7, r1
 8000f94:	3201      	adds	r2, #1
 8000f96:	701a      	strb	r2, [r3, #0]
 8000f98:	230f      	movs	r3, #15
 8000f9a:	18fa      	adds	r2, r7, r3
 8000f9c:	1dbb      	adds	r3, r7, #6
 8000f9e:	7812      	ldrb	r2, [r2, #0]
 8000fa0:	781b      	ldrb	r3, [r3, #0]
 8000fa2:	429a      	cmp	r2, r3
 8000fa4:	d39e      	bcc.n	8000ee4 <bda4601_set_att+0x2a>
	}

}
 8000fa6:	46c0      	nop			; (mov r8, r8)
 8000fa8:	46c0      	nop			; (mov r8, r8)
 8000faa:	46bd      	mov	sp, r7
 8000fac:	b004      	add	sp, #16
 8000fae:	bd80      	pop	{r7, pc}

08000fb0 <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 8000fb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000fb2:	46d6      	mov	lr, sl
 8000fb4:	464f      	mov	r7, r9
 8000fb6:	4646      	mov	r6, r8
 8000fb8:	b5c0      	push	{r6, r7, lr}
 8000fba:	b0fe      	sub	sp, #504	; 0x1f8
 8000fbc:	af24      	add	r7, sp, #144	; 0x90
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 8000fbe:	f001 f847 	bl	8002050 <HAL_Init>

	/* USER CODE BEGIN Init */

	/* enable clock access ro GPIOA and GPIOB */
	SET_BIT(RCC->IOPENR, RCC_IOPENR_GPIOAEN);
 8000fc2:	4bf4      	ldr	r3, [pc, #976]	; (8001394 <main+0x3e4>)
 8000fc4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000fc6:	4bf3      	ldr	r3, [pc, #972]	; (8001394 <main+0x3e4>)
 8000fc8:	2101      	movs	r1, #1
 8000fca:	430a      	orrs	r2, r1
 8000fcc:	635a      	str	r2, [r3, #52]	; 0x34
	SET_BIT(RCC->IOPENR, RCC_IOPENR_GPIOBEN);
 8000fce:	4bf1      	ldr	r3, [pc, #964]	; (8001394 <main+0x3e4>)
 8000fd0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000fd2:	4bf0      	ldr	r3, [pc, #960]	; (8001394 <main+0x3e4>)
 8000fd4:	2102      	movs	r1, #2
 8000fd6:	430a      	orrs	r2, r1
 8000fd8:	635a      	str	r2, [r3, #52]	; 0x34

	/* PBA15 as output */
	SET_BIT(GPIOA->MODER, GPIO_MODER_MODE15_0);
 8000fda:	23a0      	movs	r3, #160	; 0xa0
 8000fdc:	05db      	lsls	r3, r3, #23
 8000fde:	681a      	ldr	r2, [r3, #0]
 8000fe0:	23a0      	movs	r3, #160	; 0xa0
 8000fe2:	05db      	lsls	r3, r3, #23
 8000fe4:	2180      	movs	r1, #128	; 0x80
 8000fe6:	05c9      	lsls	r1, r1, #23
 8000fe8:	430a      	orrs	r2, r1
 8000fea:	601a      	str	r2, [r3, #0]
	CLEAR_BIT(GPIOA->MODER, GPIO_MODER_MODE15_1);
 8000fec:	23a0      	movs	r3, #160	; 0xa0
 8000fee:	05db      	lsls	r3, r3, #23
 8000ff0:	681a      	ldr	r2, [r3, #0]
 8000ff2:	23a0      	movs	r3, #160	; 0xa0
 8000ff4:	05db      	lsls	r3, r3, #23
 8000ff6:	0052      	lsls	r2, r2, #1
 8000ff8:	0852      	lsrs	r2, r2, #1
 8000ffa:	601a      	str	r2, [r3, #0]

	/* PB1 as output */
	SET_BIT(GPIOB->MODER, GPIO_MODER_MODE1_0);
 8000ffc:	4be6      	ldr	r3, [pc, #920]	; (8001398 <main+0x3e8>)
 8000ffe:	681a      	ldr	r2, [r3, #0]
 8001000:	4be5      	ldr	r3, [pc, #916]	; (8001398 <main+0x3e8>)
 8001002:	2104      	movs	r1, #4
 8001004:	430a      	orrs	r2, r1
 8001006:	601a      	str	r2, [r3, #0]
	CLEAR_BIT(GPIOB->MODER, GPIO_MODER_MODE1_1);
 8001008:	4be3      	ldr	r3, [pc, #908]	; (8001398 <main+0x3e8>)
 800100a:	681a      	ldr	r2, [r3, #0]
 800100c:	4be2      	ldr	r3, [pc, #904]	; (8001398 <main+0x3e8>)
 800100e:	2108      	movs	r1, #8
 8001010:	438a      	bics	r2, r1
 8001012:	601a      	str	r2, [r3, #0]

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 8001014:	f000 fb44 	bl	80016a0 <SystemClock_Config>

	/* USER CODE BEGIN SysInit */
	MX_GPIO_Init();
 8001018:	f000 fcce 	bl	80019b8 <MX_GPIO_Init>
	MX_DMA_Init();
 800101c:	f000 fcae 	bl	800197c <MX_DMA_Init>
	MX_ADC1_Init();
 8001020:	f000 fb9c 	bl	800175c <MX_ADC1_Init>
	MX_USART1_UART_Init();
 8001024:	f000 fc5c 	bl	80018e0 <MX_USART1_UART_Init>
    MX_IWDG_Init();
 8001028:	f000 fc3a 	bl	80018a0 <MX_IWDG_Init>

	i2c1_init();
 800102c:	f7ff fa84 	bl	8000538 <i2c1_init>
	/* USER CODE BEGIN 2 */

// Calibrate The ADC On Power-Up For Better Accuracy
	//uint8_t addrs[5];
	//i2c1_scanner(addrs);
	HAL_ADCEx_Calibration_Start(&hadc1);
 8001030:	4bda      	ldr	r3, [pc, #872]	; (800139c <main+0x3ec>)
 8001032:	0018      	movs	r0, r3
 8001034:	f002 f81e 	bl	8003074 <HAL_ADCEx_Calibration_Start>
	HAL_UART_Receive_IT(&huart1, &rxData, 1);
 8001038:	49d9      	ldr	r1, [pc, #868]	; (80013a0 <main+0x3f0>)
 800103a:	4bda      	ldr	r3, [pc, #872]	; (80013a4 <main+0x3f4>)
 800103c:	2201      	movs	r2, #1
 800103e:	0018      	movs	r0, r3
 8001040:	f003 fdec 	bl	8004c1c <HAL_UART_Receive_IT>

	tx_buffer_size = sprintf((char*) UART1_txBuffer, "LNA init\n\r");
 8001044:	4ad8      	ldr	r2, [pc, #864]	; (80013a8 <main+0x3f8>)
 8001046:	4bd9      	ldr	r3, [pc, #868]	; (80013ac <main+0x3fc>)
 8001048:	0011      	movs	r1, r2
 800104a:	0018      	movs	r0, r3
 800104c:	f005 fcc8 	bl	80069e0 <siprintf>
 8001050:	0003      	movs	r3, r0
 8001052:	b2da      	uxtb	r2, r3
 8001054:	4bd6      	ldr	r3, [pc, #856]	; (80013b0 <main+0x400>)
 8001056:	701a      	strb	r2, [r3, #0]
	HAL_GPIO_WritePin(UART1_TX_ENABLE_GPIO_Port, UART1_TX_ENABLE_Pin,
 8001058:	2380      	movs	r3, #128	; 0x80
 800105a:	0219      	lsls	r1, r3, #8
 800105c:	23a0      	movs	r3, #160	; 0xa0
 800105e:	05db      	lsls	r3, r3, #23
 8001060:	2201      	movs	r2, #1
 8001062:	0018      	movs	r0, r3
 8001064:	f002 fe3c 	bl	8003ce0 <HAL_GPIO_WritePin>
			GPIO_PIN_SET);
	HAL_UART_Transmit(&huart1, UART1_txBuffer, tx_buffer_size,
 8001068:	4bd1      	ldr	r3, [pc, #836]	; (80013b0 <main+0x400>)
 800106a:	781b      	ldrb	r3, [r3, #0]
 800106c:	b29a      	uxth	r2, r3
 800106e:	23fa      	movs	r3, #250	; 0xfa
 8001070:	009b      	lsls	r3, r3, #2
 8001072:	49ce      	ldr	r1, [pc, #824]	; (80013ac <main+0x3fc>)
 8001074:	48cb      	ldr	r0, [pc, #812]	; (80013a4 <main+0x3f4>)
 8001076:	f003 fd35 	bl	8004ae4 <HAL_UART_Transmit>
	UART_TRANSMIT_TIMEOUT);
	HAL_GPIO_WritePin(UART1_TX_ENABLE_GPIO_Port, UART1_TX_ENABLE_Pin,
 800107a:	2380      	movs	r3, #128	; 0x80
 800107c:	0219      	lsls	r1, r3, #8
 800107e:	23a0      	movs	r3, #160	; 0xa0
 8001080:	05db      	lsls	r3, r3, #23
 8001082:	2200      	movs	r2, #0
 8001084:	0018      	movs	r0, r3
 8001086:	f002 fe2b 	bl	8003ce0 <HAL_GPIO_WritePin>
			GPIO_PIN_RESET);
	uint8_t tries = 3;
 800108a:	2444      	movs	r4, #68	; 0x44
 800108c:	34ff      	adds	r4, #255	; 0xff
 800108e:	2518      	movs	r5, #24
 8001090:	1963      	adds	r3, r4, r5
 8001092:	2208      	movs	r2, #8
 8001094:	4694      	mov	ip, r2
 8001096:	44bc      	add	ip, r7
 8001098:	4463      	add	r3, ip
 800109a:	2203      	movs	r2, #3
 800109c:	701a      	strb	r2, [r3, #0]
	bda4601_set_att(eeprom_1byte_read(LNA_ATT_ADDR), tries);
 800109e:	2000      	movs	r0, #0
 80010a0:	f7ff f9ae 	bl	8000400 <eeprom_1byte_read>
 80010a4:	0003      	movs	r3, r0
 80010a6:	001a      	movs	r2, r3
 80010a8:	1963      	adds	r3, r4, r5
 80010aa:	2108      	movs	r1, #8
 80010ac:	468c      	mov	ip, r1
 80010ae:	44bc      	add	ip, r7
 80010b0:	4463      	add	r3, ip
 80010b2:	781b      	ldrb	r3, [r3, #0]
 80010b4:	0019      	movs	r1, r3
 80010b6:	0010      	movs	r0, r2
 80010b8:	f7ff feff 	bl	8000eba <bda4601_set_att>

	if (eeprom_1byte_read(POUT_ISCALIBRATED_ADDR) != POUT_ISCALIBRATED) {
 80010bc:	2007      	movs	r0, #7
 80010be:	f7ff f99f 	bl	8000400 <eeprom_1byte_read>
 80010c2:	0003      	movs	r3, r0
 80010c4:	2baa      	cmp	r3, #170	; 0xaa
 80010c6:	d00a      	beq.n	80010de <main+0x12e>
		eeprom_2byte_write(POUT_ADC_MIN_ADDR, POUT_ADC_MIN);
 80010c8:	23f4      	movs	r3, #244	; 0xf4
 80010ca:	005b      	lsls	r3, r3, #1
 80010cc:	0019      	movs	r1, r3
 80010ce:	2005      	movs	r0, #5
 80010d0:	f7ff f9e0 	bl	8000494 <eeprom_2byte_write>
		eeprom_2byte_write(POUT_ADC_MAX_ADDR, POUT_ADC_MAX);
 80010d4:	4bb7      	ldr	r3, [pc, #732]	; (80013b4 <main+0x404>)
 80010d6:	0019      	movs	r1, r3
 80010d8:	2003      	movs	r0, #3
 80010da:	f7ff f9db 	bl	8000494 <eeprom_2byte_write>
	/* USER CODE END 2 */

	/* Infinite loop */
	/* USER CODE BEGIN WHILE */

	HAL_ADC_Start_DMA(&hadc1, (uint32_t*) adcResultsDMA, 4);
 80010de:	49b6      	ldr	r1, [pc, #728]	; (80013b8 <main+0x408>)
 80010e0:	4bae      	ldr	r3, [pc, #696]	; (800139c <main+0x3ec>)
 80010e2:	2204      	movs	r2, #4
 80010e4:	0018      	movs	r0, r3
 80010e6:	f001 fb5d 	bl	80027a4 <HAL_ADC_Start_DMA>
	led_counter = HAL_GetTick();
 80010ea:	f001 f82d 	bl	8002148 <HAL_GetTick>
 80010ee:	0002      	movs	r2, r0
 80010f0:	4bb2      	ldr	r3, [pc, #712]	; (80013bc <main+0x40c>)
 80010f2:	601a      	str	r2, [r3, #0]
	uint32_t lna_print_counter = HAL_GetTick();
 80010f4:	f001 f828 	bl	8002148 <HAL_GetTick>
 80010f8:	0003      	movs	r3, r0
 80010fa:	22a2      	movs	r2, #162	; 0xa2
 80010fc:	0052      	lsls	r2, r2, #1
 80010fe:	2118      	movs	r1, #24
 8001100:	1852      	adds	r2, r2, r1
 8001102:	2108      	movs	r1, #8
 8001104:	468c      	mov	ip, r1
 8001106:	44bc      	add	ip, r7
 8001108:	4462      	add	r2, ip
 800110a:	6013      	str	r3, [r2, #0]

	bda4601_set_att(eeprom_1byte_read(LNA_ATT_ADDR), 5);
 800110c:	2000      	movs	r0, #0
 800110e:	f7ff f977 	bl	8000400 <eeprom_1byte_read>
 8001112:	0003      	movs	r3, r0
 8001114:	2105      	movs	r1, #5
 8001116:	0018      	movs	r0, r3
 8001118:	f7ff fecf 	bl	8000eba <bda4601_set_att>
//Fin function 1 second
		/* USER CODE END WHILE */

		/* USER CODE BEGIN 3 */

		if (isDataReady) {
 800111c:	4ba8      	ldr	r3, [pc, #672]	; (80013c0 <main+0x410>)
 800111e:	781b      	ldrb	r3, [r3, #0]
 8001120:	2b00      	cmp	r3, #0
 8001122:	d100      	bne.n	8001126 <main+0x176>
 8001124:	e1c5      	b.n	80014b2 <main+0x502>
 8001126:	466b      	mov	r3, sp
 8001128:	4699      	mov	r9, r3
			struct Lna lna;
			uint8_t LTEL_FRAME_LENGTH = 14;
 800112a:	21a1      	movs	r1, #161	; 0xa1
 800112c:	0049      	lsls	r1, r1, #1
 800112e:	2518      	movs	r5, #24
 8001130:	194b      	adds	r3, r1, r5
 8001132:	2208      	movs	r2, #8
 8001134:	4694      	mov	ip, r2
 8001136:	44bc      	add	ip, r7
 8001138:	4463      	add	r3, ip
 800113a:	220e      	movs	r2, #14
 800113c:	701a      	strb	r2, [r3, #0]
			uint8_t frame[LTEL_FRAME_LENGTH];
 800113e:	194b      	adds	r3, r1, r5
 8001140:	2208      	movs	r2, #8
 8001142:	4694      	mov	ip, r2
 8001144:	44bc      	add	ip, r7
 8001146:	4463      	add	r3, ip
 8001148:	781b      	ldrb	r3, [r3, #0]
 800114a:	001a      	movs	r2, r3
 800114c:	3a01      	subs	r2, #1
 800114e:	219e      	movs	r1, #158	; 0x9e
 8001150:	0049      	lsls	r1, r1, #1
 8001152:	1949      	adds	r1, r1, r5
 8001154:	2008      	movs	r0, #8
 8001156:	4684      	mov	ip, r0
 8001158:	44bc      	add	ip, r7
 800115a:	4461      	add	r1, ip
 800115c:	600a      	str	r2, [r1, #0]
 800115e:	613b      	str	r3, [r7, #16]
 8001160:	2200      	movs	r2, #0
 8001162:	617a      	str	r2, [r7, #20]
 8001164:	6938      	ldr	r0, [r7, #16]
 8001166:	6979      	ldr	r1, [r7, #20]
 8001168:	0002      	movs	r2, r0
 800116a:	0f52      	lsrs	r2, r2, #29
 800116c:	000c      	movs	r4, r1
 800116e:	00e4      	lsls	r4, r4, #3
 8001170:	607c      	str	r4, [r7, #4]
 8001172:	687c      	ldr	r4, [r7, #4]
 8001174:	4314      	orrs	r4, r2
 8001176:	607c      	str	r4, [r7, #4]
 8001178:	0002      	movs	r2, r0
 800117a:	00d2      	lsls	r2, r2, #3
 800117c:	603a      	str	r2, [r7, #0]
 800117e:	60bb      	str	r3, [r7, #8]
 8001180:	2200      	movs	r2, #0
 8001182:	60fa      	str	r2, [r7, #12]
 8001184:	68b8      	ldr	r0, [r7, #8]
 8001186:	68f9      	ldr	r1, [r7, #12]
 8001188:	0002      	movs	r2, r0
 800118a:	0f52      	lsrs	r2, r2, #29
 800118c:	000c      	movs	r4, r1
 800118e:	00e4      	lsls	r4, r4, #3
 8001190:	61fc      	str	r4, [r7, #28]
 8001192:	69fc      	ldr	r4, [r7, #28]
 8001194:	4314      	orrs	r4, r2
 8001196:	61fc      	str	r4, [r7, #28]
 8001198:	0002      	movs	r2, r0
 800119a:	00d2      	lsls	r2, r2, #3
 800119c:	61ba      	str	r2, [r7, #24]
 800119e:	3307      	adds	r3, #7
 80011a0:	08db      	lsrs	r3, r3, #3
 80011a2:	00db      	lsls	r3, r3, #3
 80011a4:	466a      	mov	r2, sp
 80011a6:	1ad3      	subs	r3, r2, r3
 80011a8:	469d      	mov	sp, r3
 80011aa:	ab24      	add	r3, sp, #144	; 0x90
 80011ac:	3300      	adds	r3, #0
 80011ae:	229c      	movs	r2, #156	; 0x9c
 80011b0:	0052      	lsls	r2, r2, #1
 80011b2:	1952      	adds	r2, r2, r5
 80011b4:	2108      	movs	r1, #8
 80011b6:	468c      	mov	ip, r1
 80011b8:	44bc      	add	ip, r7
 80011ba:	4462      	add	r2, ip
 80011bc:	6013      	str	r3, [r2, #0]
			switch (UART1_rxBuffer[3]) {
 80011be:	4b81      	ldr	r3, [pc, #516]	; (80013c4 <main+0x414>)
 80011c0:	78db      	ldrb	r3, [r3, #3]
 80011c2:	b2db      	uxtb	r3, r3
 80011c4:	3b11      	subs	r3, #17
 80011c6:	2b13      	cmp	r3, #19
 80011c8:	d900      	bls.n	80011cc <main+0x21c>
 80011ca:	e16a      	b.n	80014a2 <main+0x4f2>
 80011cc:	009a      	lsls	r2, r3, #2
 80011ce:	4b7e      	ldr	r3, [pc, #504]	; (80013c8 <main+0x418>)
 80011d0:	18d3      	adds	r3, r2, r3
 80011d2:	681b      	ldr	r3, [r3, #0]
 80011d4:	469f      	mov	pc, r3
			case QUERY_PARAMETER_LTEL:
				lna = calulate_lna_real_values(adcResultsDMA);
 80011d6:	2398      	movs	r3, #152	; 0x98
 80011d8:	2518      	movs	r5, #24
 80011da:	195b      	adds	r3, r3, r5
 80011dc:	2208      	movs	r2, #8
 80011de:	18ba      	adds	r2, r7, r2
 80011e0:	189c      	adds	r4, r3, r2
 80011e2:	2308      	movs	r3, #8
 80011e4:	18eb      	adds	r3, r5, r3
 80011e6:	19db      	adds	r3, r3, r7
 80011e8:	4a73      	ldr	r2, [pc, #460]	; (80013b8 <main+0x408>)
 80011ea:	0011      	movs	r1, r2
 80011ec:	0018      	movs	r0, r3
 80011ee:	f7ff fdc3 	bl	8000d78 <calulate_lna_real_values>
 80011f2:	4b76      	ldr	r3, [pc, #472]	; (80013cc <main+0x41c>)
 80011f4:	22a4      	movs	r2, #164	; 0xa4
 80011f6:	0052      	lsls	r2, r2, #1
 80011f8:	189a      	adds	r2, r3, r2
 80011fa:	2308      	movs	r3, #8
 80011fc:	18eb      	adds	r3, r5, r3
 80011fe:	19db      	adds	r3, r3, r7
 8001200:	18d3      	adds	r3, r2, r3
 8001202:	0020      	movs	r0, r4
 8001204:	0019      	movs	r1, r3
 8001206:	2398      	movs	r3, #152	; 0x98
 8001208:	001a      	movs	r2, r3
 800120a:	f005 fc4f 	bl	8006aac <memcpy>
				packet_lna_for_ltel_protocol(frame, lna);
 800120e:	2398      	movs	r3, #152	; 0x98
 8001210:	195b      	adds	r3, r3, r5
 8001212:	2208      	movs	r2, #8
 8001214:	18ba      	adds	r2, r7, r2
 8001216:	189c      	adds	r4, r3, r2
 8001218:	239c      	movs	r3, #156	; 0x9c
 800121a:	005b      	lsls	r3, r3, #1
 800121c:	195b      	adds	r3, r3, r5
 800121e:	2208      	movs	r2, #8
 8001220:	18ba      	adds	r2, r7, r2
 8001222:	189a      	adds	r2, r3, r2
 8001224:	6812      	ldr	r2, [r2, #0]
 8001226:	4690      	mov	r8, r2
 8001228:	466b      	mov	r3, sp
 800122a:	0018      	movs	r0, r3
 800122c:	0021      	movs	r1, r4
 800122e:	310c      	adds	r1, #12
 8001230:	238c      	movs	r3, #140	; 0x8c
 8001232:	001a      	movs	r2, r3
 8001234:	f005 fc3a 	bl	8006aac <memcpy>
 8001238:	6821      	ldr	r1, [r4, #0]
 800123a:	6862      	ldr	r2, [r4, #4]
 800123c:	68a3      	ldr	r3, [r4, #8]
 800123e:	4640      	mov	r0, r8
 8001240:	f7ff fbb3 	bl	80009aa <packet_lna_for_ltel_protocol>
				uart1_write_frame((char*) frame, LTEL_FRAME_SIZE);
 8001244:	239c      	movs	r3, #156	; 0x9c
 8001246:	005b      	lsls	r3, r3, #1
 8001248:	195b      	adds	r3, r3, r5
 800124a:	2208      	movs	r2, #8
 800124c:	4694      	mov	ip, r2
 800124e:	44bc      	add	ip, r7
 8001250:	4463      	add	r3, ip
 8001252:	681b      	ldr	r3, [r3, #0]
 8001254:	210e      	movs	r1, #14
 8001256:	0018      	movs	r0, r3
 8001258:	f000 fe4c 	bl	8001ef4 <uart1_write_frame>
				break;
 800125c:	e122      	b.n	80014a4 <main+0x4f4>
			case SET_ATT_LTEL:
				uint8_t attenuation_value = UART1_rxBuffer[6];
 800125e:	2138      	movs	r1, #56	; 0x38
 8001260:	31ff      	adds	r1, #255	; 0xff
 8001262:	2518      	movs	r5, #24
 8001264:	194b      	adds	r3, r1, r5
 8001266:	2208      	movs	r2, #8
 8001268:	4694      	mov	ip, r2
 800126a:	44bc      	add	ip, r7
 800126c:	4463      	add	r3, ip
 800126e:	4a55      	ldr	r2, [pc, #340]	; (80013c4 <main+0x414>)
 8001270:	7992      	ldrb	r2, [r2, #6]
 8001272:	701a      	strb	r2, [r3, #0]
				uint8_t tries = 2;
 8001274:	209b      	movs	r0, #155	; 0x9b
 8001276:	0040      	lsls	r0, r0, #1
 8001278:	1943      	adds	r3, r0, r5
 800127a:	2208      	movs	r2, #8
 800127c:	4694      	mov	ip, r2
 800127e:	44bc      	add	ip, r7
 8001280:	4463      	add	r3, ip
 8001282:	2202      	movs	r2, #2
 8001284:	701a      	strb	r2, [r3, #0]
				bda4601_set_att(attenuation_value, tries);
 8001286:	1943      	adds	r3, r0, r5
 8001288:	2208      	movs	r2, #8
 800128a:	4694      	mov	ip, r2
 800128c:	44bc      	add	ip, r7
 800128e:	4463      	add	r3, ip
 8001290:	781a      	ldrb	r2, [r3, #0]
 8001292:	000c      	movs	r4, r1
 8001294:	1963      	adds	r3, r4, r5
 8001296:	2108      	movs	r1, #8
 8001298:	468c      	mov	ip, r1
 800129a:	44bc      	add	ip, r7
 800129c:	4463      	add	r3, ip
 800129e:	781b      	ldrb	r3, [r3, #0]
 80012a0:	0011      	movs	r1, r2
 80012a2:	0018      	movs	r0, r3
 80012a4:	f7ff fe09 	bl	8000eba <bda4601_set_att>
				eeprom_1byte_write(LNA_ATT_ADDR, attenuation_value);
 80012a8:	1963      	adds	r3, r4, r5
 80012aa:	2208      	movs	r2, #8
 80012ac:	4694      	mov	ip, r2
 80012ae:	44bc      	add	ip, r7
 80012b0:	4463      	add	r3, ip
 80012b2:	781b      	ldrb	r3, [r3, #0]
 80012b4:	0019      	movs	r1, r3
 80012b6:	2000      	movs	r0, #0
 80012b8:	f7ff f8c1 	bl	800043e <eeprom_1byte_write>
				tx_buffer_size = sprintf((char*) UART1_txBuffer,
 80012bc:	1963      	adds	r3, r4, r5
 80012be:	2208      	movs	r2, #8
 80012c0:	4694      	mov	ip, r2
 80012c2:	44bc      	add	ip, r7
 80012c4:	4463      	add	r3, ip
 80012c6:	781a      	ldrb	r2, [r3, #0]
 80012c8:	4941      	ldr	r1, [pc, #260]	; (80013d0 <main+0x420>)
 80012ca:	4b38      	ldr	r3, [pc, #224]	; (80013ac <main+0x3fc>)
 80012cc:	0018      	movs	r0, r3
 80012ce:	f005 fb87 	bl	80069e0 <siprintf>
 80012d2:	0003      	movs	r3, r0
 80012d4:	b2da      	uxtb	r2, r3
 80012d6:	4b36      	ldr	r3, [pc, #216]	; (80013b0 <main+0x400>)
 80012d8:	701a      	strb	r2, [r3, #0]
						"Attenuation %u\r\n", attenuation_value);
				uart1_write_frame(UART1_txBuffer, tx_buffer_size);
 80012da:	4b35      	ldr	r3, [pc, #212]	; (80013b0 <main+0x400>)
 80012dc:	781a      	ldrb	r2, [r3, #0]
 80012de:	4b33      	ldr	r3, [pc, #204]	; (80013ac <main+0x3fc>)
 80012e0:	0011      	movs	r1, r2
 80012e2:	0018      	movs	r0, r3
 80012e4:	f000 fe06 	bl	8001ef4 <uart1_write_frame>
				break;
 80012e8:	e0dc      	b.n	80014a4 <main+0x4f4>
			case SET_POUT_MAX:
				eeprom_2byte_write(POUT_ADC_MAX_ADDR,
						adcResultsDMA[POUT_INDEX]);
 80012ea:	4b33      	ldr	r3, [pc, #204]	; (80013b8 <main+0x408>)
 80012ec:	881b      	ldrh	r3, [r3, #0]
 80012ee:	b29b      	uxth	r3, r3
				eeprom_2byte_write(POUT_ADC_MAX_ADDR,
 80012f0:	0019      	movs	r1, r3
 80012f2:	2003      	movs	r0, #3
 80012f4:	f7ff f8ce 	bl	8000494 <eeprom_2byte_write>
				HAL_Delay(5);
 80012f8:	2005      	movs	r0, #5
 80012fa:	f000 ff2f 	bl	800215c <HAL_Delay>
				eeprom_1byte_write(POUT_ISCALIBRATED_ADDR, POUT_ISCALIBRATED);
 80012fe:	21aa      	movs	r1, #170	; 0xaa
 8001300:	2007      	movs	r0, #7
 8001302:	f7ff f89c 	bl	800043e <eeprom_1byte_write>
				tx_buffer_size = sprintf((char*) UART1_txBuffer,
						"Saved adc = %d as Pout 0 [dBm]\n\r",
						adcResultsDMA[POUT_INDEX]);
 8001306:	4b2c      	ldr	r3, [pc, #176]	; (80013b8 <main+0x408>)
 8001308:	881b      	ldrh	r3, [r3, #0]
 800130a:	b29b      	uxth	r3, r3
				tx_buffer_size = sprintf((char*) UART1_txBuffer,
 800130c:	001a      	movs	r2, r3
 800130e:	4931      	ldr	r1, [pc, #196]	; (80013d4 <main+0x424>)
 8001310:	4b26      	ldr	r3, [pc, #152]	; (80013ac <main+0x3fc>)
 8001312:	0018      	movs	r0, r3
 8001314:	f005 fb64 	bl	80069e0 <siprintf>
 8001318:	0003      	movs	r3, r0
 800131a:	b2da      	uxtb	r2, r3
 800131c:	4b24      	ldr	r3, [pc, #144]	; (80013b0 <main+0x400>)
 800131e:	701a      	strb	r2, [r3, #0]
				uart1_write_frame(UART1_txBuffer, tx_buffer_size);
 8001320:	4b23      	ldr	r3, [pc, #140]	; (80013b0 <main+0x400>)
 8001322:	781a      	ldrb	r2, [r3, #0]
 8001324:	4b21      	ldr	r3, [pc, #132]	; (80013ac <main+0x3fc>)
 8001326:	0011      	movs	r1, r2
 8001328:	0018      	movs	r0, r3
 800132a:	f000 fde3 	bl	8001ef4 <uart1_write_frame>
				break;
 800132e:	e0b9      	b.n	80014a4 <main+0x4f4>
			case SET_POUT_MIN:
				eeprom_2byte_write(POUT_ADC_MIN_ADDR,
						adcResultsDMA[POUT_INDEX]);
 8001330:	4b21      	ldr	r3, [pc, #132]	; (80013b8 <main+0x408>)
 8001332:	881b      	ldrh	r3, [r3, #0]
 8001334:	b29b      	uxth	r3, r3
				eeprom_2byte_write(POUT_ADC_MIN_ADDR,
 8001336:	0019      	movs	r1, r3
 8001338:	2005      	movs	r0, #5
 800133a:	f7ff f8ab 	bl	8000494 <eeprom_2byte_write>
				HAL_Delay(5);
 800133e:	2005      	movs	r0, #5
 8001340:	f000 ff0c 	bl	800215c <HAL_Delay>
				eeprom_1byte_write(POUT_ISCALIBRATED_ADDR, POUT_ISCALIBRATED);
 8001344:	21aa      	movs	r1, #170	; 0xaa
 8001346:	2007      	movs	r0, #7
 8001348:	f7ff f879 	bl	800043e <eeprom_1byte_write>
				tx_buffer_size = sprintf((char*) UART1_txBuffer,
						"Saved adc = %d as Pout -30 [dBm]\n\r",
						adcResultsDMA[POUT_INDEX]);
 800134c:	4b1a      	ldr	r3, [pc, #104]	; (80013b8 <main+0x408>)
 800134e:	881b      	ldrh	r3, [r3, #0]
 8001350:	b29b      	uxth	r3, r3
				tx_buffer_size = sprintf((char*) UART1_txBuffer,
 8001352:	001a      	movs	r2, r3
 8001354:	4920      	ldr	r1, [pc, #128]	; (80013d8 <main+0x428>)
 8001356:	4b15      	ldr	r3, [pc, #84]	; (80013ac <main+0x3fc>)
 8001358:	0018      	movs	r0, r3
 800135a:	f005 fb41 	bl	80069e0 <siprintf>
 800135e:	0003      	movs	r3, r0
 8001360:	b2da      	uxtb	r2, r3
 8001362:	4b13      	ldr	r3, [pc, #76]	; (80013b0 <main+0x400>)
 8001364:	701a      	strb	r2, [r3, #0]
				uart1_write_frame(UART1_txBuffer, tx_buffer_size);
 8001366:	4b12      	ldr	r3, [pc, #72]	; (80013b0 <main+0x400>)
 8001368:	781a      	ldrb	r2, [r3, #0]
 800136a:	4b10      	ldr	r3, [pc, #64]	; (80013ac <main+0x3fc>)
 800136c:	0011      	movs	r1, r2
 800136e:	0018      	movs	r0, r3
 8001370:	f000 fdc0 	bl	8001ef4 <uart1_write_frame>
				break;
 8001374:	e096      	b.n	80014a4 <main+0x4f4>
			case QUERY_PARAMETER_STR:
				isPrintEnable = !isPrintEnable;
 8001376:	4b19      	ldr	r3, [pc, #100]	; (80013dc <main+0x42c>)
 8001378:	781b      	ldrb	r3, [r3, #0]
 800137a:	1e5a      	subs	r2, r3, #1
 800137c:	4193      	sbcs	r3, r2
 800137e:	b2db      	uxtb	r3, r3
 8001380:	2201      	movs	r2, #1
 8001382:	4053      	eors	r3, r2
 8001384:	b2db      	uxtb	r3, r3
 8001386:	1c1a      	adds	r2, r3, #0
 8001388:	2301      	movs	r3, #1
 800138a:	4013      	ands	r3, r2
 800138c:	b2da      	uxtb	r2, r3
 800138e:	4b13      	ldr	r3, [pc, #76]	; (80013dc <main+0x42c>)
 8001390:	701a      	strb	r2, [r3, #0]
				break;
 8001392:	e087      	b.n	80014a4 <main+0x4f4>
 8001394:	40021000 	.word	0x40021000
 8001398:	50000400 	.word	0x50000400
 800139c:	20000078 	.word	0x20000078
 80013a0:	20000206 	.word	0x20000206
 80013a4:	20000148 	.word	0x20000148
 80013a8:	080071dc 	.word	0x080071dc
 80013ac:	20000208 	.word	0x20000208
 80013b0:	2000026c 	.word	0x2000026c
 80013b4:	00000729 	.word	0x00000729
 80013b8:	200001dc 	.word	0x200001dc
 80013bc:	200001e8 	.word	0x200001e8
 80013c0:	2000026d 	.word	0x2000026d
 80013c4:	200001ec 	.word	0x200001ec
 80013c8:	080072c4 	.word	0x080072c4
 80013cc:	fffffeb8 	.word	0xfffffeb8
 80013d0:	080071e8 	.word	0x080071e8
 80013d4:	080071fc 	.word	0x080071fc
 80013d8:	08007220 	.word	0x08007220
 80013dc:	200001e4 	.word	0x200001e4
			case QUERY_ADC:
				//adc_media_calc();
				sprintf((char*) UART1_txBuffer,
						"Pout %d  \t Gain %u \t Curent %u \t Voltage %u\r\n",
						adcResultsDMA[POUT_INDEX], adcResultsDMA[GAIN_INDEX],
 80013e0:	4ba2      	ldr	r3, [pc, #648]	; (800166c <main+0x6bc>)
 80013e2:	881b      	ldrh	r3, [r3, #0]
 80013e4:	b29b      	uxth	r3, r3
				sprintf((char*) UART1_txBuffer,
 80013e6:	469c      	mov	ip, r3
						adcResultsDMA[POUT_INDEX], adcResultsDMA[GAIN_INDEX],
 80013e8:	4ba0      	ldr	r3, [pc, #640]	; (800166c <main+0x6bc>)
 80013ea:	889b      	ldrh	r3, [r3, #4]
 80013ec:	b29b      	uxth	r3, r3
				sprintf((char*) UART1_txBuffer,
 80013ee:	001c      	movs	r4, r3
						adcResultsDMA[CURRENT_INDEX],
 80013f0:	4b9e      	ldr	r3, [pc, #632]	; (800166c <main+0x6bc>)
 80013f2:	885b      	ldrh	r3, [r3, #2]
 80013f4:	b29b      	uxth	r3, r3
				sprintf((char*) UART1_txBuffer,
 80013f6:	001a      	movs	r2, r3
						adcResultsDMA[VOLTAGE_INDEX]);
 80013f8:	4b9c      	ldr	r3, [pc, #624]	; (800166c <main+0x6bc>)
 80013fa:	88db      	ldrh	r3, [r3, #6]
 80013fc:	b29b      	uxth	r3, r3
				sprintf((char*) UART1_txBuffer,
 80013fe:	499c      	ldr	r1, [pc, #624]	; (8001670 <main+0x6c0>)
 8001400:	489c      	ldr	r0, [pc, #624]	; (8001674 <main+0x6c4>)
 8001402:	9301      	str	r3, [sp, #4]
 8001404:	9200      	str	r2, [sp, #0]
 8001406:	0023      	movs	r3, r4
 8001408:	4662      	mov	r2, ip
 800140a:	f005 fae9 	bl	80069e0 <siprintf>
				uart1_write_frame((char*) UART1_txBuffer, TX_UART1_BUFFLEN);
 800140e:	4b99      	ldr	r3, [pc, #612]	; (8001674 <main+0x6c4>)
 8001410:	2164      	movs	r1, #100	; 0x64
 8001412:	0018      	movs	r0, r3
 8001414:	f000 fd6e 	bl	8001ef4 <uart1_write_frame>
				break;
 8001418:	e044      	b.n	80014a4 <main+0x4f4>
			case QUERY_PARAMETER_SIGMA:
				lna = calulate_lna_real_values(adcResultsDMA);
 800141a:	2398      	movs	r3, #152	; 0x98
 800141c:	2518      	movs	r5, #24
 800141e:	195b      	adds	r3, r3, r5
 8001420:	2208      	movs	r2, #8
 8001422:	18ba      	adds	r2, r7, r2
 8001424:	189c      	adds	r4, r3, r2
 8001426:	2308      	movs	r3, #8
 8001428:	18eb      	adds	r3, r5, r3
 800142a:	19db      	adds	r3, r3, r7
 800142c:	4a8f      	ldr	r2, [pc, #572]	; (800166c <main+0x6bc>)
 800142e:	0011      	movs	r1, r2
 8001430:	0018      	movs	r0, r3
 8001432:	f7ff fca1 	bl	8000d78 <calulate_lna_real_values>
 8001436:	4b90      	ldr	r3, [pc, #576]	; (8001678 <main+0x6c8>)
 8001438:	22a4      	movs	r2, #164	; 0xa4
 800143a:	0052      	lsls	r2, r2, #1
 800143c:	189a      	adds	r2, r3, r2
 800143e:	2308      	movs	r3, #8
 8001440:	18eb      	adds	r3, r5, r3
 8001442:	19db      	adds	r3, r3, r7
 8001444:	18d3      	adds	r3, r2, r3
 8001446:	0020      	movs	r0, r4
 8001448:	0019      	movs	r1, r3
 800144a:	2398      	movs	r3, #152	; 0x98
 800144c:	001a      	movs	r2, r3
 800144e:	f005 fb2d 	bl	8006aac <memcpy>
				sigma_set_parameter_frame(frame, lna);
 8001452:	2398      	movs	r3, #152	; 0x98
 8001454:	195b      	adds	r3, r3, r5
 8001456:	2208      	movs	r2, #8
 8001458:	18ba      	adds	r2, r7, r2
 800145a:	189c      	adds	r4, r3, r2
 800145c:	239c      	movs	r3, #156	; 0x9c
 800145e:	005b      	lsls	r3, r3, #1
 8001460:	195b      	adds	r3, r3, r5
 8001462:	2208      	movs	r2, #8
 8001464:	18ba      	adds	r2, r7, r2
 8001466:	189a      	adds	r2, r3, r2
 8001468:	6812      	ldr	r2, [r2, #0]
 800146a:	4690      	mov	r8, r2
 800146c:	466b      	mov	r3, sp
 800146e:	0018      	movs	r0, r3
 8001470:	0021      	movs	r1, r4
 8001472:	310c      	adds	r1, #12
 8001474:	238c      	movs	r3, #140	; 0x8c
 8001476:	001a      	movs	r2, r3
 8001478:	f005 fb18 	bl	8006aac <memcpy>
 800147c:	6821      	ldr	r1, [r4, #0]
 800147e:	6862      	ldr	r2, [r4, #4]
 8001480:	68a3      	ldr	r3, [r4, #8]
 8001482:	4640      	mov	r0, r8
 8001484:	f7ff fb0a 	bl	8000a9c <sigma_set_parameter_frame>
				uart1_write_frame((char*) frame, LTEL_FRAME_SIZE);
 8001488:	239c      	movs	r3, #156	; 0x9c
 800148a:	005b      	lsls	r3, r3, #1
 800148c:	195b      	adds	r3, r3, r5
 800148e:	2208      	movs	r2, #8
 8001490:	4694      	mov	ip, r2
 8001492:	44bc      	add	ip, r7
 8001494:	4463      	add	r3, ip
 8001496:	681b      	ldr	r3, [r3, #0]
 8001498:	210e      	movs	r1, #14
 800149a:	0018      	movs	r0, r3
 800149c:	f000 fd2a 	bl	8001ef4 <uart1_write_frame>
				break;
 80014a0:	e000      	b.n	80014a4 <main+0x4f4>
			default:
				break;
 80014a2:	46c0      	nop			; (mov r8, r8)
			}
			isDataReady = false;
 80014a4:	4b75      	ldr	r3, [pc, #468]	; (800167c <main+0x6cc>)
 80014a6:	2200      	movs	r2, #0
 80014a8:	701a      	strb	r2, [r3, #0]
			uart_clean_buffer();
 80014aa:	f000 faf9 	bl	8001aa0 <uart_clean_buffer>
 80014ae:	46cd      	mov	sp, r9
 80014b0:	e007      	b.n	80014c2 <main+0x512>
		} else {
			//lna_uart_read();
			isDataReady = lna_check_valid_str(UART1_rxBuffer);
 80014b2:	4b73      	ldr	r3, [pc, #460]	; (8001680 <main+0x6d0>)
 80014b4:	0018      	movs	r0, r3
 80014b6:	f7ff fcc8 	bl	8000e4a <lna_check_valid_str>
 80014ba:	0003      	movs	r3, r0
 80014bc:	001a      	movs	r2, r3
 80014be:	4b6f      	ldr	r3, [pc, #444]	; (800167c <main+0x6cc>)
 80014c0:	701a      	strb	r2, [r3, #0]
		}

		if (isPrintEnable)
 80014c2:	4b70      	ldr	r3, [pc, #448]	; (8001684 <main+0x6d4>)
 80014c4:	781b      	ldrb	r3, [r3, #0]
 80014c6:	2b00      	cmp	r3, #0
 80014c8:	d100      	bne.n	80014cc <main+0x51c>
 80014ca:	e0a4      	b.n	8001616 <main+0x666>
			if (HAL_GetTick() - lna_print_counter > LNA_PRINT_TIMEOUT) {
 80014cc:	f000 fe3c 	bl	8002148 <HAL_GetTick>
 80014d0:	0002      	movs	r2, r0
 80014d2:	23a2      	movs	r3, #162	; 0xa2
 80014d4:	005b      	lsls	r3, r3, #1
 80014d6:	2018      	movs	r0, #24
 80014d8:	181b      	adds	r3, r3, r0
 80014da:	2108      	movs	r1, #8
 80014dc:	1879      	adds	r1, r7, r1
 80014de:	1859      	adds	r1, r3, r1
 80014e0:	680b      	ldr	r3, [r1, #0]
 80014e2:	1ad2      	subs	r2, r2, r3
 80014e4:	23fa      	movs	r3, #250	; 0xfa
 80014e6:	00db      	lsls	r3, r3, #3
 80014e8:	429a      	cmp	r2, r3
 80014ea:	d800      	bhi.n	80014ee <main+0x53e>
 80014ec:	e093      	b.n	8001616 <main+0x666>
				struct Lna lna;
				lna = calulate_lna_real_values(adcResultsDMA);
 80014ee:	2198      	movs	r1, #152	; 0x98
 80014f0:	180b      	adds	r3, r1, r0
 80014f2:	2208      	movs	r2, #8
 80014f4:	18ba      	adds	r2, r7, r2
 80014f6:	189c      	adds	r4, r3, r2
 80014f8:	0005      	movs	r5, r0
 80014fa:	2308      	movs	r3, #8
 80014fc:	18c3      	adds	r3, r0, r3
 80014fe:	19db      	adds	r3, r3, r7
 8001500:	4a5a      	ldr	r2, [pc, #360]	; (800166c <main+0x6bc>)
 8001502:	0011      	movs	r1, r2
 8001504:	0018      	movs	r0, r3
 8001506:	f7ff fc37 	bl	8000d78 <calulate_lna_real_values>
 800150a:	4b5b      	ldr	r3, [pc, #364]	; (8001678 <main+0x6c8>)
 800150c:	20a4      	movs	r0, #164	; 0xa4
 800150e:	0040      	lsls	r0, r0, #1
 8001510:	1818      	adds	r0, r3, r0
 8001512:	002a      	movs	r2, r5
 8001514:	0015      	movs	r5, r2
 8001516:	2308      	movs	r3, #8
 8001518:	18d3      	adds	r3, r2, r3
 800151a:	19db      	adds	r3, r3, r7
 800151c:	18c3      	adds	r3, r0, r3
 800151e:	0020      	movs	r0, r4
 8001520:	0019      	movs	r1, r3
 8001522:	2398      	movs	r3, #152	; 0x98
 8001524:	001a      	movs	r2, r3
 8001526:	f005 fac1 	bl	8006aac <memcpy>
				char *buffer = (char*) UART1_txBuffer;
 800152a:	4b52      	ldr	r3, [pc, #328]	; (8001674 <main+0x6c4>)
 800152c:	2098      	movs	r0, #152	; 0x98
 800152e:	0040      	lsls	r0, r0, #1
 8001530:	002a      	movs	r2, r5
 8001532:	1881      	adds	r1, r0, r2
 8001534:	2408      	movs	r4, #8
 8001536:	193c      	adds	r4, r7, r4
 8001538:	190c      	adds	r4, r1, r4
 800153a:	6023      	str	r3, [r4, #0]
				uint8_t buffer_length;
				tx_buffer_size =
						sprintf(buffer,
								"Pout %d[dBm] Att %u[dB] Gain %u[dB] Pin %d[dBm] Curent %d[mA] Voltage %u[V]\r\n",
								lna.pout, lna.attenuation, lna.gain, lna.pin,
 800153c:	2198      	movs	r1, #152	; 0x98
 800153e:	188b      	adds	r3, r1, r2
 8001540:	2408      	movs	r4, #8
 8001542:	46a4      	mov	ip, r4
 8001544:	44bc      	add	ip, r7
 8001546:	4463      	add	r3, ip
 8001548:	789b      	ldrb	r3, [r3, #2]
 800154a:	b25b      	sxtb	r3, r3
						sprintf(buffer,
 800154c:	4698      	mov	r8, r3
								lna.pout, lna.attenuation, lna.gain, lna.pin,
 800154e:	188b      	adds	r3, r1, r2
 8001550:	2408      	movs	r4, #8
 8001552:	46a4      	mov	ip, r4
 8001554:	44bc      	add	ip, r7
 8001556:	4463      	add	r3, ip
 8001558:	781b      	ldrb	r3, [r3, #0]
						sprintf(buffer,
 800155a:	4699      	mov	r9, r3
								lna.pout, lna.attenuation, lna.gain, lna.pin,
 800155c:	188b      	adds	r3, r1, r2
 800155e:	2408      	movs	r4, #8
 8001560:	46a4      	mov	ip, r4
 8001562:	44bc      	add	ip, r7
 8001564:	4463      	add	r3, ip
 8001566:	785b      	ldrb	r3, [r3, #1]
						sprintf(buffer,
 8001568:	469c      	mov	ip, r3
								lna.pout, lna.attenuation, lna.gain, lna.pin,
 800156a:	188b      	adds	r3, r1, r2
 800156c:	2408      	movs	r4, #8
 800156e:	46a2      	mov	sl, r4
 8001570:	44ba      	add	sl, r7
 8001572:	4453      	add	r3, sl
 8001574:	791b      	ldrb	r3, [r3, #4]
 8001576:	b25b      	sxtb	r3, r3
						sprintf(buffer,
 8001578:	001c      	movs	r4, r3
								lna.current, (uint8_t) lna.voltage);
 800157a:	0015      	movs	r5, r2
 800157c:	188b      	adds	r3, r1, r2
 800157e:	2208      	movs	r2, #8
 8001580:	4692      	mov	sl, r2
 8001582:	44ba      	add	sl, r7
 8001584:	4453      	add	r3, sl
 8001586:	78db      	ldrb	r3, [r3, #3]
						sprintf(buffer,
 8001588:	001a      	movs	r2, r3
								lna.current, (uint8_t) lna.voltage);
 800158a:	194b      	adds	r3, r1, r5
 800158c:	2108      	movs	r1, #8
 800158e:	468a      	mov	sl, r1
 8001590:	44ba      	add	sl, r7
 8001592:	4453      	add	r3, sl
 8001594:	795b      	ldrb	r3, [r3, #5]
						sprintf(buffer,
 8001596:	493c      	ldr	r1, [pc, #240]	; (8001688 <main+0x6d8>)
 8001598:	1940      	adds	r0, r0, r5
 800159a:	2608      	movs	r6, #8
 800159c:	46b2      	mov	sl, r6
 800159e:	44ba      	add	sl, r7
 80015a0:	4450      	add	r0, sl
 80015a2:	6800      	ldr	r0, [r0, #0]
 80015a4:	9303      	str	r3, [sp, #12]
 80015a6:	9202      	str	r2, [sp, #8]
 80015a8:	9401      	str	r4, [sp, #4]
 80015aa:	4664      	mov	r4, ip
 80015ac:	9400      	str	r4, [sp, #0]
 80015ae:	464b      	mov	r3, r9
 80015b0:	4642      	mov	r2, r8
 80015b2:	f005 fa15 	bl	80069e0 <siprintf>
 80015b6:	0003      	movs	r3, r0
				tx_buffer_size =
 80015b8:	b2da      	uxtb	r2, r3
 80015ba:	4b34      	ldr	r3, [pc, #208]	; (800168c <main+0x6dc>)
 80015bc:	701a      	strb	r2, [r3, #0]

				HAL_GPIO_WritePin(UART1_TX_ENABLE_GPIO_Port,
 80015be:	2380      	movs	r3, #128	; 0x80
 80015c0:	0219      	lsls	r1, r3, #8
 80015c2:	23a0      	movs	r3, #160	; 0xa0
 80015c4:	05db      	lsls	r3, r3, #23
 80015c6:	2201      	movs	r2, #1
 80015c8:	0018      	movs	r0, r3
 80015ca:	f002 fb89 	bl	8003ce0 <HAL_GPIO_WritePin>
				UART1_TX_ENABLE_Pin, GPIO_PIN_SET);
				HAL_UART_Transmit(&huart1, buffer, tx_buffer_size,
 80015ce:	4b2f      	ldr	r3, [pc, #188]	; (800168c <main+0x6dc>)
 80015d0:	781b      	ldrb	r3, [r3, #0]
 80015d2:	b29a      	uxth	r2, r3
 80015d4:	23fa      	movs	r3, #250	; 0xfa
 80015d6:	009b      	lsls	r3, r3, #2
 80015d8:	2098      	movs	r0, #152	; 0x98
 80015da:	0040      	lsls	r0, r0, #1
 80015dc:	002c      	movs	r4, r5
 80015de:	1901      	adds	r1, r0, r4
 80015e0:	2008      	movs	r0, #8
 80015e2:	4684      	mov	ip, r0
 80015e4:	44bc      	add	ip, r7
 80015e6:	4461      	add	r1, ip
 80015e8:	6809      	ldr	r1, [r1, #0]
 80015ea:	4829      	ldr	r0, [pc, #164]	; (8001690 <main+0x6e0>)
 80015ec:	f003 fa7a 	bl	8004ae4 <HAL_UART_Transmit>
				UART_TRANSMIT_TIMEOUT);
				HAL_GPIO_WritePin(UART1_TX_ENABLE_GPIO_Port,
 80015f0:	2380      	movs	r3, #128	; 0x80
 80015f2:	0219      	lsls	r1, r3, #8
 80015f4:	23a0      	movs	r3, #160	; 0xa0
 80015f6:	05db      	lsls	r3, r3, #23
 80015f8:	2200      	movs	r2, #0
 80015fa:	0018      	movs	r0, r3
 80015fc:	f002 fb70 	bl	8003ce0 <HAL_GPIO_WritePin>
				UART1_TX_ENABLE_Pin, GPIO_PIN_RESET);
				lna_print_counter = HAL_GetTick();
 8001600:	f000 fda2 	bl	8002148 <HAL_GetTick>
 8001604:	0003      	movs	r3, r0
 8001606:	22a2      	movs	r2, #162	; 0xa2
 8001608:	0052      	lsls	r2, r2, #1
 800160a:	1912      	adds	r2, r2, r4
 800160c:	2108      	movs	r1, #8
 800160e:	468c      	mov	ip, r1
 8001610:	44bc      	add	ip, r7
 8001612:	4462      	add	r2, ip
 8001614:	6013      	str	r3, [r2, #0]

			}

		if (HAL_GetTick() - led_counter > LED_STATE_TIMEOUT)
 8001616:	f000 fd97 	bl	8002148 <HAL_GetTick>
 800161a:	0002      	movs	r2, r0
 800161c:	4b1d      	ldr	r3, [pc, #116]	; (8001694 <main+0x6e4>)
 800161e:	681b      	ldr	r3, [r3, #0]
 8001620:	1ad2      	subs	r2, r2, r3
 8001622:	23fa      	movs	r3, #250	; 0xfa
 8001624:	009b      	lsls	r3, r3, #2
 8001626:	429a      	cmp	r2, r3
 8001628:	d905      	bls.n	8001636 <main+0x686>
			led_counter = HAL_GetTick();
 800162a:	f000 fd8d 	bl	8002148 <HAL_GetTick>
 800162e:	0002      	movs	r2, r0
 8001630:	4b18      	ldr	r3, [pc, #96]	; (8001694 <main+0x6e4>)
 8001632:	601a      	str	r2, [r3, #0]
 8001634:	e014      	b.n	8001660 <main+0x6b0>
		else {
			if (HAL_GetTick() - led_counter > LED_ON_TIMEOUT)
 8001636:	f000 fd87 	bl	8002148 <HAL_GetTick>
 800163a:	0002      	movs	r2, r0
 800163c:	4b15      	ldr	r3, [pc, #84]	; (8001694 <main+0x6e4>)
 800163e:	681b      	ldr	r3, [r3, #0]
 8001640:	1ad3      	subs	r3, r2, r3
 8001642:	2b32      	cmp	r3, #50	; 0x32
 8001644:	d906      	bls.n	8001654 <main+0x6a4>
				led_off();
 8001646:	4b14      	ldr	r3, [pc, #80]	; (8001698 <main+0x6e8>)
 8001648:	695a      	ldr	r2, [r3, #20]
 800164a:	4b13      	ldr	r3, [pc, #76]	; (8001698 <main+0x6e8>)
 800164c:	2102      	movs	r1, #2
 800164e:	438a      	bics	r2, r1
 8001650:	615a      	str	r2, [r3, #20]
 8001652:	e005      	b.n	8001660 <main+0x6b0>
			else
				led_on();
 8001654:	4b10      	ldr	r3, [pc, #64]	; (8001698 <main+0x6e8>)
 8001656:	695a      	ldr	r2, [r3, #20]
 8001658:	4b0f      	ldr	r3, [pc, #60]	; (8001698 <main+0x6e8>)
 800165a:	2102      	movs	r1, #2
 800165c:	430a      	orrs	r2, r1
 800165e:	615a      	str	r2, [r3, #20]
		}
		HAL_IWDG_Refresh(&hiwdg);
 8001660:	4b0e      	ldr	r3, [pc, #56]	; (800169c <main+0x6ec>)
 8001662:	0018      	movs	r0, r3
 8001664:	f002 fbac 	bl	8003dc0 <HAL_IWDG_Refresh>
		if (isDataReady) {
 8001668:	e558      	b.n	800111c <main+0x16c>
 800166a:	46c0      	nop			; (mov r8, r8)
 800166c:	200001dc 	.word	0x200001dc
 8001670:	08007244 	.word	0x08007244
 8001674:	20000208 	.word	0x20000208
 8001678:	fffffeb8 	.word	0xfffffeb8
 800167c:	2000026d 	.word	0x2000026d
 8001680:	200001ec 	.word	0x200001ec
 8001684:	200001e4 	.word	0x200001e4
 8001688:	08007274 	.word	0x08007274
 800168c:	2000026c 	.word	0x2000026c
 8001690:	20000148 	.word	0x20000148
 8001694:	200001e8 	.word	0x200001e8
 8001698:	50000400 	.word	0x50000400
 800169c:	20000138 	.word	0x20000138

080016a0 <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 80016a0:	b590      	push	{r4, r7, lr}
 80016a2:	b093      	sub	sp, #76	; 0x4c
 80016a4:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 80016a6:	2414      	movs	r4, #20
 80016a8:	193b      	adds	r3, r7, r4
 80016aa:	0018      	movs	r0, r3
 80016ac:	2334      	movs	r3, #52	; 0x34
 80016ae:	001a      	movs	r2, r3
 80016b0:	2100      	movs	r1, #0
 80016b2:	f005 f9b5 	bl	8006a20 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 80016b6:	1d3b      	adds	r3, r7, #4
 80016b8:	0018      	movs	r0, r3
 80016ba:	2310      	movs	r3, #16
 80016bc:	001a      	movs	r2, r3
 80016be:	2100      	movs	r1, #0
 80016c0:	f005 f9ae 	bl	8006a20 <memset>

	/** Configure the main internal regulator output voltage
	 */
	HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 80016c4:	2380      	movs	r3, #128	; 0x80
 80016c6:	009b      	lsls	r3, r3, #2
 80016c8:	0018      	movs	r0, r3
 80016ca:	f002 fb89 	bl	8003de0 <HAL_PWREx_ControlVoltageScaling>

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI
 80016ce:	193b      	adds	r3, r7, r4
 80016d0:	220a      	movs	r2, #10
 80016d2:	601a      	str	r2, [r3, #0]
			| RCC_OSCILLATORTYPE_LSI;
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80016d4:	193b      	adds	r3, r7, r4
 80016d6:	2280      	movs	r2, #128	; 0x80
 80016d8:	0052      	lsls	r2, r2, #1
 80016da:	60da      	str	r2, [r3, #12]
	RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 80016dc:	0021      	movs	r1, r4
 80016de:	187b      	adds	r3, r7, r1
 80016e0:	2200      	movs	r2, #0
 80016e2:	611a      	str	r2, [r3, #16]
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80016e4:	187b      	adds	r3, r7, r1
 80016e6:	2240      	movs	r2, #64	; 0x40
 80016e8:	615a      	str	r2, [r3, #20]
	RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 80016ea:	187b      	adds	r3, r7, r1
 80016ec:	2201      	movs	r2, #1
 80016ee:	619a      	str	r2, [r3, #24]
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80016f0:	187b      	adds	r3, r7, r1
 80016f2:	2202      	movs	r2, #2
 80016f4:	61da      	str	r2, [r3, #28]
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80016f6:	187b      	adds	r3, r7, r1
 80016f8:	2202      	movs	r2, #2
 80016fa:	621a      	str	r2, [r3, #32]
	RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 80016fc:	187b      	adds	r3, r7, r1
 80016fe:	2200      	movs	r2, #0
 8001700:	625a      	str	r2, [r3, #36]	; 0x24
	RCC_OscInitStruct.PLL.PLLN = 8;
 8001702:	187b      	adds	r3, r7, r1
 8001704:	2208      	movs	r2, #8
 8001706:	629a      	str	r2, [r3, #40]	; 0x28
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001708:	187b      	adds	r3, r7, r1
 800170a:	2280      	movs	r2, #128	; 0x80
 800170c:	0292      	lsls	r2, r2, #10
 800170e:	62da      	str	r2, [r3, #44]	; 0x2c
	RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8001710:	187b      	adds	r3, r7, r1
 8001712:	2280      	movs	r2, #128	; 0x80
 8001714:	0592      	lsls	r2, r2, #22
 8001716:	631a      	str	r2, [r3, #48]	; 0x30
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8001718:	187b      	adds	r3, r7, r1
 800171a:	0018      	movs	r0, r3
 800171c:	f002 fbac 	bl	8003e78 <HAL_RCC_OscConfig>
 8001720:	1e03      	subs	r3, r0, #0
 8001722:	d001      	beq.n	8001728 <SystemClock_Config+0x88>
		Error_Handler();
 8001724:	f000 fa26 	bl	8001b74 <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 8001728:	1d3b      	adds	r3, r7, #4
 800172a:	2207      	movs	r2, #7
 800172c:	601a      	str	r2, [r3, #0]
			| RCC_CLOCKTYPE_PCLK1;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800172e:	1d3b      	adds	r3, r7, #4
 8001730:	2202      	movs	r2, #2
 8001732:	605a      	str	r2, [r3, #4]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001734:	1d3b      	adds	r3, r7, #4
 8001736:	2200      	movs	r2, #0
 8001738:	609a      	str	r2, [r3, #8]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800173a:	1d3b      	adds	r3, r7, #4
 800173c:	2200      	movs	r2, #0
 800173e:	60da      	str	r2, [r3, #12]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 8001740:	1d3b      	adds	r3, r7, #4
 8001742:	2102      	movs	r1, #2
 8001744:	0018      	movs	r0, r3
 8001746:	f002 fea7 	bl	8004498 <HAL_RCC_ClockConfig>
 800174a:	1e03      	subs	r3, r0, #0
 800174c:	d001      	beq.n	8001752 <SystemClock_Config+0xb2>
		Error_Handler();
 800174e:	f000 fa11 	bl	8001b74 <Error_Handler>
	}
}
 8001752:	46c0      	nop			; (mov r8, r8)
 8001754:	46bd      	mov	sp, r7
 8001756:	b013      	add	sp, #76	; 0x4c
 8001758:	bd90      	pop	{r4, r7, pc}
	...

0800175c <MX_ADC1_Init>:
/**
 * @brief ADC1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_ADC1_Init(void) {
 800175c:	b580      	push	{r7, lr}
 800175e:	b084      	sub	sp, #16
 8001760:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN ADC1_Init 0 */

	/* USER CODE END ADC1_Init 0 */

	ADC_ChannelConfTypeDef sConfig = { 0 };
 8001762:	1d3b      	adds	r3, r7, #4
 8001764:	0018      	movs	r0, r3
 8001766:	230c      	movs	r3, #12
 8001768:	001a      	movs	r2, r3
 800176a:	2100      	movs	r1, #0
 800176c:	f005 f958 	bl	8006a20 <memset>

	/* USER CODE END ADC1_Init 1 */

	/** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
	 */
	hadc1.Instance = ADC1;
 8001770:	4b46      	ldr	r3, [pc, #280]	; (800188c <MX_ADC1_Init+0x130>)
 8001772:	4a47      	ldr	r2, [pc, #284]	; (8001890 <MX_ADC1_Init+0x134>)
 8001774:	601a      	str	r2, [r3, #0]
	hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8001776:	4b45      	ldr	r3, [pc, #276]	; (800188c <MX_ADC1_Init+0x130>)
 8001778:	2280      	movs	r2, #128	; 0x80
 800177a:	05d2      	lsls	r2, r2, #23
 800177c:	605a      	str	r2, [r3, #4]
	hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 800177e:	4b43      	ldr	r3, [pc, #268]	; (800188c <MX_ADC1_Init+0x130>)
 8001780:	2200      	movs	r2, #0
 8001782:	609a      	str	r2, [r3, #8]
	hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001784:	4b41      	ldr	r3, [pc, #260]	; (800188c <MX_ADC1_Init+0x130>)
 8001786:	2200      	movs	r2, #0
 8001788:	60da      	str	r2, [r3, #12]
	hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 800178a:	4b40      	ldr	r3, [pc, #256]	; (800188c <MX_ADC1_Init+0x130>)
 800178c:	2280      	movs	r2, #128	; 0x80
 800178e:	0392      	lsls	r2, r2, #14
 8001790:	611a      	str	r2, [r3, #16]
	hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 8001792:	4b3e      	ldr	r3, [pc, #248]	; (800188c <MX_ADC1_Init+0x130>)
 8001794:	2208      	movs	r2, #8
 8001796:	615a      	str	r2, [r3, #20]
	hadc1.Init.LowPowerAutoWait = DISABLE;
 8001798:	4b3c      	ldr	r3, [pc, #240]	; (800188c <MX_ADC1_Init+0x130>)
 800179a:	2200      	movs	r2, #0
 800179c:	761a      	strb	r2, [r3, #24]
	hadc1.Init.LowPowerAutoPowerOff = DISABLE;
 800179e:	4b3b      	ldr	r3, [pc, #236]	; (800188c <MX_ADC1_Init+0x130>)
 80017a0:	2200      	movs	r2, #0
 80017a2:	765a      	strb	r2, [r3, #25]
	hadc1.Init.ContinuousConvMode = DISABLE;
 80017a4:	4b39      	ldr	r3, [pc, #228]	; (800188c <MX_ADC1_Init+0x130>)
 80017a6:	2200      	movs	r2, #0
 80017a8:	769a      	strb	r2, [r3, #26]
	hadc1.Init.NbrOfConversion = 4;
 80017aa:	4b38      	ldr	r3, [pc, #224]	; (800188c <MX_ADC1_Init+0x130>)
 80017ac:	2204      	movs	r2, #4
 80017ae:	61da      	str	r2, [r3, #28]
	hadc1.Init.DiscontinuousConvMode = DISABLE;
 80017b0:	4b36      	ldr	r3, [pc, #216]	; (800188c <MX_ADC1_Init+0x130>)
 80017b2:	2220      	movs	r2, #32
 80017b4:	2100      	movs	r1, #0
 80017b6:	5499      	strb	r1, [r3, r2]
	hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80017b8:	4b34      	ldr	r3, [pc, #208]	; (800188c <MX_ADC1_Init+0x130>)
 80017ba:	2200      	movs	r2, #0
 80017bc:	625a      	str	r2, [r3, #36]	; 0x24
	hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80017be:	4b33      	ldr	r3, [pc, #204]	; (800188c <MX_ADC1_Init+0x130>)
 80017c0:	2200      	movs	r2, #0
 80017c2:	629a      	str	r2, [r3, #40]	; 0x28
	hadc1.Init.DMAContinuousRequests = ENABLE;
 80017c4:	4b31      	ldr	r3, [pc, #196]	; (800188c <MX_ADC1_Init+0x130>)
 80017c6:	222c      	movs	r2, #44	; 0x2c
 80017c8:	2101      	movs	r1, #1
 80017ca:	5499      	strb	r1, [r3, r2]
	hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80017cc:	4b2f      	ldr	r3, [pc, #188]	; (800188c <MX_ADC1_Init+0x130>)
 80017ce:	2200      	movs	r2, #0
 80017d0:	631a      	str	r2, [r3, #48]	; 0x30
	hadc1.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_12CYCLES_5;
 80017d2:	4b2e      	ldr	r3, [pc, #184]	; (800188c <MX_ADC1_Init+0x130>)
 80017d4:	2203      	movs	r2, #3
 80017d6:	635a      	str	r2, [r3, #52]	; 0x34
	hadc1.Init.SamplingTimeCommon2 = ADC_SAMPLETIME_12CYCLES_5;
 80017d8:	4b2c      	ldr	r3, [pc, #176]	; (800188c <MX_ADC1_Init+0x130>)
 80017da:	2203      	movs	r2, #3
 80017dc:	639a      	str	r2, [r3, #56]	; 0x38
	hadc1.Init.OversamplingMode = DISABLE;
 80017de:	4b2b      	ldr	r3, [pc, #172]	; (800188c <MX_ADC1_Init+0x130>)
 80017e0:	223c      	movs	r2, #60	; 0x3c
 80017e2:	2100      	movs	r1, #0
 80017e4:	5499      	strb	r1, [r3, r2]
	hadc1.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
 80017e6:	4b29      	ldr	r3, [pc, #164]	; (800188c <MX_ADC1_Init+0x130>)
 80017e8:	2200      	movs	r2, #0
 80017ea:	64da      	str	r2, [r3, #76]	; 0x4c
	if (HAL_ADC_Init(&hadc1) != HAL_OK) {
 80017ec:	4b27      	ldr	r3, [pc, #156]	; (800188c <MX_ADC1_Init+0x130>)
 80017ee:	0018      	movs	r0, r3
 80017f0:	f000 fe30 	bl	8002454 <HAL_ADC_Init>
 80017f4:	1e03      	subs	r3, r0, #0
 80017f6:	d001      	beq.n	80017fc <MX_ADC1_Init+0xa0>
		Error_Handler();
 80017f8:	f000 f9bc 	bl	8001b74 <Error_Handler>
	}

	/** Configure Regular Channel
	 */
	sConfig.Channel = ADC_CHANNEL_0;
 80017fc:	1d3b      	adds	r3, r7, #4
 80017fe:	2201      	movs	r2, #1
 8001800:	601a      	str	r2, [r3, #0]
	sConfig.Rank = ADC_REGULAR_RANK_1;
 8001802:	1d3b      	adds	r3, r7, #4
 8001804:	2200      	movs	r2, #0
 8001806:	605a      	str	r2, [r3, #4]
	sConfig.SamplingTime = ADC_SAMPLINGTIME_COMMON_1;
 8001808:	1d3b      	adds	r3, r7, #4
 800180a:	2200      	movs	r2, #0
 800180c:	609a      	str	r2, [r3, #8]
	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 800180e:	1d3a      	adds	r2, r7, #4
 8001810:	4b1e      	ldr	r3, [pc, #120]	; (800188c <MX_ADC1_Init+0x130>)
 8001812:	0011      	movs	r1, r2
 8001814:	0018      	movs	r0, r3
 8001816:	f001 f863 	bl	80028e0 <HAL_ADC_ConfigChannel>
 800181a:	1e03      	subs	r3, r0, #0
 800181c:	d001      	beq.n	8001822 <MX_ADC1_Init+0xc6>
		Error_Handler();
 800181e:	f000 f9a9 	bl	8001b74 <Error_Handler>
	}

	/** Configure Regular Channel
	 */
	sConfig.Channel = ADC_CHANNEL_6;
 8001822:	1d3b      	adds	r3, r7, #4
 8001824:	4a1b      	ldr	r2, [pc, #108]	; (8001894 <MX_ADC1_Init+0x138>)
 8001826:	601a      	str	r2, [r3, #0]
	sConfig.Rank = ADC_REGULAR_RANK_2;
 8001828:	1d3b      	adds	r3, r7, #4
 800182a:	2204      	movs	r2, #4
 800182c:	605a      	str	r2, [r3, #4]
	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 800182e:	1d3a      	adds	r2, r7, #4
 8001830:	4b16      	ldr	r3, [pc, #88]	; (800188c <MX_ADC1_Init+0x130>)
 8001832:	0011      	movs	r1, r2
 8001834:	0018      	movs	r0, r3
 8001836:	f001 f853 	bl	80028e0 <HAL_ADC_ConfigChannel>
 800183a:	1e03      	subs	r3, r0, #0
 800183c:	d001      	beq.n	8001842 <MX_ADC1_Init+0xe6>
		Error_Handler();
 800183e:	f000 f999 	bl	8001b74 <Error_Handler>
	}

	/** Configure Regular Channel
	 */
	sConfig.Channel = ADC_CHANNEL_8;
 8001842:	1d3b      	adds	r3, r7, #4
 8001844:	4a14      	ldr	r2, [pc, #80]	; (8001898 <MX_ADC1_Init+0x13c>)
 8001846:	601a      	str	r2, [r3, #0]
	sConfig.Rank = ADC_REGULAR_RANK_3;
 8001848:	1d3b      	adds	r3, r7, #4
 800184a:	2208      	movs	r2, #8
 800184c:	605a      	str	r2, [r3, #4]
	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 800184e:	1d3a      	adds	r2, r7, #4
 8001850:	4b0e      	ldr	r3, [pc, #56]	; (800188c <MX_ADC1_Init+0x130>)
 8001852:	0011      	movs	r1, r2
 8001854:	0018      	movs	r0, r3
 8001856:	f001 f843 	bl	80028e0 <HAL_ADC_ConfigChannel>
 800185a:	1e03      	subs	r3, r0, #0
 800185c:	d001      	beq.n	8001862 <MX_ADC1_Init+0x106>
		Error_Handler();
 800185e:	f000 f989 	bl	8001b74 <Error_Handler>
	}

	/** Configure Regular Channel
	 */
	sConfig.Channel = ADC_CHANNEL_7;
 8001862:	1d3b      	adds	r3, r7, #4
 8001864:	4a0d      	ldr	r2, [pc, #52]	; (800189c <MX_ADC1_Init+0x140>)
 8001866:	601a      	str	r2, [r3, #0]
	sConfig.Rank = ADC_REGULAR_RANK_4;
 8001868:	1d3b      	adds	r3, r7, #4
 800186a:	220c      	movs	r2, #12
 800186c:	605a      	str	r2, [r3, #4]
	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 800186e:	1d3a      	adds	r2, r7, #4
 8001870:	4b06      	ldr	r3, [pc, #24]	; (800188c <MX_ADC1_Init+0x130>)
 8001872:	0011      	movs	r1, r2
 8001874:	0018      	movs	r0, r3
 8001876:	f001 f833 	bl	80028e0 <HAL_ADC_ConfigChannel>
 800187a:	1e03      	subs	r3, r0, #0
 800187c:	d001      	beq.n	8001882 <MX_ADC1_Init+0x126>
		Error_Handler();
 800187e:	f000 f979 	bl	8001b74 <Error_Handler>
	}
	/* USER CODE BEGIN ADC1_Init 2 */

	/* USER CODE END ADC1_Init 2 */

}
 8001882:	46c0      	nop			; (mov r8, r8)
 8001884:	46bd      	mov	sp, r7
 8001886:	b004      	add	sp, #16
 8001888:	bd80      	pop	{r7, pc}
 800188a:	46c0      	nop			; (mov r8, r8)
 800188c:	20000078 	.word	0x20000078
 8001890:	40012400 	.word	0x40012400
 8001894:	18000040 	.word	0x18000040
 8001898:	20000100 	.word	0x20000100
 800189c:	1c000080 	.word	0x1c000080

080018a0 <MX_IWDG_Init>:
/**
 * @brief IWDG Initialization Function
 * @param None
 * @retval None
 */
static void MX_IWDG_Init(void) {
 80018a0:	b580      	push	{r7, lr}
 80018a2:	af00      	add	r7, sp, #0
	/* USER CODE END IWDG_Init 0 */

	/* USER CODE BEGIN IWDG_Init 1 */

	/* USER CODE END IWDG_Init 1 */
	hiwdg.Instance = IWDG;
 80018a4:	4b0b      	ldr	r3, [pc, #44]	; (80018d4 <MX_IWDG_Init+0x34>)
 80018a6:	4a0c      	ldr	r2, [pc, #48]	; (80018d8 <MX_IWDG_Init+0x38>)
 80018a8:	601a      	str	r2, [r3, #0]
	hiwdg.Init.Prescaler = IWDG_PRESCALER_16;
 80018aa:	4b0a      	ldr	r3, [pc, #40]	; (80018d4 <MX_IWDG_Init+0x34>)
 80018ac:	2202      	movs	r2, #2
 80018ae:	605a      	str	r2, [r3, #4]
	hiwdg.Init.Window = 4095;
 80018b0:	4b08      	ldr	r3, [pc, #32]	; (80018d4 <MX_IWDG_Init+0x34>)
 80018b2:	4a0a      	ldr	r2, [pc, #40]	; (80018dc <MX_IWDG_Init+0x3c>)
 80018b4:	60da      	str	r2, [r3, #12]
	hiwdg.Init.Reload = 2000;
 80018b6:	4b07      	ldr	r3, [pc, #28]	; (80018d4 <MX_IWDG_Init+0x34>)
 80018b8:	22fa      	movs	r2, #250	; 0xfa
 80018ba:	00d2      	lsls	r2, r2, #3
 80018bc:	609a      	str	r2, [r3, #8]
	if (HAL_IWDG_Init(&hiwdg) != HAL_OK) {
 80018be:	4b05      	ldr	r3, [pc, #20]	; (80018d4 <MX_IWDG_Init+0x34>)
 80018c0:	0018      	movs	r0, r3
 80018c2:	f002 fa2b 	bl	8003d1c <HAL_IWDG_Init>
 80018c6:	1e03      	subs	r3, r0, #0
 80018c8:	d001      	beq.n	80018ce <MX_IWDG_Init+0x2e>
		Error_Handler();
 80018ca:	f000 f953 	bl	8001b74 <Error_Handler>
	}
	/* USER CODE BEGIN IWDG_Init 2 */

	/* USER CODE END IWDG_Init 2 */

}
 80018ce:	46c0      	nop			; (mov r8, r8)
 80018d0:	46bd      	mov	sp, r7
 80018d2:	bd80      	pop	{r7, pc}
 80018d4:	20000138 	.word	0x20000138
 80018d8:	40003000 	.word	0x40003000
 80018dc:	00000fff 	.word	0x00000fff

080018e0 <MX_USART1_UART_Init>:
/**
 * @brief USART1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_USART1_UART_Init(void) {
 80018e0:	b580      	push	{r7, lr}
 80018e2:	af00      	add	r7, sp, #0
	/* USER CODE END USART1_Init 0 */

	/* USER CODE BEGIN USART1_Init 1 */

	/* USER CODE END USART1_Init 1 */
	huart1.Instance = USART1;
 80018e4:	4b23      	ldr	r3, [pc, #140]	; (8001974 <MX_USART1_UART_Init+0x94>)
 80018e6:	4a24      	ldr	r2, [pc, #144]	; (8001978 <MX_USART1_UART_Init+0x98>)
 80018e8:	601a      	str	r2, [r3, #0]
	huart1.Init.BaudRate = 115200;
 80018ea:	4b22      	ldr	r3, [pc, #136]	; (8001974 <MX_USART1_UART_Init+0x94>)
 80018ec:	22e1      	movs	r2, #225	; 0xe1
 80018ee:	0252      	lsls	r2, r2, #9
 80018f0:	605a      	str	r2, [r3, #4]
	huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80018f2:	4b20      	ldr	r3, [pc, #128]	; (8001974 <MX_USART1_UART_Init+0x94>)
 80018f4:	2200      	movs	r2, #0
 80018f6:	609a      	str	r2, [r3, #8]
	huart1.Init.StopBits = UART_STOPBITS_1;
 80018f8:	4b1e      	ldr	r3, [pc, #120]	; (8001974 <MX_USART1_UART_Init+0x94>)
 80018fa:	2200      	movs	r2, #0
 80018fc:	60da      	str	r2, [r3, #12]
	huart1.Init.Parity = UART_PARITY_NONE;
 80018fe:	4b1d      	ldr	r3, [pc, #116]	; (8001974 <MX_USART1_UART_Init+0x94>)
 8001900:	2200      	movs	r2, #0
 8001902:	611a      	str	r2, [r3, #16]
	huart1.Init.Mode = UART_MODE_TX_RX;
 8001904:	4b1b      	ldr	r3, [pc, #108]	; (8001974 <MX_USART1_UART_Init+0x94>)
 8001906:	220c      	movs	r2, #12
 8001908:	615a      	str	r2, [r3, #20]
	huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800190a:	4b1a      	ldr	r3, [pc, #104]	; (8001974 <MX_USART1_UART_Init+0x94>)
 800190c:	2200      	movs	r2, #0
 800190e:	619a      	str	r2, [r3, #24]
	huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001910:	4b18      	ldr	r3, [pc, #96]	; (8001974 <MX_USART1_UART_Init+0x94>)
 8001912:	2200      	movs	r2, #0
 8001914:	61da      	str	r2, [r3, #28]
	huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001916:	4b17      	ldr	r3, [pc, #92]	; (8001974 <MX_USART1_UART_Init+0x94>)
 8001918:	2200      	movs	r2, #0
 800191a:	621a      	str	r2, [r3, #32]
	huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 800191c:	4b15      	ldr	r3, [pc, #84]	; (8001974 <MX_USART1_UART_Init+0x94>)
 800191e:	2200      	movs	r2, #0
 8001920:	625a      	str	r2, [r3, #36]	; 0x24
	huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001922:	4b14      	ldr	r3, [pc, #80]	; (8001974 <MX_USART1_UART_Init+0x94>)
 8001924:	2200      	movs	r2, #0
 8001926:	629a      	str	r2, [r3, #40]	; 0x28
	if (HAL_UART_Init(&huart1) != HAL_OK) {
 8001928:	4b12      	ldr	r3, [pc, #72]	; (8001974 <MX_USART1_UART_Init+0x94>)
 800192a:	0018      	movs	r0, r3
 800192c:	f003 f884 	bl	8004a38 <HAL_UART_Init>
 8001930:	1e03      	subs	r3, r0, #0
 8001932:	d001      	beq.n	8001938 <MX_USART1_UART_Init+0x58>
		Error_Handler();
 8001934:	f000 f91e 	bl	8001b74 <Error_Handler>
	}
	if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8)
 8001938:	4b0e      	ldr	r3, [pc, #56]	; (8001974 <MX_USART1_UART_Init+0x94>)
 800193a:	2100      	movs	r1, #0
 800193c:	0018      	movs	r0, r3
 800193e:	f004 febb 	bl	80066b8 <HAL_UARTEx_SetTxFifoThreshold>
 8001942:	1e03      	subs	r3, r0, #0
 8001944:	d001      	beq.n	800194a <MX_USART1_UART_Init+0x6a>
			!= HAL_OK) {
		Error_Handler();
 8001946:	f000 f915 	bl	8001b74 <Error_Handler>
	}
	if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8)
 800194a:	4b0a      	ldr	r3, [pc, #40]	; (8001974 <MX_USART1_UART_Init+0x94>)
 800194c:	2100      	movs	r1, #0
 800194e:	0018      	movs	r0, r3
 8001950:	f004 fef2 	bl	8006738 <HAL_UARTEx_SetRxFifoThreshold>
 8001954:	1e03      	subs	r3, r0, #0
 8001956:	d001      	beq.n	800195c <MX_USART1_UART_Init+0x7c>
			!= HAL_OK) {
		Error_Handler();
 8001958:	f000 f90c 	bl	8001b74 <Error_Handler>
	}
	if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK) {
 800195c:	4b05      	ldr	r3, [pc, #20]	; (8001974 <MX_USART1_UART_Init+0x94>)
 800195e:	0018      	movs	r0, r3
 8001960:	f004 fe70 	bl	8006644 <HAL_UARTEx_DisableFifoMode>
 8001964:	1e03      	subs	r3, r0, #0
 8001966:	d001      	beq.n	800196c <MX_USART1_UART_Init+0x8c>
		Error_Handler();
 8001968:	f000 f904 	bl	8001b74 <Error_Handler>
	}
	/* USER CODE BEGIN USART1_Init 2 */

	/* USER CODE END USART1_Init 2 */

}
 800196c:	46c0      	nop			; (mov r8, r8)
 800196e:	46bd      	mov	sp, r7
 8001970:	bd80      	pop	{r7, pc}
 8001972:	46c0      	nop			; (mov r8, r8)
 8001974:	20000148 	.word	0x20000148
 8001978:	40013800 	.word	0x40013800

0800197c <MX_DMA_Init>:

/**
 * Enable DMA controller clock
 */
static void MX_DMA_Init(void) {
 800197c:	b580      	push	{r7, lr}
 800197e:	b082      	sub	sp, #8
 8001980:	af00      	add	r7, sp, #0

	/* DMA controller clock enable */
	__HAL_RCC_DMA1_CLK_ENABLE();
 8001982:	4b0c      	ldr	r3, [pc, #48]	; (80019b4 <MX_DMA_Init+0x38>)
 8001984:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001986:	4b0b      	ldr	r3, [pc, #44]	; (80019b4 <MX_DMA_Init+0x38>)
 8001988:	2101      	movs	r1, #1
 800198a:	430a      	orrs	r2, r1
 800198c:	639a      	str	r2, [r3, #56]	; 0x38
 800198e:	4b09      	ldr	r3, [pc, #36]	; (80019b4 <MX_DMA_Init+0x38>)
 8001990:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001992:	2201      	movs	r2, #1
 8001994:	4013      	ands	r3, r2
 8001996:	607b      	str	r3, [r7, #4]
 8001998:	687b      	ldr	r3, [r7, #4]

	/* DMA interrupt init */
	/* DMA1_Channel2_3_IRQn interrupt configuration */
	HAL_NVIC_SetPriority(DMA1_Channel2_3_IRQn, 0, 0);
 800199a:	2200      	movs	r2, #0
 800199c:	2100      	movs	r1, #0
 800199e:	200a      	movs	r0, #10
 80019a0:	f001 fcea 	bl	8003378 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 80019a4:	200a      	movs	r0, #10
 80019a6:	f001 fcfc 	bl	80033a2 <HAL_NVIC_EnableIRQ>

}
 80019aa:	46c0      	nop			; (mov r8, r8)
 80019ac:	46bd      	mov	sp, r7
 80019ae:	b002      	add	sp, #8
 80019b0:	bd80      	pop	{r7, pc}
 80019b2:	46c0      	nop			; (mov r8, r8)
 80019b4:	40021000 	.word	0x40021000

080019b8 <MX_GPIO_Init>:
/**
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void) {
 80019b8:	b590      	push	{r4, r7, lr}
 80019ba:	b089      	sub	sp, #36	; 0x24
 80019bc:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 80019be:	240c      	movs	r4, #12
 80019c0:	193b      	adds	r3, r7, r4
 80019c2:	0018      	movs	r0, r3
 80019c4:	2314      	movs	r3, #20
 80019c6:	001a      	movs	r2, r3
 80019c8:	2100      	movs	r1, #0
 80019ca:	f005 f829 	bl	8006a20 <memset>
	/* USER CODE BEGIN MX_GPIO_Init_1 */
	/* USER CODE END MX_GPIO_Init_1 */

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOA_CLK_ENABLE();
 80019ce:	4b31      	ldr	r3, [pc, #196]	; (8001a94 <MX_GPIO_Init+0xdc>)
 80019d0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80019d2:	4b30      	ldr	r3, [pc, #192]	; (8001a94 <MX_GPIO_Init+0xdc>)
 80019d4:	2101      	movs	r1, #1
 80019d6:	430a      	orrs	r2, r1
 80019d8:	635a      	str	r2, [r3, #52]	; 0x34
 80019da:	4b2e      	ldr	r3, [pc, #184]	; (8001a94 <MX_GPIO_Init+0xdc>)
 80019dc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80019de:	2201      	movs	r2, #1
 80019e0:	4013      	ands	r3, r2
 80019e2:	60bb      	str	r3, [r7, #8]
 80019e4:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 80019e6:	4b2b      	ldr	r3, [pc, #172]	; (8001a94 <MX_GPIO_Init+0xdc>)
 80019e8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80019ea:	4b2a      	ldr	r3, [pc, #168]	; (8001a94 <MX_GPIO_Init+0xdc>)
 80019ec:	2102      	movs	r1, #2
 80019ee:	430a      	orrs	r2, r1
 80019f0:	635a      	str	r2, [r3, #52]	; 0x34
 80019f2:	4b28      	ldr	r3, [pc, #160]	; (8001a94 <MX_GPIO_Init+0xdc>)
 80019f4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80019f6:	2202      	movs	r2, #2
 80019f8:	4013      	ands	r3, r2
 80019fa:	607b      	str	r3, [r7, #4]
 80019fc:	687b      	ldr	r3, [r7, #4]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOA,
 80019fe:	4926      	ldr	r1, [pc, #152]	; (8001a98 <MX_GPIO_Init+0xe0>)
 8001a00:	23a0      	movs	r3, #160	; 0xa0
 8001a02:	05db      	lsls	r3, r3, #23
 8001a04:	2200      	movs	r2, #0
 8001a06:	0018      	movs	r0, r3
 8001a08:	f002 f96a 	bl	8003ce0 <HAL_GPIO_WritePin>
			LE_ATTENUATOR_Pin | CLK_ATTENUATOR_Pin | DATA_ATTENUATOR_Pin
					| UART1_TX_ENABLE_Pin, GPIO_PIN_RESET);

	/*Configure GPIO pins : LE_ATTENUATOR_Pin CLK_ATTENUATOR_Pin DATA_ATTENUATOR_Pin UART1_TX_ENABLE_Pin */
	GPIO_InitStruct.Pin = LE_ATTENUATOR_Pin | CLK_ATTENUATOR_Pin
 8001a0c:	193b      	adds	r3, r7, r4
 8001a0e:	4a22      	ldr	r2, [pc, #136]	; (8001a98 <MX_GPIO_Init+0xe0>)
 8001a10:	601a      	str	r2, [r3, #0]
			| DATA_ATTENUATOR_Pin | UART1_TX_ENABLE_Pin;
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a12:	193b      	adds	r3, r7, r4
 8001a14:	2201      	movs	r2, #1
 8001a16:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a18:	193b      	adds	r3, r7, r4
 8001a1a:	2200      	movs	r2, #0
 8001a1c:	609a      	str	r2, [r3, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a1e:	193b      	adds	r3, r7, r4
 8001a20:	2200      	movs	r2, #0
 8001a22:	60da      	str	r2, [r3, #12]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a24:	193a      	adds	r2, r7, r4
 8001a26:	23a0      	movs	r3, #160	; 0xa0
 8001a28:	05db      	lsls	r3, r3, #23
 8001a2a:	0011      	movs	r1, r2
 8001a2c:	0018      	movs	r0, r3
 8001a2e:	f001 fff3 	bl	8003a18 <HAL_GPIO_Init>

	/*Configure GPIO pins : PA2 PA3 */
	GPIO_InitStruct.Pin = GPIO_PIN_2 | GPIO_PIN_3;
 8001a32:	193b      	adds	r3, r7, r4
 8001a34:	220c      	movs	r2, #12
 8001a36:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a38:	193b      	adds	r3, r7, r4
 8001a3a:	2202      	movs	r2, #2
 8001a3c:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a3e:	193b      	adds	r3, r7, r4
 8001a40:	2200      	movs	r2, #0
 8001a42:	609a      	str	r2, [r3, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a44:	193b      	adds	r3, r7, r4
 8001a46:	2200      	movs	r2, #0
 8001a48:	60da      	str	r2, [r3, #12]
	GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 8001a4a:	193b      	adds	r3, r7, r4
 8001a4c:	2201      	movs	r2, #1
 8001a4e:	611a      	str	r2, [r3, #16]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a50:	193a      	adds	r2, r7, r4
 8001a52:	23a0      	movs	r3, #160	; 0xa0
 8001a54:	05db      	lsls	r3, r3, #23
 8001a56:	0011      	movs	r1, r2
 8001a58:	0018      	movs	r0, r3
 8001a5a:	f001 ffdd 	bl	8003a18 <HAL_GPIO_Init>

	/*Configure GPIO pins : PB6 PB7 */
	GPIO_InitStruct.Pin = GPIO_PIN_6 | GPIO_PIN_7;
 8001a5e:	0021      	movs	r1, r4
 8001a60:	187b      	adds	r3, r7, r1
 8001a62:	22c0      	movs	r2, #192	; 0xc0
 8001a64:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a66:	187b      	adds	r3, r7, r1
 8001a68:	2212      	movs	r2, #18
 8001a6a:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a6c:	187b      	adds	r3, r7, r1
 8001a6e:	2200      	movs	r2, #0
 8001a70:	609a      	str	r2, [r3, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a72:	187b      	adds	r3, r7, r1
 8001a74:	2200      	movs	r2, #0
 8001a76:	60da      	str	r2, [r3, #12]
	GPIO_InitStruct.Alternate = GPIO_AF6_I2C1;
 8001a78:	187b      	adds	r3, r7, r1
 8001a7a:	2206      	movs	r2, #6
 8001a7c:	611a      	str	r2, [r3, #16]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a7e:	187b      	adds	r3, r7, r1
 8001a80:	4a06      	ldr	r2, [pc, #24]	; (8001a9c <MX_GPIO_Init+0xe4>)
 8001a82:	0019      	movs	r1, r3
 8001a84:	0010      	movs	r0, r2
 8001a86:	f001 ffc7 	bl	8003a18 <HAL_GPIO_Init>

	/* USER CODE BEGIN MX_GPIO_Init_2 */
	/* USER CODE END MX_GPIO_Init_2 */
}
 8001a8a:	46c0      	nop			; (mov r8, r8)
 8001a8c:	46bd      	mov	sp, r7
 8001a8e:	b009      	add	sp, #36	; 0x24
 8001a90:	bd90      	pop	{r4, r7, pc}
 8001a92:	46c0      	nop			; (mov r8, r8)
 8001a94:	40021000 	.word	0x40021000
 8001a98:	00008032 	.word	0x00008032
 8001a9c:	50000400 	.word	0x50000400

08001aa0 <uart_clean_buffer>:

/* USER CODE BEGIN 4 */

void uart_clean_buffer() {
 8001aa0:	b580      	push	{r7, lr}
 8001aa2:	af00      	add	r7, sp, #0
	memset(UART1_rxBuffer, 0, RX_UART1_BUFFLEN);
 8001aa4:	4b0a      	ldr	r3, [pc, #40]	; (8001ad0 <uart_clean_buffer+0x30>)
 8001aa6:	2219      	movs	r2, #25
 8001aa8:	2100      	movs	r1, #0
 8001aaa:	0018      	movs	r0, r3
 8001aac:	f004 ffb8 	bl	8006a20 <memset>
	memset(UART1_txBuffer, 0, TX_UART1_BUFFLEN);
 8001ab0:	4b08      	ldr	r3, [pc, #32]	; (8001ad4 <uart_clean_buffer+0x34>)
 8001ab2:	2264      	movs	r2, #100	; 0x64
 8001ab4:	2100      	movs	r1, #0
 8001ab6:	0018      	movs	r0, r3
 8001ab8:	f004 ffb2 	bl	8006a20 <memset>
	tx_buffer_size = 0;
 8001abc:	4b06      	ldr	r3, [pc, #24]	; (8001ad8 <uart_clean_buffer+0x38>)
 8001abe:	2200      	movs	r2, #0
 8001ac0:	701a      	strb	r2, [r3, #0]
	uart1_rcv_counter = 0;
 8001ac2:	4b06      	ldr	r3, [pc, #24]	; (8001adc <uart_clean_buffer+0x3c>)
 8001ac4:	2200      	movs	r2, #0
 8001ac6:	701a      	strb	r2, [r3, #0]
}
 8001ac8:	46c0      	nop			; (mov r8, r8)
 8001aca:	46bd      	mov	sp, r7
 8001acc:	bd80      	pop	{r7, pc}
 8001ace:	46c0      	nop			; (mov r8, r8)
 8001ad0:	200001ec 	.word	0x200001ec
 8001ad4:	20000208 	.word	0x20000208
 8001ad8:	2000026c 	.word	0x2000026c
 8001adc:	20000205 	.word	0x20000205

08001ae0 <HAL_ADC_ConvCpltCallback>:


void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc) {
 8001ae0:	b580      	push	{r7, lr}
 8001ae2:	b082      	sub	sp, #8
 8001ae4:	af00      	add	r7, sp, #0
 8001ae6:	6078      	str	r0, [r7, #4]
// TODO : se puede reemplazar leyendo el flag del registro

	HAL_ADC_Start_DMA(&hadc1, (uint32_t*) adcResultsDMA, 4);
 8001ae8:	4904      	ldr	r1, [pc, #16]	; (8001afc <HAL_ADC_ConvCpltCallback+0x1c>)
 8001aea:	4b05      	ldr	r3, [pc, #20]	; (8001b00 <HAL_ADC_ConvCpltCallback+0x20>)
 8001aec:	2204      	movs	r2, #4
 8001aee:	0018      	movs	r0, r3
 8001af0:	f000 fe58 	bl	80027a4 <HAL_ADC_Start_DMA>

}
 8001af4:	46c0      	nop			; (mov r8, r8)
 8001af6:	46bd      	mov	sp, r7
 8001af8:	b002      	add	sp, #8
 8001afa:	bd80      	pop	{r7, pc}
 8001afc:	200001dc 	.word	0x200001dc
 8001b00:	20000078 	.word	0x20000078

08001b04 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 8001b04:	b580      	push	{r7, lr}
 8001b06:	b082      	sub	sp, #8
 8001b08:	af00      	add	r7, sp, #0
 8001b0a:	6078      	str	r0, [r7, #4]
// Read received data from UART1

	/* Read received data from UART1 */
	if (uart1_rcv_counter >= RX_UART1_BUFFLEN) {
 8001b0c:	4b14      	ldr	r3, [pc, #80]	; (8001b60 <HAL_UART_RxCpltCallback+0x5c>)
 8001b0e:	781b      	ldrb	r3, [r3, #0]
 8001b10:	2b18      	cmp	r3, #24
 8001b12:	d908      	bls.n	8001b26 <HAL_UART_RxCpltCallback+0x22>
		memset(UART1_rxBuffer, 0, RX_UART1_BUFFLEN);
 8001b14:	4b13      	ldr	r3, [pc, #76]	; (8001b64 <HAL_UART_RxCpltCallback+0x60>)
 8001b16:	2219      	movs	r2, #25
 8001b18:	2100      	movs	r1, #0
 8001b1a:	0018      	movs	r0, r3
 8001b1c:	f004 ff80 	bl	8006a20 <memset>
		uart1_rcv_counter = 0;
 8001b20:	4b0f      	ldr	r3, [pc, #60]	; (8001b60 <HAL_UART_RxCpltCallback+0x5c>)
 8001b22:	2200      	movs	r2, #0
 8001b24:	701a      	strb	r2, [r3, #0]
	}
	HAL_UART_Receive_IT(&huart1, &rxData, 1);
 8001b26:	4910      	ldr	r1, [pc, #64]	; (8001b68 <HAL_UART_RxCpltCallback+0x64>)
 8001b28:	4b10      	ldr	r3, [pc, #64]	; (8001b6c <HAL_UART_RxCpltCallback+0x68>)
 8001b2a:	2201      	movs	r2, #1
 8001b2c:	0018      	movs	r0, r3
 8001b2e:	f003 f875 	bl	8004c1c <HAL_UART_Receive_IT>
	UART1_rxBuffer[uart1_rcv_counter++] = rxData;
 8001b32:	4b0b      	ldr	r3, [pc, #44]	; (8001b60 <HAL_UART_RxCpltCallback+0x5c>)
 8001b34:	781b      	ldrb	r3, [r3, #0]
 8001b36:	1c5a      	adds	r2, r3, #1
 8001b38:	b2d1      	uxtb	r1, r2
 8001b3a:	4a09      	ldr	r2, [pc, #36]	; (8001b60 <HAL_UART_RxCpltCallback+0x5c>)
 8001b3c:	7011      	strb	r1, [r2, #0]
 8001b3e:	001a      	movs	r2, r3
 8001b40:	4b09      	ldr	r3, [pc, #36]	; (8001b68 <HAL_UART_RxCpltCallback+0x64>)
 8001b42:	7819      	ldrb	r1, [r3, #0]
 8001b44:	4b07      	ldr	r3, [pc, #28]	; (8001b64 <HAL_UART_RxCpltCallback+0x60>)
 8001b46:	5499      	strb	r1, [r3, r2]
	if (rxData == 0x7F)
 8001b48:	4b07      	ldr	r3, [pc, #28]	; (8001b68 <HAL_UART_RxCpltCallback+0x64>)
 8001b4a:	781b      	ldrb	r3, [r3, #0]
 8001b4c:	2b7f      	cmp	r3, #127	; 0x7f
 8001b4e:	d102      	bne.n	8001b56 <HAL_UART_RxCpltCallback+0x52>
		isDataReady = true;
 8001b50:	4b07      	ldr	r3, [pc, #28]	; (8001b70 <HAL_UART_RxCpltCallback+0x6c>)
 8001b52:	2201      	movs	r2, #1
 8001b54:	701a      	strb	r2, [r3, #0]

}
 8001b56:	46c0      	nop			; (mov r8, r8)
 8001b58:	46bd      	mov	sp, r7
 8001b5a:	b002      	add	sp, #8
 8001b5c:	bd80      	pop	{r7, pc}
 8001b5e:	46c0      	nop			; (mov r8, r8)
 8001b60:	20000205 	.word	0x20000205
 8001b64:	200001ec 	.word	0x200001ec
 8001b68:	20000206 	.word	0x20000206
 8001b6c:	20000148 	.word	0x20000148
 8001b70:	2000026d 	.word	0x2000026d

08001b74 <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 8001b74:	b580      	push	{r7, lr}
 8001b76:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001b78:	b672      	cpsid	i
}
 8001b7a:	46c0      	nop			; (mov r8, r8)
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8001b7c:	e7fe      	b.n	8001b7c <Error_Handler+0x8>
	...

08001b80 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b80:	b580      	push	{r7, lr}
 8001b82:	b082      	sub	sp, #8
 8001b84:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001b86:	4b0f      	ldr	r3, [pc, #60]	; (8001bc4 <HAL_MspInit+0x44>)
 8001b88:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001b8a:	4b0e      	ldr	r3, [pc, #56]	; (8001bc4 <HAL_MspInit+0x44>)
 8001b8c:	2101      	movs	r1, #1
 8001b8e:	430a      	orrs	r2, r1
 8001b90:	641a      	str	r2, [r3, #64]	; 0x40
 8001b92:	4b0c      	ldr	r3, [pc, #48]	; (8001bc4 <HAL_MspInit+0x44>)
 8001b94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b96:	2201      	movs	r2, #1
 8001b98:	4013      	ands	r3, r2
 8001b9a:	607b      	str	r3, [r7, #4]
 8001b9c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b9e:	4b09      	ldr	r3, [pc, #36]	; (8001bc4 <HAL_MspInit+0x44>)
 8001ba0:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8001ba2:	4b08      	ldr	r3, [pc, #32]	; (8001bc4 <HAL_MspInit+0x44>)
 8001ba4:	2180      	movs	r1, #128	; 0x80
 8001ba6:	0549      	lsls	r1, r1, #21
 8001ba8:	430a      	orrs	r2, r1
 8001baa:	63da      	str	r2, [r3, #60]	; 0x3c
 8001bac:	4b05      	ldr	r3, [pc, #20]	; (8001bc4 <HAL_MspInit+0x44>)
 8001bae:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8001bb0:	2380      	movs	r3, #128	; 0x80
 8001bb2:	055b      	lsls	r3, r3, #21
 8001bb4:	4013      	ands	r3, r2
 8001bb6:	603b      	str	r3, [r7, #0]
 8001bb8:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001bba:	46c0      	nop			; (mov r8, r8)
 8001bbc:	46bd      	mov	sp, r7
 8001bbe:	b002      	add	sp, #8
 8001bc0:	bd80      	pop	{r7, pc}
 8001bc2:	46c0      	nop			; (mov r8, r8)
 8001bc4:	40021000 	.word	0x40021000

08001bc8 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001bc8:	b590      	push	{r4, r7, lr}
 8001bca:	b08b      	sub	sp, #44	; 0x2c
 8001bcc:	af00      	add	r7, sp, #0
 8001bce:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bd0:	2414      	movs	r4, #20
 8001bd2:	193b      	adds	r3, r7, r4
 8001bd4:	0018      	movs	r0, r3
 8001bd6:	2314      	movs	r3, #20
 8001bd8:	001a      	movs	r2, r3
 8001bda:	2100      	movs	r1, #0
 8001bdc:	f004 ff20 	bl	8006a20 <memset>
  if(hadc->Instance==ADC1)
 8001be0:	687b      	ldr	r3, [r7, #4]
 8001be2:	681b      	ldr	r3, [r3, #0]
 8001be4:	4a3b      	ldr	r2, [pc, #236]	; (8001cd4 <HAL_ADC_MspInit+0x10c>)
 8001be6:	4293      	cmp	r3, r2
 8001be8:	d16f      	bne.n	8001cca <HAL_ADC_MspInit+0x102>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC_CLK_ENABLE();
 8001bea:	4b3b      	ldr	r3, [pc, #236]	; (8001cd8 <HAL_ADC_MspInit+0x110>)
 8001bec:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001bee:	4b3a      	ldr	r3, [pc, #232]	; (8001cd8 <HAL_ADC_MspInit+0x110>)
 8001bf0:	2180      	movs	r1, #128	; 0x80
 8001bf2:	0349      	lsls	r1, r1, #13
 8001bf4:	430a      	orrs	r2, r1
 8001bf6:	641a      	str	r2, [r3, #64]	; 0x40
 8001bf8:	4b37      	ldr	r3, [pc, #220]	; (8001cd8 <HAL_ADC_MspInit+0x110>)
 8001bfa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001bfc:	2380      	movs	r3, #128	; 0x80
 8001bfe:	035b      	lsls	r3, r3, #13
 8001c00:	4013      	ands	r3, r2
 8001c02:	613b      	str	r3, [r7, #16]
 8001c04:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c06:	4b34      	ldr	r3, [pc, #208]	; (8001cd8 <HAL_ADC_MspInit+0x110>)
 8001c08:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001c0a:	4b33      	ldr	r3, [pc, #204]	; (8001cd8 <HAL_ADC_MspInit+0x110>)
 8001c0c:	2101      	movs	r1, #1
 8001c0e:	430a      	orrs	r2, r1
 8001c10:	635a      	str	r2, [r3, #52]	; 0x34
 8001c12:	4b31      	ldr	r3, [pc, #196]	; (8001cd8 <HAL_ADC_MspInit+0x110>)
 8001c14:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001c16:	2201      	movs	r2, #1
 8001c18:	4013      	ands	r3, r2
 8001c1a:	60fb      	str	r3, [r7, #12]
 8001c1c:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c1e:	4b2e      	ldr	r3, [pc, #184]	; (8001cd8 <HAL_ADC_MspInit+0x110>)
 8001c20:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001c22:	4b2d      	ldr	r3, [pc, #180]	; (8001cd8 <HAL_ADC_MspInit+0x110>)
 8001c24:	2102      	movs	r1, #2
 8001c26:	430a      	orrs	r2, r1
 8001c28:	635a      	str	r2, [r3, #52]	; 0x34
 8001c2a:	4b2b      	ldr	r3, [pc, #172]	; (8001cd8 <HAL_ADC_MspInit+0x110>)
 8001c2c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001c2e:	2202      	movs	r2, #2
 8001c30:	4013      	ands	r3, r2
 8001c32:	60bb      	str	r3, [r7, #8]
 8001c34:	68bb      	ldr	r3, [r7, #8]
    PA0     ------> ADC1_IN0
    PA6     ------> ADC1_IN6
    PA7     ------> ADC1_IN7
    PB0     ------> ADC1_IN8
    */
    GPIO_InitStruct.Pin = Pout_Volt_Pin|Current_Volt_Pin|Volt_Volt_Pin;
 8001c36:	193b      	adds	r3, r7, r4
 8001c38:	22c1      	movs	r2, #193	; 0xc1
 8001c3a:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c3c:	193b      	adds	r3, r7, r4
 8001c3e:	2203      	movs	r2, #3
 8001c40:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c42:	193b      	adds	r3, r7, r4
 8001c44:	2200      	movs	r2, #0
 8001c46:	609a      	str	r2, [r3, #8]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c48:	193a      	adds	r2, r7, r4
 8001c4a:	23a0      	movs	r3, #160	; 0xa0
 8001c4c:	05db      	lsls	r3, r3, #23
 8001c4e:	0011      	movs	r1, r2
 8001c50:	0018      	movs	r0, r3
 8001c52:	f001 fee1 	bl	8003a18 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = AGC_Volt_Pin;
 8001c56:	193b      	adds	r3, r7, r4
 8001c58:	2201      	movs	r2, #1
 8001c5a:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c5c:	193b      	adds	r3, r7, r4
 8001c5e:	2203      	movs	r2, #3
 8001c60:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c62:	193b      	adds	r3, r7, r4
 8001c64:	2200      	movs	r2, #0
 8001c66:	609a      	str	r2, [r3, #8]
    HAL_GPIO_Init(AGC_Volt_GPIO_Port, &GPIO_InitStruct);
 8001c68:	193b      	adds	r3, r7, r4
 8001c6a:	4a1c      	ldr	r2, [pc, #112]	; (8001cdc <HAL_ADC_MspInit+0x114>)
 8001c6c:	0019      	movs	r1, r3
 8001c6e:	0010      	movs	r0, r2
 8001c70:	f001 fed2 	bl	8003a18 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA1_Channel3;
 8001c74:	4b1a      	ldr	r3, [pc, #104]	; (8001ce0 <HAL_ADC_MspInit+0x118>)
 8001c76:	4a1b      	ldr	r2, [pc, #108]	; (8001ce4 <HAL_ADC_MspInit+0x11c>)
 8001c78:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 8001c7a:	4b19      	ldr	r3, [pc, #100]	; (8001ce0 <HAL_ADC_MspInit+0x118>)
 8001c7c:	2205      	movs	r2, #5
 8001c7e:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8001c80:	4b17      	ldr	r3, [pc, #92]	; (8001ce0 <HAL_ADC_MspInit+0x118>)
 8001c82:	2200      	movs	r2, #0
 8001c84:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 8001c86:	4b16      	ldr	r3, [pc, #88]	; (8001ce0 <HAL_ADC_MspInit+0x118>)
 8001c88:	2200      	movs	r2, #0
 8001c8a:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 8001c8c:	4b14      	ldr	r3, [pc, #80]	; (8001ce0 <HAL_ADC_MspInit+0x118>)
 8001c8e:	2280      	movs	r2, #128	; 0x80
 8001c90:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8001c92:	4b13      	ldr	r3, [pc, #76]	; (8001ce0 <HAL_ADC_MspInit+0x118>)
 8001c94:	2280      	movs	r2, #128	; 0x80
 8001c96:	0052      	lsls	r2, r2, #1
 8001c98:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8001c9a:	4b11      	ldr	r3, [pc, #68]	; (8001ce0 <HAL_ADC_MspInit+0x118>)
 8001c9c:	2280      	movs	r2, #128	; 0x80
 8001c9e:	00d2      	lsls	r2, r2, #3
 8001ca0:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_NORMAL;
 8001ca2:	4b0f      	ldr	r3, [pc, #60]	; (8001ce0 <HAL_ADC_MspInit+0x118>)
 8001ca4:	2200      	movs	r2, #0
 8001ca6:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 8001ca8:	4b0d      	ldr	r3, [pc, #52]	; (8001ce0 <HAL_ADC_MspInit+0x118>)
 8001caa:	2200      	movs	r2, #0
 8001cac:	621a      	str	r2, [r3, #32]
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 8001cae:	4b0c      	ldr	r3, [pc, #48]	; (8001ce0 <HAL_ADC_MspInit+0x118>)
 8001cb0:	0018      	movs	r0, r3
 8001cb2:	f001 fb93 	bl	80033dc <HAL_DMA_Init>
 8001cb6:	1e03      	subs	r3, r0, #0
 8001cb8:	d001      	beq.n	8001cbe <HAL_ADC_MspInit+0xf6>
    {
      Error_Handler();
 8001cba:	f7ff ff5b 	bl	8001b74 <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc1);
 8001cbe:	687b      	ldr	r3, [r7, #4]
 8001cc0:	4a07      	ldr	r2, [pc, #28]	; (8001ce0 <HAL_ADC_MspInit+0x118>)
 8001cc2:	651a      	str	r2, [r3, #80]	; 0x50
 8001cc4:	4b06      	ldr	r3, [pc, #24]	; (8001ce0 <HAL_ADC_MspInit+0x118>)
 8001cc6:	687a      	ldr	r2, [r7, #4]
 8001cc8:	629a      	str	r2, [r3, #40]	; 0x28
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8001cca:	46c0      	nop			; (mov r8, r8)
 8001ccc:	46bd      	mov	sp, r7
 8001cce:	b00b      	add	sp, #44	; 0x2c
 8001cd0:	bd90      	pop	{r4, r7, pc}
 8001cd2:	46c0      	nop			; (mov r8, r8)
 8001cd4:	40012400 	.word	0x40012400
 8001cd8:	40021000 	.word	0x40021000
 8001cdc:	50000400 	.word	0x50000400
 8001ce0:	200000dc 	.word	0x200000dc
 8001ce4:	40020030 	.word	0x40020030

08001ce8 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001ce8:	b590      	push	{r4, r7, lr}
 8001cea:	b091      	sub	sp, #68	; 0x44
 8001cec:	af00      	add	r7, sp, #0
 8001cee:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cf0:	232c      	movs	r3, #44	; 0x2c
 8001cf2:	18fb      	adds	r3, r7, r3
 8001cf4:	0018      	movs	r0, r3
 8001cf6:	2314      	movs	r3, #20
 8001cf8:	001a      	movs	r2, r3
 8001cfa:	2100      	movs	r1, #0
 8001cfc:	f004 fe90 	bl	8006a20 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001d00:	2414      	movs	r4, #20
 8001d02:	193b      	adds	r3, r7, r4
 8001d04:	0018      	movs	r0, r3
 8001d06:	2318      	movs	r3, #24
 8001d08:	001a      	movs	r2, r3
 8001d0a:	2100      	movs	r1, #0
 8001d0c:	f004 fe88 	bl	8006a20 <memset>
  if(huart->Instance==USART1)
 8001d10:	687b      	ldr	r3, [r7, #4]
 8001d12:	681b      	ldr	r3, [r3, #0]
 8001d14:	4a27      	ldr	r2, [pc, #156]	; (8001db4 <HAL_UART_MspInit+0xcc>)
 8001d16:	4293      	cmp	r3, r2
 8001d18:	d147      	bne.n	8001daa <HAL_UART_MspInit+0xc2>

  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8001d1a:	193b      	adds	r3, r7, r4
 8001d1c:	2201      	movs	r2, #1
 8001d1e:	601a      	str	r2, [r3, #0]
    PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 8001d20:	193b      	adds	r3, r7, r4
 8001d22:	2200      	movs	r2, #0
 8001d24:	605a      	str	r2, [r3, #4]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001d26:	193b      	adds	r3, r7, r4
 8001d28:	0018      	movs	r0, r3
 8001d2a:	f002 fd5f 	bl	80047ec <HAL_RCCEx_PeriphCLKConfig>
 8001d2e:	1e03      	subs	r3, r0, #0
 8001d30:	d001      	beq.n	8001d36 <HAL_UART_MspInit+0x4e>
    {
      Error_Handler();
 8001d32:	f7ff ff1f 	bl	8001b74 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001d36:	4b20      	ldr	r3, [pc, #128]	; (8001db8 <HAL_UART_MspInit+0xd0>)
 8001d38:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001d3a:	4b1f      	ldr	r3, [pc, #124]	; (8001db8 <HAL_UART_MspInit+0xd0>)
 8001d3c:	2180      	movs	r1, #128	; 0x80
 8001d3e:	01c9      	lsls	r1, r1, #7
 8001d40:	430a      	orrs	r2, r1
 8001d42:	641a      	str	r2, [r3, #64]	; 0x40
 8001d44:	4b1c      	ldr	r3, [pc, #112]	; (8001db8 <HAL_UART_MspInit+0xd0>)
 8001d46:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001d48:	2380      	movs	r3, #128	; 0x80
 8001d4a:	01db      	lsls	r3, r3, #7
 8001d4c:	4013      	ands	r3, r2
 8001d4e:	613b      	str	r3, [r7, #16]
 8001d50:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d52:	4b19      	ldr	r3, [pc, #100]	; (8001db8 <HAL_UART_MspInit+0xd0>)
 8001d54:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001d56:	4b18      	ldr	r3, [pc, #96]	; (8001db8 <HAL_UART_MspInit+0xd0>)
 8001d58:	2101      	movs	r1, #1
 8001d5a:	430a      	orrs	r2, r1
 8001d5c:	635a      	str	r2, [r3, #52]	; 0x34
 8001d5e:	4b16      	ldr	r3, [pc, #88]	; (8001db8 <HAL_UART_MspInit+0xd0>)
 8001d60:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001d62:	2201      	movs	r2, #1
 8001d64:	4013      	ands	r3, r2
 8001d66:	60fb      	str	r3, [r7, #12]
 8001d68:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8001d6a:	212c      	movs	r1, #44	; 0x2c
 8001d6c:	187b      	adds	r3, r7, r1
 8001d6e:	22c0      	movs	r2, #192	; 0xc0
 8001d70:	00d2      	lsls	r2, r2, #3
 8001d72:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d74:	187b      	adds	r3, r7, r1
 8001d76:	2202      	movs	r2, #2
 8001d78:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d7a:	187b      	adds	r3, r7, r1
 8001d7c:	2200      	movs	r2, #0
 8001d7e:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d80:	187b      	adds	r3, r7, r1
 8001d82:	2200      	movs	r2, #0
 8001d84:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART1;
 8001d86:	187b      	adds	r3, r7, r1
 8001d88:	2201      	movs	r2, #1
 8001d8a:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d8c:	187a      	adds	r2, r7, r1
 8001d8e:	23a0      	movs	r3, #160	; 0xa0
 8001d90:	05db      	lsls	r3, r3, #23
 8001d92:	0011      	movs	r1, r2
 8001d94:	0018      	movs	r0, r3
 8001d96:	f001 fe3f 	bl	8003a18 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 8001d9a:	2200      	movs	r2, #0
 8001d9c:	2100      	movs	r1, #0
 8001d9e:	201b      	movs	r0, #27
 8001da0:	f001 faea 	bl	8003378 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8001da4:	201b      	movs	r0, #27
 8001da6:	f001 fafc 	bl	80033a2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8001daa:	46c0      	nop			; (mov r8, r8)
 8001dac:	46bd      	mov	sp, r7
 8001dae:	b011      	add	sp, #68	; 0x44
 8001db0:	bd90      	pop	{r4, r7, pc}
 8001db2:	46c0      	nop			; (mov r8, r8)
 8001db4:	40013800 	.word	0x40013800
 8001db8:	40021000 	.word	0x40021000

08001dbc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001dbc:	b580      	push	{r7, lr}
 8001dbe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001dc0:	e7fe      	b.n	8001dc0 <NMI_Handler+0x4>

08001dc2 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001dc2:	b580      	push	{r7, lr}
 8001dc4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001dc6:	e7fe      	b.n	8001dc6 <HardFault_Handler+0x4>

08001dc8 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001dc8:	b580      	push	{r7, lr}
 8001dca:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8001dcc:	46c0      	nop			; (mov r8, r8)
 8001dce:	46bd      	mov	sp, r7
 8001dd0:	bd80      	pop	{r7, pc}

08001dd2 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001dd2:	b580      	push	{r7, lr}
 8001dd4:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001dd6:	46c0      	nop			; (mov r8, r8)
 8001dd8:	46bd      	mov	sp, r7
 8001dda:	bd80      	pop	{r7, pc}

08001ddc <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001ddc:	b580      	push	{r7, lr}
 8001dde:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001de0:	f000 f9a0 	bl	8002124 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001de4:	46c0      	nop			; (mov r8, r8)
 8001de6:	46bd      	mov	sp, r7
 8001de8:	bd80      	pop	{r7, pc}
	...

08001dec <DMA1_Channel2_3_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 2 and channel 3 interrupts.
  */
void DMA1_Channel2_3_IRQHandler(void)
{
 8001dec:	b580      	push	{r7, lr}
 8001dee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel2_3_IRQn 0 */

  /* USER CODE END DMA1_Channel2_3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 8001df0:	4b03      	ldr	r3, [pc, #12]	; (8001e00 <DMA1_Channel2_3_IRQHandler+0x14>)
 8001df2:	0018      	movs	r0, r3
 8001df4:	f001 fcce 	bl	8003794 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel2_3_IRQn 1 */

  /* USER CODE END DMA1_Channel2_3_IRQn 1 */
}
 8001df8:	46c0      	nop			; (mov r8, r8)
 8001dfa:	46bd      	mov	sp, r7
 8001dfc:	bd80      	pop	{r7, pc}
 8001dfe:	46c0      	nop			; (mov r8, r8)
 8001e00:	200000dc 	.word	0x200000dc

08001e04 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXTI line 25.
  */
void USART1_IRQHandler(void)
{
 8001e04:	b580      	push	{r7, lr}
 8001e06:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8001e08:	4b03      	ldr	r3, [pc, #12]	; (8001e18 <USART1_IRQHandler+0x14>)
 8001e0a:	0018      	movs	r0, r3
 8001e0c:	f002 ff5e 	bl	8004ccc <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8001e10:	46c0      	nop			; (mov r8, r8)
 8001e12:	46bd      	mov	sp, r7
 8001e14:	bd80      	pop	{r7, pc}
 8001e16:	46c0      	nop			; (mov r8, r8)
 8001e18:	20000148 	.word	0x20000148

08001e1c <_sbrk>:
 8001e1c:	b580      	push	{r7, lr}
 8001e1e:	b086      	sub	sp, #24
 8001e20:	af00      	add	r7, sp, #0
 8001e22:	6078      	str	r0, [r7, #4]
 8001e24:	4a14      	ldr	r2, [pc, #80]	; (8001e78 <_sbrk+0x5c>)
 8001e26:	4b15      	ldr	r3, [pc, #84]	; (8001e7c <_sbrk+0x60>)
 8001e28:	1ad3      	subs	r3, r2, r3
 8001e2a:	617b      	str	r3, [r7, #20]
 8001e2c:	697b      	ldr	r3, [r7, #20]
 8001e2e:	613b      	str	r3, [r7, #16]
 8001e30:	4b13      	ldr	r3, [pc, #76]	; (8001e80 <_sbrk+0x64>)
 8001e32:	681b      	ldr	r3, [r3, #0]
 8001e34:	2b00      	cmp	r3, #0
 8001e36:	d102      	bne.n	8001e3e <_sbrk+0x22>
 8001e38:	4b11      	ldr	r3, [pc, #68]	; (8001e80 <_sbrk+0x64>)
 8001e3a:	4a12      	ldr	r2, [pc, #72]	; (8001e84 <_sbrk+0x68>)
 8001e3c:	601a      	str	r2, [r3, #0]
 8001e3e:	4b10      	ldr	r3, [pc, #64]	; (8001e80 <_sbrk+0x64>)
 8001e40:	681a      	ldr	r2, [r3, #0]
 8001e42:	687b      	ldr	r3, [r7, #4]
 8001e44:	18d3      	adds	r3, r2, r3
 8001e46:	693a      	ldr	r2, [r7, #16]
 8001e48:	429a      	cmp	r2, r3
 8001e4a:	d207      	bcs.n	8001e5c <_sbrk+0x40>
 8001e4c:	f004 fe02 	bl	8006a54 <__errno>
 8001e50:	0003      	movs	r3, r0
 8001e52:	220c      	movs	r2, #12
 8001e54:	601a      	str	r2, [r3, #0]
 8001e56:	2301      	movs	r3, #1
 8001e58:	425b      	negs	r3, r3
 8001e5a:	e009      	b.n	8001e70 <_sbrk+0x54>
 8001e5c:	4b08      	ldr	r3, [pc, #32]	; (8001e80 <_sbrk+0x64>)
 8001e5e:	681b      	ldr	r3, [r3, #0]
 8001e60:	60fb      	str	r3, [r7, #12]
 8001e62:	4b07      	ldr	r3, [pc, #28]	; (8001e80 <_sbrk+0x64>)
 8001e64:	681a      	ldr	r2, [r3, #0]
 8001e66:	687b      	ldr	r3, [r7, #4]
 8001e68:	18d2      	adds	r2, r2, r3
 8001e6a:	4b05      	ldr	r3, [pc, #20]	; (8001e80 <_sbrk+0x64>)
 8001e6c:	601a      	str	r2, [r3, #0]
 8001e6e:	68fb      	ldr	r3, [r7, #12]
 8001e70:	0018      	movs	r0, r3
 8001e72:	46bd      	mov	sp, r7
 8001e74:	b006      	add	sp, #24
 8001e76:	bd80      	pop	{r7, pc}
 8001e78:	20002000 	.word	0x20002000
 8001e7c:	00000400 	.word	0x00000400
 8001e80:	20000270 	.word	0x20000270
 8001e84:	200003c0 	.word	0x200003c0

08001e88 <SystemInit>:
 8001e88:	b580      	push	{r7, lr}
 8001e8a:	af00      	add	r7, sp, #0
 8001e8c:	46c0      	nop			; (mov r8, r8)
 8001e8e:	46bd      	mov	sp, r7
 8001e90:	bd80      	pop	{r7, pc}
	...

08001e94 <uart1_write>:
	/* set the destination buffer */
	/*set the source buffer */

}

void uart1_write(char ch) {
 8001e94:	b580      	push	{r7, lr}
 8001e96:	b082      	sub	sp, #8
 8001e98:	af00      	add	r7, sp, #0
 8001e9a:	0002      	movs	r2, r0
 8001e9c:	1dfb      	adds	r3, r7, #7
 8001e9e:	701a      	strb	r2, [r3, #0]
	SET_BIT(GPIOA->ODR, GPIO_ODR_OD15);
 8001ea0:	23a0      	movs	r3, #160	; 0xa0
 8001ea2:	05db      	lsls	r3, r3, #23
 8001ea4:	695a      	ldr	r2, [r3, #20]
 8001ea6:	23a0      	movs	r3, #160	; 0xa0
 8001ea8:	05db      	lsls	r3, r3, #23
 8001eaa:	2180      	movs	r1, #128	; 0x80
 8001eac:	0209      	lsls	r1, r1, #8
 8001eae:	430a      	orrs	r2, r1
 8001eb0:	615a      	str	r2, [r3, #20]

	while (!READ_BIT(USART1->ISR, USART_ISR_TXE_TXFNF))
 8001eb2:	46c0      	nop			; (mov r8, r8)
 8001eb4:	4b0d      	ldr	r3, [pc, #52]	; (8001eec <uart1_write+0x58>)
 8001eb6:	69db      	ldr	r3, [r3, #28]
 8001eb8:	2280      	movs	r2, #128	; 0x80
 8001eba:	4013      	ands	r3, r2
 8001ebc:	d0fa      	beq.n	8001eb4 <uart1_write+0x20>
		;
	USART1->TDR = (uint8_t) (ch & 0xFFU);
 8001ebe:	4b0b      	ldr	r3, [pc, #44]	; (8001eec <uart1_write+0x58>)
 8001ec0:	1dfa      	adds	r2, r7, #7
 8001ec2:	7812      	ldrb	r2, [r2, #0]
 8001ec4:	629a      	str	r2, [r3, #40]	; 0x28

	while (!READ_BIT(USART1->ISR, USART_ISR_TC))
 8001ec6:	46c0      	nop			; (mov r8, r8)
 8001ec8:	4b08      	ldr	r3, [pc, #32]	; (8001eec <uart1_write+0x58>)
 8001eca:	69db      	ldr	r3, [r3, #28]
 8001ecc:	2240      	movs	r2, #64	; 0x40
 8001ece:	4013      	ands	r3, r2
 8001ed0:	d0fa      	beq.n	8001ec8 <uart1_write+0x34>
		;

	CLEAR_BIT(GPIOA->ODR, GPIO_ODR_OD15);
 8001ed2:	23a0      	movs	r3, #160	; 0xa0
 8001ed4:	05db      	lsls	r3, r3, #23
 8001ed6:	695a      	ldr	r2, [r3, #20]
 8001ed8:	23a0      	movs	r3, #160	; 0xa0
 8001eda:	05db      	lsls	r3, r3, #23
 8001edc:	4904      	ldr	r1, [pc, #16]	; (8001ef0 <uart1_write+0x5c>)
 8001ede:	400a      	ands	r2, r1
 8001ee0:	615a      	str	r2, [r3, #20]
}
 8001ee2:	46c0      	nop			; (mov r8, r8)
 8001ee4:	46bd      	mov	sp, r7
 8001ee6:	b002      	add	sp, #8
 8001ee8:	bd80      	pop	{r7, pc}
 8001eea:	46c0      	nop			; (mov r8, r8)
 8001eec:	40013800 	.word	0x40013800
 8001ef0:	ffff7fff 	.word	0xffff7fff

08001ef4 <uart1_write_frame>:
	uint8_t i;
	for (i = 0; str[i] != '\0'; i++)
		uart1_write(str[i]);
}

void uart1_write_frame(char *str, uint8_t len) {
 8001ef4:	b580      	push	{r7, lr}
 8001ef6:	b084      	sub	sp, #16
 8001ef8:	af00      	add	r7, sp, #0
 8001efa:	6078      	str	r0, [r7, #4]
 8001efc:	000a      	movs	r2, r1
 8001efe:	1cfb      	adds	r3, r7, #3
 8001f00:	701a      	strb	r2, [r3, #0]
	if (len > 0) {
 8001f02:	1cfb      	adds	r3, r7, #3
 8001f04:	781b      	ldrb	r3, [r3, #0]
 8001f06:	2b00      	cmp	r3, #0
 8001f08:	d011      	beq.n	8001f2e <uart1_write_frame+0x3a>
		for (int i = 0; i < len; i++)
 8001f0a:	2300      	movs	r3, #0
 8001f0c:	60fb      	str	r3, [r7, #12]
 8001f0e:	e009      	b.n	8001f24 <uart1_write_frame+0x30>
			uart1_write(str[i]);
 8001f10:	68fb      	ldr	r3, [r7, #12]
 8001f12:	687a      	ldr	r2, [r7, #4]
 8001f14:	18d3      	adds	r3, r2, r3
 8001f16:	781b      	ldrb	r3, [r3, #0]
 8001f18:	0018      	movs	r0, r3
 8001f1a:	f7ff ffbb 	bl	8001e94 <uart1_write>
		for (int i = 0; i < len; i++)
 8001f1e:	68fb      	ldr	r3, [r7, #12]
 8001f20:	3301      	adds	r3, #1
 8001f22:	60fb      	str	r3, [r7, #12]
 8001f24:	1cfb      	adds	r3, r7, #3
 8001f26:	781b      	ldrb	r3, [r3, #0]
 8001f28:	68fa      	ldr	r2, [r7, #12]
 8001f2a:	429a      	cmp	r2, r3
 8001f2c:	dbf0      	blt.n	8001f10 <uart1_write_frame+0x1c>
	}
}
 8001f2e:	46c0      	nop			; (mov r8, r8)
 8001f30:	46bd      	mov	sp, r7
 8001f32:	b004      	add	sp, #16
 8001f34:	bd80      	pop	{r7, pc}
	...

08001f38 <crc_get>:
#include "utils.h"

uint16_t crc_get(uint8_t* buffer, uint8_t buff_len) {
 8001f38:	b580      	push	{r7, lr}
 8001f3a:	b084      	sub	sp, #16
 8001f3c:	af00      	add	r7, sp, #0
 8001f3e:	6078      	str	r0, [r7, #4]
 8001f40:	000a      	movs	r2, r1
 8001f42:	1cfb      	adds	r3, r7, #3
 8001f44:	701a      	strb	r2, [r3, #0]
	uint8_t b;
	uint8_t i;
	uint16_t generator = 0x1021; //divisor is 16bit
 8001f46:	230a      	movs	r3, #10
 8001f48:	18fb      	adds	r3, r7, r3
 8001f4a:	4a2b      	ldr	r2, [pc, #172]	; (8001ff8 <crc_get+0xc0>)
 8001f4c:	801a      	strh	r2, [r3, #0]
	uint16_t crc = 0;			 // CRC value is 16bit
 8001f4e:	230c      	movs	r3, #12
 8001f50:	18fb      	adds	r3, r7, r3
 8001f52:	2200      	movs	r2, #0
 8001f54:	801a      	strh	r2, [r3, #0]

	for (b = 0; b < buff_len; b++) {
 8001f56:	230f      	movs	r3, #15
 8001f58:	18fb      	adds	r3, r7, r3
 8001f5a:	2200      	movs	r2, #0
 8001f5c:	701a      	strb	r2, [r3, #0]
 8001f5e:	e03d      	b.n	8001fdc <crc_get+0xa4>
		crc ^= ((uint16_t) (buffer[b] << 8)); // move byte into MSB of 16bit CRC
 8001f60:	230f      	movs	r3, #15
 8001f62:	18fb      	adds	r3, r7, r3
 8001f64:	781b      	ldrb	r3, [r3, #0]
 8001f66:	687a      	ldr	r2, [r7, #4]
 8001f68:	18d3      	adds	r3, r2, r3
 8001f6a:	781b      	ldrb	r3, [r3, #0]
 8001f6c:	b29b      	uxth	r3, r3
 8001f6e:	021b      	lsls	r3, r3, #8
 8001f70:	b299      	uxth	r1, r3
 8001f72:	220c      	movs	r2, #12
 8001f74:	18bb      	adds	r3, r7, r2
 8001f76:	18ba      	adds	r2, r7, r2
 8001f78:	8812      	ldrh	r2, [r2, #0]
 8001f7a:	404a      	eors	r2, r1
 8001f7c:	801a      	strh	r2, [r3, #0]
		for (i = 0; i < 8; i++) {
 8001f7e:	230e      	movs	r3, #14
 8001f80:	18fb      	adds	r3, r7, r3
 8001f82:	2200      	movs	r2, #0
 8001f84:	701a      	strb	r2, [r3, #0]
 8001f86:	e01e      	b.n	8001fc6 <crc_get+0x8e>
			if ((crc & 0x8000) != 0) // test for MSB = bit 15
 8001f88:	210c      	movs	r1, #12
 8001f8a:	187b      	adds	r3, r7, r1
 8001f8c:	2200      	movs	r2, #0
 8001f8e:	5e9b      	ldrsh	r3, [r3, r2]
 8001f90:	2b00      	cmp	r3, #0
 8001f92:	da0c      	bge.n	8001fae <crc_get+0x76>
				crc = ((uint16_t) ((crc << 1) ^ generator));
 8001f94:	187b      	adds	r3, r7, r1
 8001f96:	881b      	ldrh	r3, [r3, #0]
 8001f98:	005b      	lsls	r3, r3, #1
 8001f9a:	b21a      	sxth	r2, r3
 8001f9c:	230a      	movs	r3, #10
 8001f9e:	18fb      	adds	r3, r7, r3
 8001fa0:	2000      	movs	r0, #0
 8001fa2:	5e1b      	ldrsh	r3, [r3, r0]
 8001fa4:	4053      	eors	r3, r2
 8001fa6:	b21a      	sxth	r2, r3
 8001fa8:	187b      	adds	r3, r7, r1
 8001faa:	801a      	strh	r2, [r3, #0]
 8001fac:	e005      	b.n	8001fba <crc_get+0x82>
			else
				crc <<= 1;
 8001fae:	230c      	movs	r3, #12
 8001fb0:	18fa      	adds	r2, r7, r3
 8001fb2:	18fb      	adds	r3, r7, r3
 8001fb4:	881b      	ldrh	r3, [r3, #0]
 8001fb6:	18db      	adds	r3, r3, r3
 8001fb8:	8013      	strh	r3, [r2, #0]
		for (i = 0; i < 8; i++) {
 8001fba:	210e      	movs	r1, #14
 8001fbc:	187b      	adds	r3, r7, r1
 8001fbe:	781a      	ldrb	r2, [r3, #0]
 8001fc0:	187b      	adds	r3, r7, r1
 8001fc2:	3201      	adds	r2, #1
 8001fc4:	701a      	strb	r2, [r3, #0]
 8001fc6:	230e      	movs	r3, #14
 8001fc8:	18fb      	adds	r3, r7, r3
 8001fca:	781b      	ldrb	r3, [r3, #0]
 8001fcc:	2b07      	cmp	r3, #7
 8001fce:	d9db      	bls.n	8001f88 <crc_get+0x50>
	for (b = 0; b < buff_len; b++) {
 8001fd0:	210f      	movs	r1, #15
 8001fd2:	187b      	adds	r3, r7, r1
 8001fd4:	781a      	ldrb	r2, [r3, #0]
 8001fd6:	187b      	adds	r3, r7, r1
 8001fd8:	3201      	adds	r2, #1
 8001fda:	701a      	strb	r2, [r3, #0]
 8001fdc:	230f      	movs	r3, #15
 8001fde:	18fa      	adds	r2, r7, r3
 8001fe0:	1cfb      	adds	r3, r7, #3
 8001fe2:	7812      	ldrb	r2, [r2, #0]
 8001fe4:	781b      	ldrb	r3, [r3, #0]
 8001fe6:	429a      	cmp	r2, r3
 8001fe8:	d3ba      	bcc.n	8001f60 <crc_get+0x28>
		}
	}
	return crc;
 8001fea:	230c      	movs	r3, #12
 8001fec:	18fb      	adds	r3, r7, r3
 8001fee:	881b      	ldrh	r3, [r3, #0]
}
 8001ff0:	0018      	movs	r0, r3
 8001ff2:	46bd      	mov	sp, r7
 8001ff4:	b004      	add	sp, #16
 8001ff6:	bd80      	pop	{r7, pc}
 8001ff8:	00001021 	.word	0x00001021

08001ffc <Reset_Handler>:
 8001ffc:	480d      	ldr	r0, [pc, #52]	; (8002034 <LoopForever+0x2>)
 8001ffe:	4685      	mov	sp, r0
 8002000:	f7ff ff42 	bl	8001e88 <SystemInit>
 8002004:	480c      	ldr	r0, [pc, #48]	; (8002038 <LoopForever+0x6>)
 8002006:	490d      	ldr	r1, [pc, #52]	; (800203c <LoopForever+0xa>)
 8002008:	4a0d      	ldr	r2, [pc, #52]	; (8002040 <LoopForever+0xe>)
 800200a:	2300      	movs	r3, #0
 800200c:	e002      	b.n	8002014 <LoopCopyDataInit>

0800200e <CopyDataInit>:
 800200e:	58d4      	ldr	r4, [r2, r3]
 8002010:	50c4      	str	r4, [r0, r3]
 8002012:	3304      	adds	r3, #4

08002014 <LoopCopyDataInit>:
 8002014:	18c4      	adds	r4, r0, r3
 8002016:	428c      	cmp	r4, r1
 8002018:	d3f9      	bcc.n	800200e <CopyDataInit>
 800201a:	4a0a      	ldr	r2, [pc, #40]	; (8002044 <LoopForever+0x12>)
 800201c:	4c0a      	ldr	r4, [pc, #40]	; (8002048 <LoopForever+0x16>)
 800201e:	2300      	movs	r3, #0
 8002020:	e001      	b.n	8002026 <LoopFillZerobss>

08002022 <FillZerobss>:
 8002022:	6013      	str	r3, [r2, #0]
 8002024:	3204      	adds	r2, #4

08002026 <LoopFillZerobss>:
 8002026:	42a2      	cmp	r2, r4
 8002028:	d3fb      	bcc.n	8002022 <FillZerobss>
 800202a:	f004 fd19 	bl	8006a60 <__libc_init_array>
 800202e:	f7fe ffbf 	bl	8000fb0 <main>

08002032 <LoopForever>:
 8002032:	e7fe      	b.n	8002032 <LoopForever>
 8002034:	20002000 	.word	0x20002000
 8002038:	20000000 	.word	0x20000000
 800203c:	2000005c 	.word	0x2000005c
 8002040:	080073d8 	.word	0x080073d8
 8002044:	2000005c 	.word	0x2000005c
 8002048:	200003c0 	.word	0x200003c0

0800204c <ADC1_IRQHandler>:
 800204c:	e7fe      	b.n	800204c <ADC1_IRQHandler>
	...

08002050 <HAL_Init>:
 8002050:	b580      	push	{r7, lr}
 8002052:	b082      	sub	sp, #8
 8002054:	af00      	add	r7, sp, #0
 8002056:	1dfb      	adds	r3, r7, #7
 8002058:	2200      	movs	r2, #0
 800205a:	701a      	strb	r2, [r3, #0]
 800205c:	4b0b      	ldr	r3, [pc, #44]	; (800208c <HAL_Init+0x3c>)
 800205e:	681a      	ldr	r2, [r3, #0]
 8002060:	4b0a      	ldr	r3, [pc, #40]	; (800208c <HAL_Init+0x3c>)
 8002062:	2180      	movs	r1, #128	; 0x80
 8002064:	0049      	lsls	r1, r1, #1
 8002066:	430a      	orrs	r2, r1
 8002068:	601a      	str	r2, [r3, #0]
 800206a:	2003      	movs	r0, #3
 800206c:	f000 f810 	bl	8002090 <HAL_InitTick>
 8002070:	1e03      	subs	r3, r0, #0
 8002072:	d003      	beq.n	800207c <HAL_Init+0x2c>
 8002074:	1dfb      	adds	r3, r7, #7
 8002076:	2201      	movs	r2, #1
 8002078:	701a      	strb	r2, [r3, #0]
 800207a:	e001      	b.n	8002080 <HAL_Init+0x30>
 800207c:	f7ff fd80 	bl	8001b80 <HAL_MspInit>
 8002080:	1dfb      	adds	r3, r7, #7
 8002082:	781b      	ldrb	r3, [r3, #0]
 8002084:	0018      	movs	r0, r3
 8002086:	46bd      	mov	sp, r7
 8002088:	b002      	add	sp, #8
 800208a:	bd80      	pop	{r7, pc}
 800208c:	40022000 	.word	0x40022000

08002090 <HAL_InitTick>:
 8002090:	b590      	push	{r4, r7, lr}
 8002092:	b085      	sub	sp, #20
 8002094:	af00      	add	r7, sp, #0
 8002096:	6078      	str	r0, [r7, #4]
 8002098:	230f      	movs	r3, #15
 800209a:	18fb      	adds	r3, r7, r3
 800209c:	2200      	movs	r2, #0
 800209e:	701a      	strb	r2, [r3, #0]
 80020a0:	4b1d      	ldr	r3, [pc, #116]	; (8002118 <HAL_InitTick+0x88>)
 80020a2:	781b      	ldrb	r3, [r3, #0]
 80020a4:	2b00      	cmp	r3, #0
 80020a6:	d02b      	beq.n	8002100 <HAL_InitTick+0x70>
 80020a8:	4b1c      	ldr	r3, [pc, #112]	; (800211c <HAL_InitTick+0x8c>)
 80020aa:	681c      	ldr	r4, [r3, #0]
 80020ac:	4b1a      	ldr	r3, [pc, #104]	; (8002118 <HAL_InitTick+0x88>)
 80020ae:	781b      	ldrb	r3, [r3, #0]
 80020b0:	0019      	movs	r1, r3
 80020b2:	23fa      	movs	r3, #250	; 0xfa
 80020b4:	0098      	lsls	r0, r3, #2
 80020b6:	f7fe f82d 	bl	8000114 <__udivsi3>
 80020ba:	0003      	movs	r3, r0
 80020bc:	0019      	movs	r1, r3
 80020be:	0020      	movs	r0, r4
 80020c0:	f7fe f828 	bl	8000114 <__udivsi3>
 80020c4:	0003      	movs	r3, r0
 80020c6:	0018      	movs	r0, r3
 80020c8:	f001 f97b 	bl	80033c2 <HAL_SYSTICK_Config>
 80020cc:	1e03      	subs	r3, r0, #0
 80020ce:	d112      	bne.n	80020f6 <HAL_InitTick+0x66>
 80020d0:	687b      	ldr	r3, [r7, #4]
 80020d2:	2b03      	cmp	r3, #3
 80020d4:	d80a      	bhi.n	80020ec <HAL_InitTick+0x5c>
 80020d6:	6879      	ldr	r1, [r7, #4]
 80020d8:	2301      	movs	r3, #1
 80020da:	425b      	negs	r3, r3
 80020dc:	2200      	movs	r2, #0
 80020de:	0018      	movs	r0, r3
 80020e0:	f001 f94a 	bl	8003378 <HAL_NVIC_SetPriority>
 80020e4:	4b0e      	ldr	r3, [pc, #56]	; (8002120 <HAL_InitTick+0x90>)
 80020e6:	687a      	ldr	r2, [r7, #4]
 80020e8:	601a      	str	r2, [r3, #0]
 80020ea:	e00d      	b.n	8002108 <HAL_InitTick+0x78>
 80020ec:	230f      	movs	r3, #15
 80020ee:	18fb      	adds	r3, r7, r3
 80020f0:	2201      	movs	r2, #1
 80020f2:	701a      	strb	r2, [r3, #0]
 80020f4:	e008      	b.n	8002108 <HAL_InitTick+0x78>
 80020f6:	230f      	movs	r3, #15
 80020f8:	18fb      	adds	r3, r7, r3
 80020fa:	2201      	movs	r2, #1
 80020fc:	701a      	strb	r2, [r3, #0]
 80020fe:	e003      	b.n	8002108 <HAL_InitTick+0x78>
 8002100:	230f      	movs	r3, #15
 8002102:	18fb      	adds	r3, r7, r3
 8002104:	2201      	movs	r2, #1
 8002106:	701a      	strb	r2, [r3, #0]
 8002108:	230f      	movs	r3, #15
 800210a:	18fb      	adds	r3, r7, r3
 800210c:	781b      	ldrb	r3, [r3, #0]
 800210e:	0018      	movs	r0, r3
 8002110:	46bd      	mov	sp, r7
 8002112:	b005      	add	sp, #20
 8002114:	bd90      	pop	{r4, r7, pc}
 8002116:	46c0      	nop			; (mov r8, r8)
 8002118:	20000008 	.word	0x20000008
 800211c:	20000000 	.word	0x20000000
 8002120:	20000004 	.word	0x20000004

08002124 <HAL_IncTick>:
 8002124:	b580      	push	{r7, lr}
 8002126:	af00      	add	r7, sp, #0
 8002128:	4b05      	ldr	r3, [pc, #20]	; (8002140 <HAL_IncTick+0x1c>)
 800212a:	781b      	ldrb	r3, [r3, #0]
 800212c:	001a      	movs	r2, r3
 800212e:	4b05      	ldr	r3, [pc, #20]	; (8002144 <HAL_IncTick+0x20>)
 8002130:	681b      	ldr	r3, [r3, #0]
 8002132:	18d2      	adds	r2, r2, r3
 8002134:	4b03      	ldr	r3, [pc, #12]	; (8002144 <HAL_IncTick+0x20>)
 8002136:	601a      	str	r2, [r3, #0]
 8002138:	46c0      	nop			; (mov r8, r8)
 800213a:	46bd      	mov	sp, r7
 800213c:	bd80      	pop	{r7, pc}
 800213e:	46c0      	nop			; (mov r8, r8)
 8002140:	20000008 	.word	0x20000008
 8002144:	20000274 	.word	0x20000274

08002148 <HAL_GetTick>:
 8002148:	b580      	push	{r7, lr}
 800214a:	af00      	add	r7, sp, #0
 800214c:	4b02      	ldr	r3, [pc, #8]	; (8002158 <HAL_GetTick+0x10>)
 800214e:	681b      	ldr	r3, [r3, #0]
 8002150:	0018      	movs	r0, r3
 8002152:	46bd      	mov	sp, r7
 8002154:	bd80      	pop	{r7, pc}
 8002156:	46c0      	nop			; (mov r8, r8)
 8002158:	20000274 	.word	0x20000274

0800215c <HAL_Delay>:
 800215c:	b580      	push	{r7, lr}
 800215e:	b084      	sub	sp, #16
 8002160:	af00      	add	r7, sp, #0
 8002162:	6078      	str	r0, [r7, #4]
 8002164:	f7ff fff0 	bl	8002148 <HAL_GetTick>
 8002168:	0003      	movs	r3, r0
 800216a:	60bb      	str	r3, [r7, #8]
 800216c:	687b      	ldr	r3, [r7, #4]
 800216e:	60fb      	str	r3, [r7, #12]
 8002170:	68fb      	ldr	r3, [r7, #12]
 8002172:	3301      	adds	r3, #1
 8002174:	d005      	beq.n	8002182 <HAL_Delay+0x26>
 8002176:	4b0a      	ldr	r3, [pc, #40]	; (80021a0 <HAL_Delay+0x44>)
 8002178:	781b      	ldrb	r3, [r3, #0]
 800217a:	001a      	movs	r2, r3
 800217c:	68fb      	ldr	r3, [r7, #12]
 800217e:	189b      	adds	r3, r3, r2
 8002180:	60fb      	str	r3, [r7, #12]
 8002182:	46c0      	nop			; (mov r8, r8)
 8002184:	f7ff ffe0 	bl	8002148 <HAL_GetTick>
 8002188:	0002      	movs	r2, r0
 800218a:	68bb      	ldr	r3, [r7, #8]
 800218c:	1ad3      	subs	r3, r2, r3
 800218e:	68fa      	ldr	r2, [r7, #12]
 8002190:	429a      	cmp	r2, r3
 8002192:	d8f7      	bhi.n	8002184 <HAL_Delay+0x28>
 8002194:	46c0      	nop			; (mov r8, r8)
 8002196:	46c0      	nop			; (mov r8, r8)
 8002198:	46bd      	mov	sp, r7
 800219a:	b004      	add	sp, #16
 800219c:	bd80      	pop	{r7, pc}
 800219e:	46c0      	nop			; (mov r8, r8)
 80021a0:	20000008 	.word	0x20000008

080021a4 <LL_ADC_SetCommonPathInternalCh>:
 80021a4:	b580      	push	{r7, lr}
 80021a6:	b082      	sub	sp, #8
 80021a8:	af00      	add	r7, sp, #0
 80021aa:	6078      	str	r0, [r7, #4]
 80021ac:	6039      	str	r1, [r7, #0]
 80021ae:	687b      	ldr	r3, [r7, #4]
 80021b0:	681b      	ldr	r3, [r3, #0]
 80021b2:	4a05      	ldr	r2, [pc, #20]	; (80021c8 <LL_ADC_SetCommonPathInternalCh+0x24>)
 80021b4:	401a      	ands	r2, r3
 80021b6:	683b      	ldr	r3, [r7, #0]
 80021b8:	431a      	orrs	r2, r3
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	601a      	str	r2, [r3, #0]
 80021be:	46c0      	nop			; (mov r8, r8)
 80021c0:	46bd      	mov	sp, r7
 80021c2:	b002      	add	sp, #8
 80021c4:	bd80      	pop	{r7, pc}
 80021c6:	46c0      	nop			; (mov r8, r8)
 80021c8:	fe3fffff 	.word	0xfe3fffff

080021cc <LL_ADC_GetCommonPathInternalCh>:
 80021cc:	b580      	push	{r7, lr}
 80021ce:	b082      	sub	sp, #8
 80021d0:	af00      	add	r7, sp, #0
 80021d2:	6078      	str	r0, [r7, #4]
 80021d4:	687b      	ldr	r3, [r7, #4]
 80021d6:	681a      	ldr	r2, [r3, #0]
 80021d8:	23e0      	movs	r3, #224	; 0xe0
 80021da:	045b      	lsls	r3, r3, #17
 80021dc:	4013      	ands	r3, r2
 80021de:	0018      	movs	r0, r3
 80021e0:	46bd      	mov	sp, r7
 80021e2:	b002      	add	sp, #8
 80021e4:	bd80      	pop	{r7, pc}

080021e6 <LL_ADC_SetSamplingTimeCommonChannels>:
 80021e6:	b580      	push	{r7, lr}
 80021e8:	b084      	sub	sp, #16
 80021ea:	af00      	add	r7, sp, #0
 80021ec:	60f8      	str	r0, [r7, #12]
 80021ee:	60b9      	str	r1, [r7, #8]
 80021f0:	607a      	str	r2, [r7, #4]
 80021f2:	68fb      	ldr	r3, [r7, #12]
 80021f4:	695b      	ldr	r3, [r3, #20]
 80021f6:	68ba      	ldr	r2, [r7, #8]
 80021f8:	2104      	movs	r1, #4
 80021fa:	400a      	ands	r2, r1
 80021fc:	2107      	movs	r1, #7
 80021fe:	4091      	lsls	r1, r2
 8002200:	000a      	movs	r2, r1
 8002202:	43d2      	mvns	r2, r2
 8002204:	401a      	ands	r2, r3
 8002206:	68bb      	ldr	r3, [r7, #8]
 8002208:	2104      	movs	r1, #4
 800220a:	400b      	ands	r3, r1
 800220c:	6879      	ldr	r1, [r7, #4]
 800220e:	4099      	lsls	r1, r3
 8002210:	000b      	movs	r3, r1
 8002212:	431a      	orrs	r2, r3
 8002214:	68fb      	ldr	r3, [r7, #12]
 8002216:	615a      	str	r2, [r3, #20]
 8002218:	46c0      	nop			; (mov r8, r8)
 800221a:	46bd      	mov	sp, r7
 800221c:	b004      	add	sp, #16
 800221e:	bd80      	pop	{r7, pc}

08002220 <LL_ADC_GetSamplingTimeCommonChannels>:
 8002220:	b580      	push	{r7, lr}
 8002222:	b082      	sub	sp, #8
 8002224:	af00      	add	r7, sp, #0
 8002226:	6078      	str	r0, [r7, #4]
 8002228:	6039      	str	r1, [r7, #0]
 800222a:	687b      	ldr	r3, [r7, #4]
 800222c:	695b      	ldr	r3, [r3, #20]
 800222e:	683a      	ldr	r2, [r7, #0]
 8002230:	2104      	movs	r1, #4
 8002232:	400a      	ands	r2, r1
 8002234:	2107      	movs	r1, #7
 8002236:	4091      	lsls	r1, r2
 8002238:	000a      	movs	r2, r1
 800223a:	401a      	ands	r2, r3
 800223c:	683b      	ldr	r3, [r7, #0]
 800223e:	2104      	movs	r1, #4
 8002240:	400b      	ands	r3, r1
 8002242:	40da      	lsrs	r2, r3
 8002244:	0013      	movs	r3, r2
 8002246:	0018      	movs	r0, r3
 8002248:	46bd      	mov	sp, r7
 800224a:	b002      	add	sp, #8
 800224c:	bd80      	pop	{r7, pc}

0800224e <LL_ADC_REG_IsTriggerSourceSWStart>:
 800224e:	b580      	push	{r7, lr}
 8002250:	b082      	sub	sp, #8
 8002252:	af00      	add	r7, sp, #0
 8002254:	6078      	str	r0, [r7, #4]
 8002256:	687b      	ldr	r3, [r7, #4]
 8002258:	68da      	ldr	r2, [r3, #12]
 800225a:	23c0      	movs	r3, #192	; 0xc0
 800225c:	011b      	lsls	r3, r3, #4
 800225e:	4013      	ands	r3, r2
 8002260:	d101      	bne.n	8002266 <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 8002262:	2301      	movs	r3, #1
 8002264:	e000      	b.n	8002268 <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 8002266:	2300      	movs	r3, #0
 8002268:	0018      	movs	r0, r3
 800226a:	46bd      	mov	sp, r7
 800226c:	b002      	add	sp, #8
 800226e:	bd80      	pop	{r7, pc}

08002270 <LL_ADC_REG_SetSequencerRanks>:
 8002270:	b580      	push	{r7, lr}
 8002272:	b084      	sub	sp, #16
 8002274:	af00      	add	r7, sp, #0
 8002276:	60f8      	str	r0, [r7, #12]
 8002278:	60b9      	str	r1, [r7, #8]
 800227a:	607a      	str	r2, [r7, #4]
 800227c:	68fb      	ldr	r3, [r7, #12]
 800227e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002280:	68ba      	ldr	r2, [r7, #8]
 8002282:	211f      	movs	r1, #31
 8002284:	400a      	ands	r2, r1
 8002286:	210f      	movs	r1, #15
 8002288:	4091      	lsls	r1, r2
 800228a:	000a      	movs	r2, r1
 800228c:	43d2      	mvns	r2, r2
 800228e:	401a      	ands	r2, r3
 8002290:	687b      	ldr	r3, [r7, #4]
 8002292:	0e9b      	lsrs	r3, r3, #26
 8002294:	210f      	movs	r1, #15
 8002296:	4019      	ands	r1, r3
 8002298:	68bb      	ldr	r3, [r7, #8]
 800229a:	201f      	movs	r0, #31
 800229c:	4003      	ands	r3, r0
 800229e:	4099      	lsls	r1, r3
 80022a0:	000b      	movs	r3, r1
 80022a2:	431a      	orrs	r2, r3
 80022a4:	68fb      	ldr	r3, [r7, #12]
 80022a6:	629a      	str	r2, [r3, #40]	; 0x28
 80022a8:	46c0      	nop			; (mov r8, r8)
 80022aa:	46bd      	mov	sp, r7
 80022ac:	b004      	add	sp, #16
 80022ae:	bd80      	pop	{r7, pc}

080022b0 <LL_ADC_REG_SetSequencerChAdd>:
 80022b0:	b580      	push	{r7, lr}
 80022b2:	b082      	sub	sp, #8
 80022b4:	af00      	add	r7, sp, #0
 80022b6:	6078      	str	r0, [r7, #4]
 80022b8:	6039      	str	r1, [r7, #0]
 80022ba:	687b      	ldr	r3, [r7, #4]
 80022bc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80022be:	683b      	ldr	r3, [r7, #0]
 80022c0:	035b      	lsls	r3, r3, #13
 80022c2:	0b5b      	lsrs	r3, r3, #13
 80022c4:	431a      	orrs	r2, r3
 80022c6:	687b      	ldr	r3, [r7, #4]
 80022c8:	629a      	str	r2, [r3, #40]	; 0x28
 80022ca:	46c0      	nop			; (mov r8, r8)
 80022cc:	46bd      	mov	sp, r7
 80022ce:	b002      	add	sp, #8
 80022d0:	bd80      	pop	{r7, pc}

080022d2 <LL_ADC_REG_SetSequencerChRem>:
 80022d2:	b580      	push	{r7, lr}
 80022d4:	b082      	sub	sp, #8
 80022d6:	af00      	add	r7, sp, #0
 80022d8:	6078      	str	r0, [r7, #4]
 80022da:	6039      	str	r1, [r7, #0]
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80022e0:	683a      	ldr	r2, [r7, #0]
 80022e2:	0352      	lsls	r2, r2, #13
 80022e4:	0b52      	lsrs	r2, r2, #13
 80022e6:	43d2      	mvns	r2, r2
 80022e8:	401a      	ands	r2, r3
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	629a      	str	r2, [r3, #40]	; 0x28
 80022ee:	46c0      	nop			; (mov r8, r8)
 80022f0:	46bd      	mov	sp, r7
 80022f2:	b002      	add	sp, #8
 80022f4:	bd80      	pop	{r7, pc}
	...

080022f8 <LL_ADC_SetChannelSamplingTime>:
 80022f8:	b580      	push	{r7, lr}
 80022fa:	b084      	sub	sp, #16
 80022fc:	af00      	add	r7, sp, #0
 80022fe:	60f8      	str	r0, [r7, #12]
 8002300:	60b9      	str	r1, [r7, #8]
 8002302:	607a      	str	r2, [r7, #4]
 8002304:	68fb      	ldr	r3, [r7, #12]
 8002306:	695b      	ldr	r3, [r3, #20]
 8002308:	68ba      	ldr	r2, [r7, #8]
 800230a:	0212      	lsls	r2, r2, #8
 800230c:	43d2      	mvns	r2, r2
 800230e:	401a      	ands	r2, r3
 8002310:	68bb      	ldr	r3, [r7, #8]
 8002312:	021b      	lsls	r3, r3, #8
 8002314:	6879      	ldr	r1, [r7, #4]
 8002316:	400b      	ands	r3, r1
 8002318:	4904      	ldr	r1, [pc, #16]	; (800232c <LL_ADC_SetChannelSamplingTime+0x34>)
 800231a:	400b      	ands	r3, r1
 800231c:	431a      	orrs	r2, r3
 800231e:	68fb      	ldr	r3, [r7, #12]
 8002320:	615a      	str	r2, [r3, #20]
 8002322:	46c0      	nop			; (mov r8, r8)
 8002324:	46bd      	mov	sp, r7
 8002326:	b004      	add	sp, #16
 8002328:	bd80      	pop	{r7, pc}
 800232a:	46c0      	nop			; (mov r8, r8)
 800232c:	07ffff00 	.word	0x07ffff00

08002330 <LL_ADC_EnableInternalRegulator>:
 8002330:	b580      	push	{r7, lr}
 8002332:	b082      	sub	sp, #8
 8002334:	af00      	add	r7, sp, #0
 8002336:	6078      	str	r0, [r7, #4]
 8002338:	687b      	ldr	r3, [r7, #4]
 800233a:	689b      	ldr	r3, [r3, #8]
 800233c:	4a05      	ldr	r2, [pc, #20]	; (8002354 <LL_ADC_EnableInternalRegulator+0x24>)
 800233e:	4013      	ands	r3, r2
 8002340:	2280      	movs	r2, #128	; 0x80
 8002342:	0552      	lsls	r2, r2, #21
 8002344:	431a      	orrs	r2, r3
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	609a      	str	r2, [r3, #8]
 800234a:	46c0      	nop			; (mov r8, r8)
 800234c:	46bd      	mov	sp, r7
 800234e:	b002      	add	sp, #8
 8002350:	bd80      	pop	{r7, pc}
 8002352:	46c0      	nop			; (mov r8, r8)
 8002354:	6fffffe8 	.word	0x6fffffe8

08002358 <LL_ADC_IsInternalRegulatorEnabled>:
 8002358:	b580      	push	{r7, lr}
 800235a:	b082      	sub	sp, #8
 800235c:	af00      	add	r7, sp, #0
 800235e:	6078      	str	r0, [r7, #4]
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	689a      	ldr	r2, [r3, #8]
 8002364:	2380      	movs	r3, #128	; 0x80
 8002366:	055b      	lsls	r3, r3, #21
 8002368:	401a      	ands	r2, r3
 800236a:	2380      	movs	r3, #128	; 0x80
 800236c:	055b      	lsls	r3, r3, #21
 800236e:	429a      	cmp	r2, r3
 8002370:	d101      	bne.n	8002376 <LL_ADC_IsInternalRegulatorEnabled+0x1e>
 8002372:	2301      	movs	r3, #1
 8002374:	e000      	b.n	8002378 <LL_ADC_IsInternalRegulatorEnabled+0x20>
 8002376:	2300      	movs	r3, #0
 8002378:	0018      	movs	r0, r3
 800237a:	46bd      	mov	sp, r7
 800237c:	b002      	add	sp, #8
 800237e:	bd80      	pop	{r7, pc}

08002380 <LL_ADC_Enable>:
 8002380:	b580      	push	{r7, lr}
 8002382:	b082      	sub	sp, #8
 8002384:	af00      	add	r7, sp, #0
 8002386:	6078      	str	r0, [r7, #4]
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	689b      	ldr	r3, [r3, #8]
 800238c:	4a04      	ldr	r2, [pc, #16]	; (80023a0 <LL_ADC_Enable+0x20>)
 800238e:	4013      	ands	r3, r2
 8002390:	2201      	movs	r2, #1
 8002392:	431a      	orrs	r2, r3
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	609a      	str	r2, [r3, #8]
 8002398:	46c0      	nop			; (mov r8, r8)
 800239a:	46bd      	mov	sp, r7
 800239c:	b002      	add	sp, #8
 800239e:	bd80      	pop	{r7, pc}
 80023a0:	7fffffe8 	.word	0x7fffffe8

080023a4 <LL_ADC_Disable>:
 80023a4:	b580      	push	{r7, lr}
 80023a6:	b082      	sub	sp, #8
 80023a8:	af00      	add	r7, sp, #0
 80023aa:	6078      	str	r0, [r7, #4]
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	689b      	ldr	r3, [r3, #8]
 80023b0:	4a04      	ldr	r2, [pc, #16]	; (80023c4 <LL_ADC_Disable+0x20>)
 80023b2:	4013      	ands	r3, r2
 80023b4:	2202      	movs	r2, #2
 80023b6:	431a      	orrs	r2, r3
 80023b8:	687b      	ldr	r3, [r7, #4]
 80023ba:	609a      	str	r2, [r3, #8]
 80023bc:	46c0      	nop			; (mov r8, r8)
 80023be:	46bd      	mov	sp, r7
 80023c0:	b002      	add	sp, #8
 80023c2:	bd80      	pop	{r7, pc}
 80023c4:	7fffffe8 	.word	0x7fffffe8

080023c8 <LL_ADC_IsEnabled>:
 80023c8:	b580      	push	{r7, lr}
 80023ca:	b082      	sub	sp, #8
 80023cc:	af00      	add	r7, sp, #0
 80023ce:	6078      	str	r0, [r7, #4]
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	689b      	ldr	r3, [r3, #8]
 80023d4:	2201      	movs	r2, #1
 80023d6:	4013      	ands	r3, r2
 80023d8:	2b01      	cmp	r3, #1
 80023da:	d101      	bne.n	80023e0 <LL_ADC_IsEnabled+0x18>
 80023dc:	2301      	movs	r3, #1
 80023de:	e000      	b.n	80023e2 <LL_ADC_IsEnabled+0x1a>
 80023e0:	2300      	movs	r3, #0
 80023e2:	0018      	movs	r0, r3
 80023e4:	46bd      	mov	sp, r7
 80023e6:	b002      	add	sp, #8
 80023e8:	bd80      	pop	{r7, pc}

080023ea <LL_ADC_IsDisableOngoing>:
 80023ea:	b580      	push	{r7, lr}
 80023ec:	b082      	sub	sp, #8
 80023ee:	af00      	add	r7, sp, #0
 80023f0:	6078      	str	r0, [r7, #4]
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	689b      	ldr	r3, [r3, #8]
 80023f6:	2202      	movs	r2, #2
 80023f8:	4013      	ands	r3, r2
 80023fa:	2b02      	cmp	r3, #2
 80023fc:	d101      	bne.n	8002402 <LL_ADC_IsDisableOngoing+0x18>
 80023fe:	2301      	movs	r3, #1
 8002400:	e000      	b.n	8002404 <LL_ADC_IsDisableOngoing+0x1a>
 8002402:	2300      	movs	r3, #0
 8002404:	0018      	movs	r0, r3
 8002406:	46bd      	mov	sp, r7
 8002408:	b002      	add	sp, #8
 800240a:	bd80      	pop	{r7, pc}

0800240c <LL_ADC_REG_StartConversion>:
 800240c:	b580      	push	{r7, lr}
 800240e:	b082      	sub	sp, #8
 8002410:	af00      	add	r7, sp, #0
 8002412:	6078      	str	r0, [r7, #4]
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	689b      	ldr	r3, [r3, #8]
 8002418:	4a04      	ldr	r2, [pc, #16]	; (800242c <LL_ADC_REG_StartConversion+0x20>)
 800241a:	4013      	ands	r3, r2
 800241c:	2204      	movs	r2, #4
 800241e:	431a      	orrs	r2, r3
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	609a      	str	r2, [r3, #8]
 8002424:	46c0      	nop			; (mov r8, r8)
 8002426:	46bd      	mov	sp, r7
 8002428:	b002      	add	sp, #8
 800242a:	bd80      	pop	{r7, pc}
 800242c:	7fffffe8 	.word	0x7fffffe8

08002430 <LL_ADC_REG_IsConversionOngoing>:
 8002430:	b580      	push	{r7, lr}
 8002432:	b082      	sub	sp, #8
 8002434:	af00      	add	r7, sp, #0
 8002436:	6078      	str	r0, [r7, #4]
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	689b      	ldr	r3, [r3, #8]
 800243c:	2204      	movs	r2, #4
 800243e:	4013      	ands	r3, r2
 8002440:	2b04      	cmp	r3, #4
 8002442:	d101      	bne.n	8002448 <LL_ADC_REG_IsConversionOngoing+0x18>
 8002444:	2301      	movs	r3, #1
 8002446:	e000      	b.n	800244a <LL_ADC_REG_IsConversionOngoing+0x1a>
 8002448:	2300      	movs	r3, #0
 800244a:	0018      	movs	r0, r3
 800244c:	46bd      	mov	sp, r7
 800244e:	b002      	add	sp, #8
 8002450:	bd80      	pop	{r7, pc}
	...

08002454 <HAL_ADC_Init>:
 8002454:	b580      	push	{r7, lr}
 8002456:	b088      	sub	sp, #32
 8002458:	af00      	add	r7, sp, #0
 800245a:	6078      	str	r0, [r7, #4]
 800245c:	231f      	movs	r3, #31
 800245e:	18fb      	adds	r3, r7, r3
 8002460:	2200      	movs	r2, #0
 8002462:	701a      	strb	r2, [r3, #0]
 8002464:	2300      	movs	r3, #0
 8002466:	61bb      	str	r3, [r7, #24]
 8002468:	2300      	movs	r3, #0
 800246a:	617b      	str	r3, [r7, #20]
 800246c:	2300      	movs	r3, #0
 800246e:	60fb      	str	r3, [r7, #12]
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	2b00      	cmp	r3, #0
 8002474:	d101      	bne.n	800247a <HAL_ADC_Init+0x26>
 8002476:	2301      	movs	r3, #1
 8002478:	e17f      	b.n	800277a <HAL_ADC_Init+0x326>
 800247a:	687b      	ldr	r3, [r7, #4]
 800247c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800247e:	2b00      	cmp	r3, #0
 8002480:	d10a      	bne.n	8002498 <HAL_ADC_Init+0x44>
 8002482:	687b      	ldr	r3, [r7, #4]
 8002484:	0018      	movs	r0, r3
 8002486:	f7ff fb9f 	bl	8001bc8 <HAL_ADC_MspInit>
 800248a:	687b      	ldr	r3, [r7, #4]
 800248c:	2200      	movs	r2, #0
 800248e:	65da      	str	r2, [r3, #92]	; 0x5c
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	2254      	movs	r2, #84	; 0x54
 8002494:	2100      	movs	r1, #0
 8002496:	5499      	strb	r1, [r3, r2]
 8002498:	687b      	ldr	r3, [r7, #4]
 800249a:	681b      	ldr	r3, [r3, #0]
 800249c:	0018      	movs	r0, r3
 800249e:	f7ff ff5b 	bl	8002358 <LL_ADC_IsInternalRegulatorEnabled>
 80024a2:	1e03      	subs	r3, r0, #0
 80024a4:	d115      	bne.n	80024d2 <HAL_ADC_Init+0x7e>
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	681b      	ldr	r3, [r3, #0]
 80024aa:	0018      	movs	r0, r3
 80024ac:	f7ff ff40 	bl	8002330 <LL_ADC_EnableInternalRegulator>
 80024b0:	4bb4      	ldr	r3, [pc, #720]	; (8002784 <HAL_ADC_Init+0x330>)
 80024b2:	681b      	ldr	r3, [r3, #0]
 80024b4:	49b4      	ldr	r1, [pc, #720]	; (8002788 <HAL_ADC_Init+0x334>)
 80024b6:	0018      	movs	r0, r3
 80024b8:	f7fd fe2c 	bl	8000114 <__udivsi3>
 80024bc:	0003      	movs	r3, r0
 80024be:	3301      	adds	r3, #1
 80024c0:	005b      	lsls	r3, r3, #1
 80024c2:	60fb      	str	r3, [r7, #12]
 80024c4:	e002      	b.n	80024cc <HAL_ADC_Init+0x78>
 80024c6:	68fb      	ldr	r3, [r7, #12]
 80024c8:	3b01      	subs	r3, #1
 80024ca:	60fb      	str	r3, [r7, #12]
 80024cc:	68fb      	ldr	r3, [r7, #12]
 80024ce:	2b00      	cmp	r3, #0
 80024d0:	d1f9      	bne.n	80024c6 <HAL_ADC_Init+0x72>
 80024d2:	687b      	ldr	r3, [r7, #4]
 80024d4:	681b      	ldr	r3, [r3, #0]
 80024d6:	0018      	movs	r0, r3
 80024d8:	f7ff ff3e 	bl	8002358 <LL_ADC_IsInternalRegulatorEnabled>
 80024dc:	1e03      	subs	r3, r0, #0
 80024de:	d10f      	bne.n	8002500 <HAL_ADC_Init+0xac>
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80024e4:	2210      	movs	r2, #16
 80024e6:	431a      	orrs	r2, r3
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	659a      	str	r2, [r3, #88]	; 0x58
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80024f0:	2201      	movs	r2, #1
 80024f2:	431a      	orrs	r2, r3
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	65da      	str	r2, [r3, #92]	; 0x5c
 80024f8:	231f      	movs	r3, #31
 80024fa:	18fb      	adds	r3, r7, r3
 80024fc:	2201      	movs	r2, #1
 80024fe:	701a      	strb	r2, [r3, #0]
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	681b      	ldr	r3, [r3, #0]
 8002504:	0018      	movs	r0, r3
 8002506:	f7ff ff93 	bl	8002430 <LL_ADC_REG_IsConversionOngoing>
 800250a:	0003      	movs	r3, r0
 800250c:	613b      	str	r3, [r7, #16]
 800250e:	687b      	ldr	r3, [r7, #4]
 8002510:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002512:	2210      	movs	r2, #16
 8002514:	4013      	ands	r3, r2
 8002516:	d000      	beq.n	800251a <HAL_ADC_Init+0xc6>
 8002518:	e122      	b.n	8002760 <HAL_ADC_Init+0x30c>
 800251a:	693b      	ldr	r3, [r7, #16]
 800251c:	2b00      	cmp	r3, #0
 800251e:	d000      	beq.n	8002522 <HAL_ADC_Init+0xce>
 8002520:	e11e      	b.n	8002760 <HAL_ADC_Init+0x30c>
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002526:	4a99      	ldr	r2, [pc, #612]	; (800278c <HAL_ADC_Init+0x338>)
 8002528:	4013      	ands	r3, r2
 800252a:	2202      	movs	r2, #2
 800252c:	431a      	orrs	r2, r3
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	659a      	str	r2, [r3, #88]	; 0x58
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	681b      	ldr	r3, [r3, #0]
 8002536:	0018      	movs	r0, r3
 8002538:	f7ff ff46 	bl	80023c8 <LL_ADC_IsEnabled>
 800253c:	1e03      	subs	r3, r0, #0
 800253e:	d000      	beq.n	8002542 <HAL_ADC_Init+0xee>
 8002540:	e0ad      	b.n	800269e <HAL_ADC_Init+0x24a>
 8002542:	687b      	ldr	r3, [r7, #4]
 8002544:	689a      	ldr	r2, [r3, #8]
 8002546:	687b      	ldr	r3, [r7, #4]
 8002548:	7e1b      	ldrb	r3, [r3, #24]
 800254a:	039b      	lsls	r3, r3, #14
 800254c:	431a      	orrs	r2, r3
 800254e:	687b      	ldr	r3, [r7, #4]
 8002550:	7e5b      	ldrb	r3, [r3, #25]
 8002552:	03db      	lsls	r3, r3, #15
 8002554:	431a      	orrs	r2, r3
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	7e9b      	ldrb	r3, [r3, #26]
 800255a:	035b      	lsls	r3, r3, #13
 800255c:	431a      	orrs	r2, r3
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002562:	2b00      	cmp	r3, #0
 8002564:	d002      	beq.n	800256c <HAL_ADC_Init+0x118>
 8002566:	2380      	movs	r3, #128	; 0x80
 8002568:	015b      	lsls	r3, r3, #5
 800256a:	e000      	b.n	800256e <HAL_ADC_Init+0x11a>
 800256c:	2300      	movs	r3, #0
 800256e:	431a      	orrs	r2, r3
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	68db      	ldr	r3, [r3, #12]
 8002574:	431a      	orrs	r2, r3
 8002576:	687b      	ldr	r3, [r7, #4]
 8002578:	691b      	ldr	r3, [r3, #16]
 800257a:	2b00      	cmp	r3, #0
 800257c:	da04      	bge.n	8002588 <HAL_ADC_Init+0x134>
 800257e:	687b      	ldr	r3, [r7, #4]
 8002580:	691b      	ldr	r3, [r3, #16]
 8002582:	005b      	lsls	r3, r3, #1
 8002584:	085b      	lsrs	r3, r3, #1
 8002586:	e001      	b.n	800258c <HAL_ADC_Init+0x138>
 8002588:	2380      	movs	r3, #128	; 0x80
 800258a:	039b      	lsls	r3, r3, #14
 800258c:	431a      	orrs	r2, r3
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	212c      	movs	r1, #44	; 0x2c
 8002592:	5c5b      	ldrb	r3, [r3, r1]
 8002594:	005b      	lsls	r3, r3, #1
 8002596:	4313      	orrs	r3, r2
 8002598:	69ba      	ldr	r2, [r7, #24]
 800259a:	4313      	orrs	r3, r2
 800259c:	61bb      	str	r3, [r7, #24]
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	2220      	movs	r2, #32
 80025a2:	5c9b      	ldrb	r3, [r3, r2]
 80025a4:	2b01      	cmp	r3, #1
 80025a6:	d115      	bne.n	80025d4 <HAL_ADC_Init+0x180>
 80025a8:	687b      	ldr	r3, [r7, #4]
 80025aa:	7e9b      	ldrb	r3, [r3, #26]
 80025ac:	2b00      	cmp	r3, #0
 80025ae:	d105      	bne.n	80025bc <HAL_ADC_Init+0x168>
 80025b0:	69bb      	ldr	r3, [r7, #24]
 80025b2:	2280      	movs	r2, #128	; 0x80
 80025b4:	0252      	lsls	r2, r2, #9
 80025b6:	4313      	orrs	r3, r2
 80025b8:	61bb      	str	r3, [r7, #24]
 80025ba:	e00b      	b.n	80025d4 <HAL_ADC_Init+0x180>
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80025c0:	2220      	movs	r2, #32
 80025c2:	431a      	orrs	r2, r3
 80025c4:	687b      	ldr	r3, [r7, #4]
 80025c6:	659a      	str	r2, [r3, #88]	; 0x58
 80025c8:	687b      	ldr	r3, [r7, #4]
 80025ca:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80025cc:	2201      	movs	r2, #1
 80025ce:	431a      	orrs	r2, r3
 80025d0:	687b      	ldr	r3, [r7, #4]
 80025d2:	65da      	str	r2, [r3, #92]	; 0x5c
 80025d4:	687b      	ldr	r3, [r7, #4]
 80025d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025d8:	2b00      	cmp	r3, #0
 80025da:	d00a      	beq.n	80025f2 <HAL_ADC_Init+0x19e>
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80025e0:	23e0      	movs	r3, #224	; 0xe0
 80025e2:	005b      	lsls	r3, r3, #1
 80025e4:	401a      	ands	r2, r3
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80025ea:	4313      	orrs	r3, r2
 80025ec:	69ba      	ldr	r2, [r7, #24]
 80025ee:	4313      	orrs	r3, r2
 80025f0:	61bb      	str	r3, [r7, #24]
 80025f2:	687b      	ldr	r3, [r7, #4]
 80025f4:	681b      	ldr	r3, [r3, #0]
 80025f6:	68db      	ldr	r3, [r3, #12]
 80025f8:	4a65      	ldr	r2, [pc, #404]	; (8002790 <HAL_ADC_Init+0x33c>)
 80025fa:	4013      	ands	r3, r2
 80025fc:	0019      	movs	r1, r3
 80025fe:	687b      	ldr	r3, [r7, #4]
 8002600:	681b      	ldr	r3, [r3, #0]
 8002602:	69ba      	ldr	r2, [r7, #24]
 8002604:	430a      	orrs	r2, r1
 8002606:	60da      	str	r2, [r3, #12]
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	685b      	ldr	r3, [r3, #4]
 800260c:	0f9b      	lsrs	r3, r3, #30
 800260e:	079a      	lsls	r2, r3, #30
 8002610:	687b      	ldr	r3, [r7, #4]
 8002612:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002614:	4313      	orrs	r3, r2
 8002616:	697a      	ldr	r2, [r7, #20]
 8002618:	4313      	orrs	r3, r2
 800261a:	617b      	str	r3, [r7, #20]
 800261c:	687b      	ldr	r3, [r7, #4]
 800261e:	223c      	movs	r2, #60	; 0x3c
 8002620:	5c9b      	ldrb	r3, [r3, r2]
 8002622:	2b01      	cmp	r3, #1
 8002624:	d111      	bne.n	800264a <HAL_ADC_Init+0x1f6>
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	685b      	ldr	r3, [r3, #4]
 800262a:	0f9b      	lsrs	r3, r3, #30
 800262c:	079a      	lsls	r2, r3, #30
 800262e:	687b      	ldr	r3, [r7, #4]
 8002630:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002632:	431a      	orrs	r2, r3
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002638:	431a      	orrs	r2, r3
 800263a:	687b      	ldr	r3, [r7, #4]
 800263c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800263e:	431a      	orrs	r2, r3
 8002640:	697b      	ldr	r3, [r7, #20]
 8002642:	4313      	orrs	r3, r2
 8002644:	2201      	movs	r2, #1
 8002646:	4313      	orrs	r3, r2
 8002648:	617b      	str	r3, [r7, #20]
 800264a:	687b      	ldr	r3, [r7, #4]
 800264c:	681b      	ldr	r3, [r3, #0]
 800264e:	691b      	ldr	r3, [r3, #16]
 8002650:	4a50      	ldr	r2, [pc, #320]	; (8002794 <HAL_ADC_Init+0x340>)
 8002652:	4013      	ands	r3, r2
 8002654:	0019      	movs	r1, r3
 8002656:	687b      	ldr	r3, [r7, #4]
 8002658:	681b      	ldr	r3, [r3, #0]
 800265a:	697a      	ldr	r2, [r7, #20]
 800265c:	430a      	orrs	r2, r1
 800265e:	611a      	str	r2, [r3, #16]
 8002660:	687b      	ldr	r3, [r7, #4]
 8002662:	685a      	ldr	r2, [r3, #4]
 8002664:	23c0      	movs	r3, #192	; 0xc0
 8002666:	061b      	lsls	r3, r3, #24
 8002668:	429a      	cmp	r2, r3
 800266a:	d018      	beq.n	800269e <HAL_ADC_Init+0x24a>
 800266c:	687b      	ldr	r3, [r7, #4]
 800266e:	685a      	ldr	r2, [r3, #4]
 8002670:	2380      	movs	r3, #128	; 0x80
 8002672:	05db      	lsls	r3, r3, #23
 8002674:	429a      	cmp	r2, r3
 8002676:	d012      	beq.n	800269e <HAL_ADC_Init+0x24a>
 8002678:	687b      	ldr	r3, [r7, #4]
 800267a:	685a      	ldr	r2, [r3, #4]
 800267c:	2380      	movs	r3, #128	; 0x80
 800267e:	061b      	lsls	r3, r3, #24
 8002680:	429a      	cmp	r2, r3
 8002682:	d00c      	beq.n	800269e <HAL_ADC_Init+0x24a>
 8002684:	4b44      	ldr	r3, [pc, #272]	; (8002798 <HAL_ADC_Init+0x344>)
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	4a44      	ldr	r2, [pc, #272]	; (800279c <HAL_ADC_Init+0x348>)
 800268a:	4013      	ands	r3, r2
 800268c:	0019      	movs	r1, r3
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	685a      	ldr	r2, [r3, #4]
 8002692:	23f0      	movs	r3, #240	; 0xf0
 8002694:	039b      	lsls	r3, r3, #14
 8002696:	401a      	ands	r2, r3
 8002698:	4b3f      	ldr	r3, [pc, #252]	; (8002798 <HAL_ADC_Init+0x344>)
 800269a:	430a      	orrs	r2, r1
 800269c:	601a      	str	r2, [r3, #0]
 800269e:	687b      	ldr	r3, [r7, #4]
 80026a0:	6818      	ldr	r0, [r3, #0]
 80026a2:	687b      	ldr	r3, [r7, #4]
 80026a4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80026a6:	001a      	movs	r2, r3
 80026a8:	2100      	movs	r1, #0
 80026aa:	f7ff fd9c 	bl	80021e6 <LL_ADC_SetSamplingTimeCommonChannels>
 80026ae:	687b      	ldr	r3, [r7, #4]
 80026b0:	6818      	ldr	r0, [r3, #0]
 80026b2:	687b      	ldr	r3, [r7, #4]
 80026b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80026b6:	493a      	ldr	r1, [pc, #232]	; (80027a0 <HAL_ADC_Init+0x34c>)
 80026b8:	001a      	movs	r2, r3
 80026ba:	f7ff fd94 	bl	80021e6 <LL_ADC_SetSamplingTimeCommonChannels>
 80026be:	687b      	ldr	r3, [r7, #4]
 80026c0:	691b      	ldr	r3, [r3, #16]
 80026c2:	2b00      	cmp	r3, #0
 80026c4:	d109      	bne.n	80026da <HAL_ADC_Init+0x286>
 80026c6:	687b      	ldr	r3, [r7, #4]
 80026c8:	681b      	ldr	r3, [r3, #0]
 80026ca:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	681b      	ldr	r3, [r3, #0]
 80026d0:	2110      	movs	r1, #16
 80026d2:	4249      	negs	r1, r1
 80026d4:	430a      	orrs	r2, r1
 80026d6:	629a      	str	r2, [r3, #40]	; 0x28
 80026d8:	e018      	b.n	800270c <HAL_ADC_Init+0x2b8>
 80026da:	687b      	ldr	r3, [r7, #4]
 80026dc:	691a      	ldr	r2, [r3, #16]
 80026de:	2380      	movs	r3, #128	; 0x80
 80026e0:	039b      	lsls	r3, r3, #14
 80026e2:	429a      	cmp	r2, r3
 80026e4:	d112      	bne.n	800270c <HAL_ADC_Init+0x2b8>
 80026e6:	687b      	ldr	r3, [r7, #4]
 80026e8:	681b      	ldr	r3, [r3, #0]
 80026ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80026ec:	687b      	ldr	r3, [r7, #4]
 80026ee:	69db      	ldr	r3, [r3, #28]
 80026f0:	3b01      	subs	r3, #1
 80026f2:	009b      	lsls	r3, r3, #2
 80026f4:	221c      	movs	r2, #28
 80026f6:	4013      	ands	r3, r2
 80026f8:	2210      	movs	r2, #16
 80026fa:	4252      	negs	r2, r2
 80026fc:	409a      	lsls	r2, r3
 80026fe:	0011      	movs	r1, r2
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002704:	687b      	ldr	r3, [r7, #4]
 8002706:	681b      	ldr	r3, [r3, #0]
 8002708:	430a      	orrs	r2, r1
 800270a:	629a      	str	r2, [r3, #40]	; 0x28
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	681b      	ldr	r3, [r3, #0]
 8002710:	2100      	movs	r1, #0
 8002712:	0018      	movs	r0, r3
 8002714:	f7ff fd84 	bl	8002220 <LL_ADC_GetSamplingTimeCommonChannels>
 8002718:	0002      	movs	r2, r0
 800271a:	687b      	ldr	r3, [r7, #4]
 800271c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800271e:	429a      	cmp	r2, r3
 8002720:	d10b      	bne.n	800273a <HAL_ADC_Init+0x2e6>
 8002722:	687b      	ldr	r3, [r7, #4]
 8002724:	2200      	movs	r2, #0
 8002726:	65da      	str	r2, [r3, #92]	; 0x5c
 8002728:	687b      	ldr	r3, [r7, #4]
 800272a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800272c:	2203      	movs	r2, #3
 800272e:	4393      	bics	r3, r2
 8002730:	2201      	movs	r2, #1
 8002732:	431a      	orrs	r2, r3
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	659a      	str	r2, [r3, #88]	; 0x58
 8002738:	e01c      	b.n	8002774 <HAL_ADC_Init+0x320>
 800273a:	687b      	ldr	r3, [r7, #4]
 800273c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800273e:	2212      	movs	r2, #18
 8002740:	4393      	bics	r3, r2
 8002742:	2210      	movs	r2, #16
 8002744:	431a      	orrs	r2, r3
 8002746:	687b      	ldr	r3, [r7, #4]
 8002748:	659a      	str	r2, [r3, #88]	; 0x58
 800274a:	687b      	ldr	r3, [r7, #4]
 800274c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800274e:	2201      	movs	r2, #1
 8002750:	431a      	orrs	r2, r3
 8002752:	687b      	ldr	r3, [r7, #4]
 8002754:	65da      	str	r2, [r3, #92]	; 0x5c
 8002756:	231f      	movs	r3, #31
 8002758:	18fb      	adds	r3, r7, r3
 800275a:	2201      	movs	r2, #1
 800275c:	701a      	strb	r2, [r3, #0]
 800275e:	e009      	b.n	8002774 <HAL_ADC_Init+0x320>
 8002760:	687b      	ldr	r3, [r7, #4]
 8002762:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002764:	2210      	movs	r2, #16
 8002766:	431a      	orrs	r2, r3
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	659a      	str	r2, [r3, #88]	; 0x58
 800276c:	231f      	movs	r3, #31
 800276e:	18fb      	adds	r3, r7, r3
 8002770:	2201      	movs	r2, #1
 8002772:	701a      	strb	r2, [r3, #0]
 8002774:	231f      	movs	r3, #31
 8002776:	18fb      	adds	r3, r7, r3
 8002778:	781b      	ldrb	r3, [r3, #0]
 800277a:	0018      	movs	r0, r3
 800277c:	46bd      	mov	sp, r7
 800277e:	b008      	add	sp, #32
 8002780:	bd80      	pop	{r7, pc}
 8002782:	46c0      	nop			; (mov r8, r8)
 8002784:	20000000 	.word	0x20000000
 8002788:	00030d40 	.word	0x00030d40
 800278c:	fffffefd 	.word	0xfffffefd
 8002790:	fffe0201 	.word	0xfffe0201
 8002794:	1ffffc02 	.word	0x1ffffc02
 8002798:	40012708 	.word	0x40012708
 800279c:	ffc3ffff 	.word	0xffc3ffff
 80027a0:	07ffff04 	.word	0x07ffff04

080027a4 <HAL_ADC_Start_DMA>:
 80027a4:	b5b0      	push	{r4, r5, r7, lr}
 80027a6:	b086      	sub	sp, #24
 80027a8:	af00      	add	r7, sp, #0
 80027aa:	60f8      	str	r0, [r7, #12]
 80027ac:	60b9      	str	r1, [r7, #8]
 80027ae:	607a      	str	r2, [r7, #4]
 80027b0:	68fb      	ldr	r3, [r7, #12]
 80027b2:	681b      	ldr	r3, [r3, #0]
 80027b4:	0018      	movs	r0, r3
 80027b6:	f7ff fe3b 	bl	8002430 <LL_ADC_REG_IsConversionOngoing>
 80027ba:	1e03      	subs	r3, r0, #0
 80027bc:	d16c      	bne.n	8002898 <HAL_ADC_Start_DMA+0xf4>
 80027be:	68fb      	ldr	r3, [r7, #12]
 80027c0:	2254      	movs	r2, #84	; 0x54
 80027c2:	5c9b      	ldrb	r3, [r3, r2]
 80027c4:	2b01      	cmp	r3, #1
 80027c6:	d101      	bne.n	80027cc <HAL_ADC_Start_DMA+0x28>
 80027c8:	2302      	movs	r3, #2
 80027ca:	e06c      	b.n	80028a6 <HAL_ADC_Start_DMA+0x102>
 80027cc:	68fb      	ldr	r3, [r7, #12]
 80027ce:	2254      	movs	r2, #84	; 0x54
 80027d0:	2101      	movs	r1, #1
 80027d2:	5499      	strb	r1, [r3, r2]
 80027d4:	68fb      	ldr	r3, [r7, #12]
 80027d6:	681b      	ldr	r3, [r3, #0]
 80027d8:	68db      	ldr	r3, [r3, #12]
 80027da:	2201      	movs	r2, #1
 80027dc:	4013      	ands	r3, r2
 80027de:	d113      	bne.n	8002808 <HAL_ADC_Start_DMA+0x64>
 80027e0:	68fb      	ldr	r3, [r7, #12]
 80027e2:	681b      	ldr	r3, [r3, #0]
 80027e4:	0018      	movs	r0, r3
 80027e6:	f7ff fdef 	bl	80023c8 <LL_ADC_IsEnabled>
 80027ea:	1e03      	subs	r3, r0, #0
 80027ec:	d004      	beq.n	80027f8 <HAL_ADC_Start_DMA+0x54>
 80027ee:	68fb      	ldr	r3, [r7, #12]
 80027f0:	681b      	ldr	r3, [r3, #0]
 80027f2:	0018      	movs	r0, r3
 80027f4:	f7ff fdd6 	bl	80023a4 <LL_ADC_Disable>
 80027f8:	68fb      	ldr	r3, [r7, #12]
 80027fa:	681b      	ldr	r3, [r3, #0]
 80027fc:	68da      	ldr	r2, [r3, #12]
 80027fe:	68fb      	ldr	r3, [r7, #12]
 8002800:	681b      	ldr	r3, [r3, #0]
 8002802:	2101      	movs	r1, #1
 8002804:	430a      	orrs	r2, r1
 8002806:	60da      	str	r2, [r3, #12]
 8002808:	2517      	movs	r5, #23
 800280a:	197c      	adds	r4, r7, r5
 800280c:	68fb      	ldr	r3, [r7, #12]
 800280e:	0018      	movs	r0, r3
 8002810:	f000 fa3e 	bl	8002c90 <ADC_Enable>
 8002814:	0003      	movs	r3, r0
 8002816:	7023      	strb	r3, [r4, #0]
 8002818:	002c      	movs	r4, r5
 800281a:	193b      	adds	r3, r7, r4
 800281c:	781b      	ldrb	r3, [r3, #0]
 800281e:	2b00      	cmp	r3, #0
 8002820:	d13e      	bne.n	80028a0 <HAL_ADC_Start_DMA+0xfc>
 8002822:	68fb      	ldr	r3, [r7, #12]
 8002824:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002826:	4a22      	ldr	r2, [pc, #136]	; (80028b0 <HAL_ADC_Start_DMA+0x10c>)
 8002828:	4013      	ands	r3, r2
 800282a:	2280      	movs	r2, #128	; 0x80
 800282c:	0052      	lsls	r2, r2, #1
 800282e:	431a      	orrs	r2, r3
 8002830:	68fb      	ldr	r3, [r7, #12]
 8002832:	659a      	str	r2, [r3, #88]	; 0x58
 8002834:	68fb      	ldr	r3, [r7, #12]
 8002836:	2200      	movs	r2, #0
 8002838:	65da      	str	r2, [r3, #92]	; 0x5c
 800283a:	68fb      	ldr	r3, [r7, #12]
 800283c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800283e:	4a1d      	ldr	r2, [pc, #116]	; (80028b4 <HAL_ADC_Start_DMA+0x110>)
 8002840:	62da      	str	r2, [r3, #44]	; 0x2c
 8002842:	68fb      	ldr	r3, [r7, #12]
 8002844:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002846:	4a1c      	ldr	r2, [pc, #112]	; (80028b8 <HAL_ADC_Start_DMA+0x114>)
 8002848:	631a      	str	r2, [r3, #48]	; 0x30
 800284a:	68fb      	ldr	r3, [r7, #12]
 800284c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800284e:	4a1b      	ldr	r2, [pc, #108]	; (80028bc <HAL_ADC_Start_DMA+0x118>)
 8002850:	635a      	str	r2, [r3, #52]	; 0x34
 8002852:	68fb      	ldr	r3, [r7, #12]
 8002854:	681b      	ldr	r3, [r3, #0]
 8002856:	221c      	movs	r2, #28
 8002858:	601a      	str	r2, [r3, #0]
 800285a:	68fb      	ldr	r3, [r7, #12]
 800285c:	2254      	movs	r2, #84	; 0x54
 800285e:	2100      	movs	r1, #0
 8002860:	5499      	strb	r1, [r3, r2]
 8002862:	68fb      	ldr	r3, [r7, #12]
 8002864:	681b      	ldr	r3, [r3, #0]
 8002866:	685a      	ldr	r2, [r3, #4]
 8002868:	68fb      	ldr	r3, [r7, #12]
 800286a:	681b      	ldr	r3, [r3, #0]
 800286c:	2110      	movs	r1, #16
 800286e:	430a      	orrs	r2, r1
 8002870:	605a      	str	r2, [r3, #4]
 8002872:	68fb      	ldr	r3, [r7, #12]
 8002874:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8002876:	68fb      	ldr	r3, [r7, #12]
 8002878:	681b      	ldr	r3, [r3, #0]
 800287a:	3340      	adds	r3, #64	; 0x40
 800287c:	0019      	movs	r1, r3
 800287e:	68ba      	ldr	r2, [r7, #8]
 8002880:	193c      	adds	r4, r7, r4
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	f000 fe34 	bl	80034f0 <HAL_DMA_Start_IT>
 8002888:	0003      	movs	r3, r0
 800288a:	7023      	strb	r3, [r4, #0]
 800288c:	68fb      	ldr	r3, [r7, #12]
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	0018      	movs	r0, r3
 8002892:	f7ff fdbb 	bl	800240c <LL_ADC_REG_StartConversion>
 8002896:	e003      	b.n	80028a0 <HAL_ADC_Start_DMA+0xfc>
 8002898:	2317      	movs	r3, #23
 800289a:	18fb      	adds	r3, r7, r3
 800289c:	2202      	movs	r2, #2
 800289e:	701a      	strb	r2, [r3, #0]
 80028a0:	2317      	movs	r3, #23
 80028a2:	18fb      	adds	r3, r7, r3
 80028a4:	781b      	ldrb	r3, [r3, #0]
 80028a6:	0018      	movs	r0, r3
 80028a8:	46bd      	mov	sp, r7
 80028aa:	b006      	add	sp, #24
 80028ac:	bdb0      	pop	{r4, r5, r7, pc}
 80028ae:	46c0      	nop			; (mov r8, r8)
 80028b0:	fffff0fe 	.word	0xfffff0fe
 80028b4:	08002e59 	.word	0x08002e59
 80028b8:	08002f21 	.word	0x08002f21
 80028bc:	08002f3f 	.word	0x08002f3f

080028c0 <HAL_ADC_ConvHalfCpltCallback>:
 80028c0:	b580      	push	{r7, lr}
 80028c2:	b082      	sub	sp, #8
 80028c4:	af00      	add	r7, sp, #0
 80028c6:	6078      	str	r0, [r7, #4]
 80028c8:	46c0      	nop			; (mov r8, r8)
 80028ca:	46bd      	mov	sp, r7
 80028cc:	b002      	add	sp, #8
 80028ce:	bd80      	pop	{r7, pc}

080028d0 <HAL_ADC_ErrorCallback>:
 80028d0:	b580      	push	{r7, lr}
 80028d2:	b082      	sub	sp, #8
 80028d4:	af00      	add	r7, sp, #0
 80028d6:	6078      	str	r0, [r7, #4]
 80028d8:	46c0      	nop			; (mov r8, r8)
 80028da:	46bd      	mov	sp, r7
 80028dc:	b002      	add	sp, #8
 80028de:	bd80      	pop	{r7, pc}

080028e0 <HAL_ADC_ConfigChannel>:
 80028e0:	b580      	push	{r7, lr}
 80028e2:	b086      	sub	sp, #24
 80028e4:	af00      	add	r7, sp, #0
 80028e6:	6078      	str	r0, [r7, #4]
 80028e8:	6039      	str	r1, [r7, #0]
 80028ea:	2317      	movs	r3, #23
 80028ec:	18fb      	adds	r3, r7, r3
 80028ee:	2200      	movs	r2, #0
 80028f0:	701a      	strb	r2, [r3, #0]
 80028f2:	2300      	movs	r3, #0
 80028f4:	60fb      	str	r3, [r7, #12]
 80028f6:	687b      	ldr	r3, [r7, #4]
 80028f8:	2254      	movs	r2, #84	; 0x54
 80028fa:	5c9b      	ldrb	r3, [r3, r2]
 80028fc:	2b01      	cmp	r3, #1
 80028fe:	d101      	bne.n	8002904 <HAL_ADC_ConfigChannel+0x24>
 8002900:	2302      	movs	r3, #2
 8002902:	e1c0      	b.n	8002c86 <HAL_ADC_ConfigChannel+0x3a6>
 8002904:	687b      	ldr	r3, [r7, #4]
 8002906:	2254      	movs	r2, #84	; 0x54
 8002908:	2101      	movs	r1, #1
 800290a:	5499      	strb	r1, [r3, r2]
 800290c:	687b      	ldr	r3, [r7, #4]
 800290e:	681b      	ldr	r3, [r3, #0]
 8002910:	0018      	movs	r0, r3
 8002912:	f7ff fd8d 	bl	8002430 <LL_ADC_REG_IsConversionOngoing>
 8002916:	1e03      	subs	r3, r0, #0
 8002918:	d000      	beq.n	800291c <HAL_ADC_ConfigChannel+0x3c>
 800291a:	e1a3      	b.n	8002c64 <HAL_ADC_ConfigChannel+0x384>
 800291c:	683b      	ldr	r3, [r7, #0]
 800291e:	685b      	ldr	r3, [r3, #4]
 8002920:	2b02      	cmp	r3, #2
 8002922:	d100      	bne.n	8002926 <HAL_ADC_ConfigChannel+0x46>
 8002924:	e143      	b.n	8002bae <HAL_ADC_ConfigChannel+0x2ce>
 8002926:	687b      	ldr	r3, [r7, #4]
 8002928:	691a      	ldr	r2, [r3, #16]
 800292a:	2380      	movs	r3, #128	; 0x80
 800292c:	061b      	lsls	r3, r3, #24
 800292e:	429a      	cmp	r2, r3
 8002930:	d004      	beq.n	800293c <HAL_ADC_ConfigChannel+0x5c>
 8002932:	687b      	ldr	r3, [r7, #4]
 8002934:	691b      	ldr	r3, [r3, #16]
 8002936:	4ac1      	ldr	r2, [pc, #772]	; (8002c3c <HAL_ADC_ConfigChannel+0x35c>)
 8002938:	4293      	cmp	r3, r2
 800293a:	d108      	bne.n	800294e <HAL_ADC_ConfigChannel+0x6e>
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	681a      	ldr	r2, [r3, #0]
 8002940:	683b      	ldr	r3, [r7, #0]
 8002942:	681b      	ldr	r3, [r3, #0]
 8002944:	0019      	movs	r1, r3
 8002946:	0010      	movs	r0, r2
 8002948:	f7ff fcb2 	bl	80022b0 <LL_ADC_REG_SetSequencerChAdd>
 800294c:	e0c9      	b.n	8002ae2 <HAL_ADC_ConfigChannel+0x202>
 800294e:	687b      	ldr	r3, [r7, #4]
 8002950:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002952:	683b      	ldr	r3, [r7, #0]
 8002954:	685b      	ldr	r3, [r3, #4]
 8002956:	211f      	movs	r1, #31
 8002958:	400b      	ands	r3, r1
 800295a:	210f      	movs	r1, #15
 800295c:	4099      	lsls	r1, r3
 800295e:	000b      	movs	r3, r1
 8002960:	43db      	mvns	r3, r3
 8002962:	4013      	ands	r3, r2
 8002964:	0019      	movs	r1, r3
 8002966:	683b      	ldr	r3, [r7, #0]
 8002968:	681b      	ldr	r3, [r3, #0]
 800296a:	035b      	lsls	r3, r3, #13
 800296c:	0b5b      	lsrs	r3, r3, #13
 800296e:	d105      	bne.n	800297c <HAL_ADC_ConfigChannel+0x9c>
 8002970:	683b      	ldr	r3, [r7, #0]
 8002972:	681b      	ldr	r3, [r3, #0]
 8002974:	0e9b      	lsrs	r3, r3, #26
 8002976:	221f      	movs	r2, #31
 8002978:	4013      	ands	r3, r2
 800297a:	e098      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 800297c:	683b      	ldr	r3, [r7, #0]
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	2201      	movs	r2, #1
 8002982:	4013      	ands	r3, r2
 8002984:	d000      	beq.n	8002988 <HAL_ADC_ConfigChannel+0xa8>
 8002986:	e091      	b.n	8002aac <HAL_ADC_ConfigChannel+0x1cc>
 8002988:	683b      	ldr	r3, [r7, #0]
 800298a:	681b      	ldr	r3, [r3, #0]
 800298c:	2202      	movs	r2, #2
 800298e:	4013      	ands	r3, r2
 8002990:	d000      	beq.n	8002994 <HAL_ADC_ConfigChannel+0xb4>
 8002992:	e089      	b.n	8002aa8 <HAL_ADC_ConfigChannel+0x1c8>
 8002994:	683b      	ldr	r3, [r7, #0]
 8002996:	681b      	ldr	r3, [r3, #0]
 8002998:	2204      	movs	r2, #4
 800299a:	4013      	ands	r3, r2
 800299c:	d000      	beq.n	80029a0 <HAL_ADC_ConfigChannel+0xc0>
 800299e:	e081      	b.n	8002aa4 <HAL_ADC_ConfigChannel+0x1c4>
 80029a0:	683b      	ldr	r3, [r7, #0]
 80029a2:	681b      	ldr	r3, [r3, #0]
 80029a4:	2208      	movs	r2, #8
 80029a6:	4013      	ands	r3, r2
 80029a8:	d000      	beq.n	80029ac <HAL_ADC_ConfigChannel+0xcc>
 80029aa:	e079      	b.n	8002aa0 <HAL_ADC_ConfigChannel+0x1c0>
 80029ac:	683b      	ldr	r3, [r7, #0]
 80029ae:	681b      	ldr	r3, [r3, #0]
 80029b0:	2210      	movs	r2, #16
 80029b2:	4013      	ands	r3, r2
 80029b4:	d000      	beq.n	80029b8 <HAL_ADC_ConfigChannel+0xd8>
 80029b6:	e071      	b.n	8002a9c <HAL_ADC_ConfigChannel+0x1bc>
 80029b8:	683b      	ldr	r3, [r7, #0]
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	2220      	movs	r2, #32
 80029be:	4013      	ands	r3, r2
 80029c0:	d000      	beq.n	80029c4 <HAL_ADC_ConfigChannel+0xe4>
 80029c2:	e069      	b.n	8002a98 <HAL_ADC_ConfigChannel+0x1b8>
 80029c4:	683b      	ldr	r3, [r7, #0]
 80029c6:	681b      	ldr	r3, [r3, #0]
 80029c8:	2240      	movs	r2, #64	; 0x40
 80029ca:	4013      	ands	r3, r2
 80029cc:	d000      	beq.n	80029d0 <HAL_ADC_ConfigChannel+0xf0>
 80029ce:	e061      	b.n	8002a94 <HAL_ADC_ConfigChannel+0x1b4>
 80029d0:	683b      	ldr	r3, [r7, #0]
 80029d2:	681b      	ldr	r3, [r3, #0]
 80029d4:	2280      	movs	r2, #128	; 0x80
 80029d6:	4013      	ands	r3, r2
 80029d8:	d000      	beq.n	80029dc <HAL_ADC_ConfigChannel+0xfc>
 80029da:	e059      	b.n	8002a90 <HAL_ADC_ConfigChannel+0x1b0>
 80029dc:	683b      	ldr	r3, [r7, #0]
 80029de:	681a      	ldr	r2, [r3, #0]
 80029e0:	2380      	movs	r3, #128	; 0x80
 80029e2:	005b      	lsls	r3, r3, #1
 80029e4:	4013      	ands	r3, r2
 80029e6:	d151      	bne.n	8002a8c <HAL_ADC_ConfigChannel+0x1ac>
 80029e8:	683b      	ldr	r3, [r7, #0]
 80029ea:	681a      	ldr	r2, [r3, #0]
 80029ec:	2380      	movs	r3, #128	; 0x80
 80029ee:	009b      	lsls	r3, r3, #2
 80029f0:	4013      	ands	r3, r2
 80029f2:	d149      	bne.n	8002a88 <HAL_ADC_ConfigChannel+0x1a8>
 80029f4:	683b      	ldr	r3, [r7, #0]
 80029f6:	681a      	ldr	r2, [r3, #0]
 80029f8:	2380      	movs	r3, #128	; 0x80
 80029fa:	00db      	lsls	r3, r3, #3
 80029fc:	4013      	ands	r3, r2
 80029fe:	d141      	bne.n	8002a84 <HAL_ADC_ConfigChannel+0x1a4>
 8002a00:	683b      	ldr	r3, [r7, #0]
 8002a02:	681a      	ldr	r2, [r3, #0]
 8002a04:	2380      	movs	r3, #128	; 0x80
 8002a06:	011b      	lsls	r3, r3, #4
 8002a08:	4013      	ands	r3, r2
 8002a0a:	d139      	bne.n	8002a80 <HAL_ADC_ConfigChannel+0x1a0>
 8002a0c:	683b      	ldr	r3, [r7, #0]
 8002a0e:	681a      	ldr	r2, [r3, #0]
 8002a10:	2380      	movs	r3, #128	; 0x80
 8002a12:	015b      	lsls	r3, r3, #5
 8002a14:	4013      	ands	r3, r2
 8002a16:	d131      	bne.n	8002a7c <HAL_ADC_ConfigChannel+0x19c>
 8002a18:	683b      	ldr	r3, [r7, #0]
 8002a1a:	681a      	ldr	r2, [r3, #0]
 8002a1c:	2380      	movs	r3, #128	; 0x80
 8002a1e:	019b      	lsls	r3, r3, #6
 8002a20:	4013      	ands	r3, r2
 8002a22:	d129      	bne.n	8002a78 <HAL_ADC_ConfigChannel+0x198>
 8002a24:	683b      	ldr	r3, [r7, #0]
 8002a26:	681a      	ldr	r2, [r3, #0]
 8002a28:	2380      	movs	r3, #128	; 0x80
 8002a2a:	01db      	lsls	r3, r3, #7
 8002a2c:	4013      	ands	r3, r2
 8002a2e:	d121      	bne.n	8002a74 <HAL_ADC_ConfigChannel+0x194>
 8002a30:	683b      	ldr	r3, [r7, #0]
 8002a32:	681a      	ldr	r2, [r3, #0]
 8002a34:	2380      	movs	r3, #128	; 0x80
 8002a36:	021b      	lsls	r3, r3, #8
 8002a38:	4013      	ands	r3, r2
 8002a3a:	d119      	bne.n	8002a70 <HAL_ADC_ConfigChannel+0x190>
 8002a3c:	683b      	ldr	r3, [r7, #0]
 8002a3e:	681a      	ldr	r2, [r3, #0]
 8002a40:	2380      	movs	r3, #128	; 0x80
 8002a42:	025b      	lsls	r3, r3, #9
 8002a44:	4013      	ands	r3, r2
 8002a46:	d111      	bne.n	8002a6c <HAL_ADC_ConfigChannel+0x18c>
 8002a48:	683b      	ldr	r3, [r7, #0]
 8002a4a:	681a      	ldr	r2, [r3, #0]
 8002a4c:	2380      	movs	r3, #128	; 0x80
 8002a4e:	029b      	lsls	r3, r3, #10
 8002a50:	4013      	ands	r3, r2
 8002a52:	d109      	bne.n	8002a68 <HAL_ADC_ConfigChannel+0x188>
 8002a54:	683b      	ldr	r3, [r7, #0]
 8002a56:	681a      	ldr	r2, [r3, #0]
 8002a58:	2380      	movs	r3, #128	; 0x80
 8002a5a:	02db      	lsls	r3, r3, #11
 8002a5c:	4013      	ands	r3, r2
 8002a5e:	d001      	beq.n	8002a64 <HAL_ADC_ConfigChannel+0x184>
 8002a60:	2312      	movs	r3, #18
 8002a62:	e024      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002a64:	2300      	movs	r3, #0
 8002a66:	e022      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002a68:	2311      	movs	r3, #17
 8002a6a:	e020      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002a6c:	2310      	movs	r3, #16
 8002a6e:	e01e      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002a70:	230f      	movs	r3, #15
 8002a72:	e01c      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002a74:	230e      	movs	r3, #14
 8002a76:	e01a      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002a78:	230d      	movs	r3, #13
 8002a7a:	e018      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002a7c:	230c      	movs	r3, #12
 8002a7e:	e016      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002a80:	230b      	movs	r3, #11
 8002a82:	e014      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002a84:	230a      	movs	r3, #10
 8002a86:	e012      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002a88:	2309      	movs	r3, #9
 8002a8a:	e010      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002a8c:	2308      	movs	r3, #8
 8002a8e:	e00e      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002a90:	2307      	movs	r3, #7
 8002a92:	e00c      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002a94:	2306      	movs	r3, #6
 8002a96:	e00a      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002a98:	2305      	movs	r3, #5
 8002a9a:	e008      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002a9c:	2304      	movs	r3, #4
 8002a9e:	e006      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002aa0:	2303      	movs	r3, #3
 8002aa2:	e004      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002aa4:	2302      	movs	r3, #2
 8002aa6:	e002      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002aa8:	2301      	movs	r3, #1
 8002aaa:	e000      	b.n	8002aae <HAL_ADC_ConfigChannel+0x1ce>
 8002aac:	2300      	movs	r3, #0
 8002aae:	683a      	ldr	r2, [r7, #0]
 8002ab0:	6852      	ldr	r2, [r2, #4]
 8002ab2:	201f      	movs	r0, #31
 8002ab4:	4002      	ands	r2, r0
 8002ab6:	4093      	lsls	r3, r2
 8002ab8:	000a      	movs	r2, r1
 8002aba:	431a      	orrs	r2, r3
 8002abc:	687b      	ldr	r3, [r7, #4]
 8002abe:	661a      	str	r2, [r3, #96]	; 0x60
 8002ac0:	683b      	ldr	r3, [r7, #0]
 8002ac2:	685b      	ldr	r3, [r3, #4]
 8002ac4:	089b      	lsrs	r3, r3, #2
 8002ac6:	1c5a      	adds	r2, r3, #1
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	69db      	ldr	r3, [r3, #28]
 8002acc:	429a      	cmp	r2, r3
 8002ace:	d808      	bhi.n	8002ae2 <HAL_ADC_ConfigChannel+0x202>
 8002ad0:	687b      	ldr	r3, [r7, #4]
 8002ad2:	6818      	ldr	r0, [r3, #0]
 8002ad4:	683b      	ldr	r3, [r7, #0]
 8002ad6:	6859      	ldr	r1, [r3, #4]
 8002ad8:	683b      	ldr	r3, [r7, #0]
 8002ada:	681b      	ldr	r3, [r3, #0]
 8002adc:	001a      	movs	r2, r3
 8002ade:	f7ff fbc7 	bl	8002270 <LL_ADC_REG_SetSequencerRanks>
 8002ae2:	687b      	ldr	r3, [r7, #4]
 8002ae4:	6818      	ldr	r0, [r3, #0]
 8002ae6:	683b      	ldr	r3, [r7, #0]
 8002ae8:	6819      	ldr	r1, [r3, #0]
 8002aea:	683b      	ldr	r3, [r7, #0]
 8002aec:	689b      	ldr	r3, [r3, #8]
 8002aee:	001a      	movs	r2, r3
 8002af0:	f7ff fc02 	bl	80022f8 <LL_ADC_SetChannelSamplingTime>
 8002af4:	683b      	ldr	r3, [r7, #0]
 8002af6:	681b      	ldr	r3, [r3, #0]
 8002af8:	2b00      	cmp	r3, #0
 8002afa:	db00      	blt.n	8002afe <HAL_ADC_ConfigChannel+0x21e>
 8002afc:	e0bc      	b.n	8002c78 <HAL_ADC_ConfigChannel+0x398>
 8002afe:	4b50      	ldr	r3, [pc, #320]	; (8002c40 <HAL_ADC_ConfigChannel+0x360>)
 8002b00:	0018      	movs	r0, r3
 8002b02:	f7ff fb63 	bl	80021cc <LL_ADC_GetCommonPathInternalCh>
 8002b06:	0003      	movs	r3, r0
 8002b08:	613b      	str	r3, [r7, #16]
 8002b0a:	683b      	ldr	r3, [r7, #0]
 8002b0c:	681b      	ldr	r3, [r3, #0]
 8002b0e:	4a4d      	ldr	r2, [pc, #308]	; (8002c44 <HAL_ADC_ConfigChannel+0x364>)
 8002b10:	4293      	cmp	r3, r2
 8002b12:	d122      	bne.n	8002b5a <HAL_ADC_ConfigChannel+0x27a>
 8002b14:	693a      	ldr	r2, [r7, #16]
 8002b16:	2380      	movs	r3, #128	; 0x80
 8002b18:	041b      	lsls	r3, r3, #16
 8002b1a:	4013      	ands	r3, r2
 8002b1c:	d11d      	bne.n	8002b5a <HAL_ADC_ConfigChannel+0x27a>
 8002b1e:	693b      	ldr	r3, [r7, #16]
 8002b20:	2280      	movs	r2, #128	; 0x80
 8002b22:	0412      	lsls	r2, r2, #16
 8002b24:	4313      	orrs	r3, r2
 8002b26:	4a46      	ldr	r2, [pc, #280]	; (8002c40 <HAL_ADC_ConfigChannel+0x360>)
 8002b28:	0019      	movs	r1, r3
 8002b2a:	0010      	movs	r0, r2
 8002b2c:	f7ff fb3a 	bl	80021a4 <LL_ADC_SetCommonPathInternalCh>
 8002b30:	4b45      	ldr	r3, [pc, #276]	; (8002c48 <HAL_ADC_ConfigChannel+0x368>)
 8002b32:	681b      	ldr	r3, [r3, #0]
 8002b34:	4945      	ldr	r1, [pc, #276]	; (8002c4c <HAL_ADC_ConfigChannel+0x36c>)
 8002b36:	0018      	movs	r0, r3
 8002b38:	f7fd faec 	bl	8000114 <__udivsi3>
 8002b3c:	0003      	movs	r3, r0
 8002b3e:	1c5a      	adds	r2, r3, #1
 8002b40:	0013      	movs	r3, r2
 8002b42:	005b      	lsls	r3, r3, #1
 8002b44:	189b      	adds	r3, r3, r2
 8002b46:	009b      	lsls	r3, r3, #2
 8002b48:	60fb      	str	r3, [r7, #12]
 8002b4a:	e002      	b.n	8002b52 <HAL_ADC_ConfigChannel+0x272>
 8002b4c:	68fb      	ldr	r3, [r7, #12]
 8002b4e:	3b01      	subs	r3, #1
 8002b50:	60fb      	str	r3, [r7, #12]
 8002b52:	68fb      	ldr	r3, [r7, #12]
 8002b54:	2b00      	cmp	r3, #0
 8002b56:	d1f9      	bne.n	8002b4c <HAL_ADC_ConfigChannel+0x26c>
 8002b58:	e08e      	b.n	8002c78 <HAL_ADC_ConfigChannel+0x398>
 8002b5a:	683b      	ldr	r3, [r7, #0]
 8002b5c:	681b      	ldr	r3, [r3, #0]
 8002b5e:	4a3c      	ldr	r2, [pc, #240]	; (8002c50 <HAL_ADC_ConfigChannel+0x370>)
 8002b60:	4293      	cmp	r3, r2
 8002b62:	d10e      	bne.n	8002b82 <HAL_ADC_ConfigChannel+0x2a2>
 8002b64:	693a      	ldr	r2, [r7, #16]
 8002b66:	2380      	movs	r3, #128	; 0x80
 8002b68:	045b      	lsls	r3, r3, #17
 8002b6a:	4013      	ands	r3, r2
 8002b6c:	d109      	bne.n	8002b82 <HAL_ADC_ConfigChannel+0x2a2>
 8002b6e:	693b      	ldr	r3, [r7, #16]
 8002b70:	2280      	movs	r2, #128	; 0x80
 8002b72:	0452      	lsls	r2, r2, #17
 8002b74:	4313      	orrs	r3, r2
 8002b76:	4a32      	ldr	r2, [pc, #200]	; (8002c40 <HAL_ADC_ConfigChannel+0x360>)
 8002b78:	0019      	movs	r1, r3
 8002b7a:	0010      	movs	r0, r2
 8002b7c:	f7ff fb12 	bl	80021a4 <LL_ADC_SetCommonPathInternalCh>
 8002b80:	e07a      	b.n	8002c78 <HAL_ADC_ConfigChannel+0x398>
 8002b82:	683b      	ldr	r3, [r7, #0]
 8002b84:	681b      	ldr	r3, [r3, #0]
 8002b86:	4a33      	ldr	r2, [pc, #204]	; (8002c54 <HAL_ADC_ConfigChannel+0x374>)
 8002b88:	4293      	cmp	r3, r2
 8002b8a:	d000      	beq.n	8002b8e <HAL_ADC_ConfigChannel+0x2ae>
 8002b8c:	e074      	b.n	8002c78 <HAL_ADC_ConfigChannel+0x398>
 8002b8e:	693a      	ldr	r2, [r7, #16]
 8002b90:	2380      	movs	r3, #128	; 0x80
 8002b92:	03db      	lsls	r3, r3, #15
 8002b94:	4013      	ands	r3, r2
 8002b96:	d000      	beq.n	8002b9a <HAL_ADC_ConfigChannel+0x2ba>
 8002b98:	e06e      	b.n	8002c78 <HAL_ADC_ConfigChannel+0x398>
 8002b9a:	693b      	ldr	r3, [r7, #16]
 8002b9c:	2280      	movs	r2, #128	; 0x80
 8002b9e:	03d2      	lsls	r2, r2, #15
 8002ba0:	4313      	orrs	r3, r2
 8002ba2:	4a27      	ldr	r2, [pc, #156]	; (8002c40 <HAL_ADC_ConfigChannel+0x360>)
 8002ba4:	0019      	movs	r1, r3
 8002ba6:	0010      	movs	r0, r2
 8002ba8:	f7ff fafc 	bl	80021a4 <LL_ADC_SetCommonPathInternalCh>
 8002bac:	e064      	b.n	8002c78 <HAL_ADC_ConfigChannel+0x398>
 8002bae:	687b      	ldr	r3, [r7, #4]
 8002bb0:	691a      	ldr	r2, [r3, #16]
 8002bb2:	2380      	movs	r3, #128	; 0x80
 8002bb4:	061b      	lsls	r3, r3, #24
 8002bb6:	429a      	cmp	r2, r3
 8002bb8:	d004      	beq.n	8002bc4 <HAL_ADC_ConfigChannel+0x2e4>
 8002bba:	687b      	ldr	r3, [r7, #4]
 8002bbc:	691b      	ldr	r3, [r3, #16]
 8002bbe:	4a1f      	ldr	r2, [pc, #124]	; (8002c3c <HAL_ADC_ConfigChannel+0x35c>)
 8002bc0:	4293      	cmp	r3, r2
 8002bc2:	d107      	bne.n	8002bd4 <HAL_ADC_ConfigChannel+0x2f4>
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	681a      	ldr	r2, [r3, #0]
 8002bc8:	683b      	ldr	r3, [r7, #0]
 8002bca:	681b      	ldr	r3, [r3, #0]
 8002bcc:	0019      	movs	r1, r3
 8002bce:	0010      	movs	r0, r2
 8002bd0:	f7ff fb7f 	bl	80022d2 <LL_ADC_REG_SetSequencerChRem>
 8002bd4:	683b      	ldr	r3, [r7, #0]
 8002bd6:	681b      	ldr	r3, [r3, #0]
 8002bd8:	2b00      	cmp	r3, #0
 8002bda:	da4d      	bge.n	8002c78 <HAL_ADC_ConfigChannel+0x398>
 8002bdc:	4b18      	ldr	r3, [pc, #96]	; (8002c40 <HAL_ADC_ConfigChannel+0x360>)
 8002bde:	0018      	movs	r0, r3
 8002be0:	f7ff faf4 	bl	80021cc <LL_ADC_GetCommonPathInternalCh>
 8002be4:	0003      	movs	r3, r0
 8002be6:	613b      	str	r3, [r7, #16]
 8002be8:	683b      	ldr	r3, [r7, #0]
 8002bea:	681b      	ldr	r3, [r3, #0]
 8002bec:	4a15      	ldr	r2, [pc, #84]	; (8002c44 <HAL_ADC_ConfigChannel+0x364>)
 8002bee:	4293      	cmp	r3, r2
 8002bf0:	d108      	bne.n	8002c04 <HAL_ADC_ConfigChannel+0x324>
 8002bf2:	693b      	ldr	r3, [r7, #16]
 8002bf4:	4a18      	ldr	r2, [pc, #96]	; (8002c58 <HAL_ADC_ConfigChannel+0x378>)
 8002bf6:	4013      	ands	r3, r2
 8002bf8:	4a11      	ldr	r2, [pc, #68]	; (8002c40 <HAL_ADC_ConfigChannel+0x360>)
 8002bfa:	0019      	movs	r1, r3
 8002bfc:	0010      	movs	r0, r2
 8002bfe:	f7ff fad1 	bl	80021a4 <LL_ADC_SetCommonPathInternalCh>
 8002c02:	e039      	b.n	8002c78 <HAL_ADC_ConfigChannel+0x398>
 8002c04:	683b      	ldr	r3, [r7, #0]
 8002c06:	681b      	ldr	r3, [r3, #0]
 8002c08:	4a11      	ldr	r2, [pc, #68]	; (8002c50 <HAL_ADC_ConfigChannel+0x370>)
 8002c0a:	4293      	cmp	r3, r2
 8002c0c:	d108      	bne.n	8002c20 <HAL_ADC_ConfigChannel+0x340>
 8002c0e:	693b      	ldr	r3, [r7, #16]
 8002c10:	4a12      	ldr	r2, [pc, #72]	; (8002c5c <HAL_ADC_ConfigChannel+0x37c>)
 8002c12:	4013      	ands	r3, r2
 8002c14:	4a0a      	ldr	r2, [pc, #40]	; (8002c40 <HAL_ADC_ConfigChannel+0x360>)
 8002c16:	0019      	movs	r1, r3
 8002c18:	0010      	movs	r0, r2
 8002c1a:	f7ff fac3 	bl	80021a4 <LL_ADC_SetCommonPathInternalCh>
 8002c1e:	e02b      	b.n	8002c78 <HAL_ADC_ConfigChannel+0x398>
 8002c20:	683b      	ldr	r3, [r7, #0]
 8002c22:	681b      	ldr	r3, [r3, #0]
 8002c24:	4a0b      	ldr	r2, [pc, #44]	; (8002c54 <HAL_ADC_ConfigChannel+0x374>)
 8002c26:	4293      	cmp	r3, r2
 8002c28:	d126      	bne.n	8002c78 <HAL_ADC_ConfigChannel+0x398>
 8002c2a:	693b      	ldr	r3, [r7, #16]
 8002c2c:	4a0c      	ldr	r2, [pc, #48]	; (8002c60 <HAL_ADC_ConfigChannel+0x380>)
 8002c2e:	4013      	ands	r3, r2
 8002c30:	4a03      	ldr	r2, [pc, #12]	; (8002c40 <HAL_ADC_ConfigChannel+0x360>)
 8002c32:	0019      	movs	r1, r3
 8002c34:	0010      	movs	r0, r2
 8002c36:	f7ff fab5 	bl	80021a4 <LL_ADC_SetCommonPathInternalCh>
 8002c3a:	e01d      	b.n	8002c78 <HAL_ADC_ConfigChannel+0x398>
 8002c3c:	80000004 	.word	0x80000004
 8002c40:	40012708 	.word	0x40012708
 8002c44:	b0001000 	.word	0xb0001000
 8002c48:	20000000 	.word	0x20000000
 8002c4c:	00030d40 	.word	0x00030d40
 8002c50:	b8004000 	.word	0xb8004000
 8002c54:	b4002000 	.word	0xb4002000
 8002c58:	ff7fffff 	.word	0xff7fffff
 8002c5c:	feffffff 	.word	0xfeffffff
 8002c60:	ffbfffff 	.word	0xffbfffff
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002c68:	2220      	movs	r2, #32
 8002c6a:	431a      	orrs	r2, r3
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	659a      	str	r2, [r3, #88]	; 0x58
 8002c70:	2317      	movs	r3, #23
 8002c72:	18fb      	adds	r3, r7, r3
 8002c74:	2201      	movs	r2, #1
 8002c76:	701a      	strb	r2, [r3, #0]
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	2254      	movs	r2, #84	; 0x54
 8002c7c:	2100      	movs	r1, #0
 8002c7e:	5499      	strb	r1, [r3, r2]
 8002c80:	2317      	movs	r3, #23
 8002c82:	18fb      	adds	r3, r7, r3
 8002c84:	781b      	ldrb	r3, [r3, #0]
 8002c86:	0018      	movs	r0, r3
 8002c88:	46bd      	mov	sp, r7
 8002c8a:	b006      	add	sp, #24
 8002c8c:	bd80      	pop	{r7, pc}
 8002c8e:	46c0      	nop			; (mov r8, r8)

08002c90 <ADC_Enable>:
 8002c90:	b580      	push	{r7, lr}
 8002c92:	b084      	sub	sp, #16
 8002c94:	af00      	add	r7, sp, #0
 8002c96:	6078      	str	r0, [r7, #4]
 8002c98:	2300      	movs	r3, #0
 8002c9a:	60bb      	str	r3, [r7, #8]
 8002c9c:	687b      	ldr	r3, [r7, #4]
 8002c9e:	681b      	ldr	r3, [r3, #0]
 8002ca0:	0018      	movs	r0, r3
 8002ca2:	f7ff fb91 	bl	80023c8 <LL_ADC_IsEnabled>
 8002ca6:	1e03      	subs	r3, r0, #0
 8002ca8:	d000      	beq.n	8002cac <ADC_Enable+0x1c>
 8002caa:	e069      	b.n	8002d80 <ADC_Enable+0xf0>
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	681b      	ldr	r3, [r3, #0]
 8002cb0:	689b      	ldr	r3, [r3, #8]
 8002cb2:	4a36      	ldr	r2, [pc, #216]	; (8002d8c <ADC_Enable+0xfc>)
 8002cb4:	4013      	ands	r3, r2
 8002cb6:	d00d      	beq.n	8002cd4 <ADC_Enable+0x44>
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002cbc:	2210      	movs	r2, #16
 8002cbe:	431a      	orrs	r2, r3
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	659a      	str	r2, [r3, #88]	; 0x58
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002cc8:	2201      	movs	r2, #1
 8002cca:	431a      	orrs	r2, r3
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	65da      	str	r2, [r3, #92]	; 0x5c
 8002cd0:	2301      	movs	r3, #1
 8002cd2:	e056      	b.n	8002d82 <ADC_Enable+0xf2>
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	681b      	ldr	r3, [r3, #0]
 8002cd8:	0018      	movs	r0, r3
 8002cda:	f7ff fb51 	bl	8002380 <LL_ADC_Enable>
 8002cde:	4b2c      	ldr	r3, [pc, #176]	; (8002d90 <ADC_Enable+0x100>)
 8002ce0:	0018      	movs	r0, r3
 8002ce2:	f7ff fa73 	bl	80021cc <LL_ADC_GetCommonPathInternalCh>
 8002ce6:	0002      	movs	r2, r0
 8002ce8:	2380      	movs	r3, #128	; 0x80
 8002cea:	041b      	lsls	r3, r3, #16
 8002cec:	4013      	ands	r3, r2
 8002cee:	d00f      	beq.n	8002d10 <ADC_Enable+0x80>
 8002cf0:	4b28      	ldr	r3, [pc, #160]	; (8002d94 <ADC_Enable+0x104>)
 8002cf2:	681b      	ldr	r3, [r3, #0]
 8002cf4:	4928      	ldr	r1, [pc, #160]	; (8002d98 <ADC_Enable+0x108>)
 8002cf6:	0018      	movs	r0, r3
 8002cf8:	f7fd fa0c 	bl	8000114 <__udivsi3>
 8002cfc:	0003      	movs	r3, r0
 8002cfe:	3301      	adds	r3, #1
 8002d00:	60bb      	str	r3, [r7, #8]
 8002d02:	e002      	b.n	8002d0a <ADC_Enable+0x7a>
 8002d04:	68bb      	ldr	r3, [r7, #8]
 8002d06:	3b01      	subs	r3, #1
 8002d08:	60bb      	str	r3, [r7, #8]
 8002d0a:	68bb      	ldr	r3, [r7, #8]
 8002d0c:	2b00      	cmp	r3, #0
 8002d0e:	d1f9      	bne.n	8002d04 <ADC_Enable+0x74>
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	7e5b      	ldrb	r3, [r3, #25]
 8002d14:	2b01      	cmp	r3, #1
 8002d16:	d033      	beq.n	8002d80 <ADC_Enable+0xf0>
 8002d18:	f7ff fa16 	bl	8002148 <HAL_GetTick>
 8002d1c:	0003      	movs	r3, r0
 8002d1e:	60fb      	str	r3, [r7, #12]
 8002d20:	e027      	b.n	8002d72 <ADC_Enable+0xe2>
 8002d22:	687b      	ldr	r3, [r7, #4]
 8002d24:	681b      	ldr	r3, [r3, #0]
 8002d26:	0018      	movs	r0, r3
 8002d28:	f7ff fb4e 	bl	80023c8 <LL_ADC_IsEnabled>
 8002d2c:	1e03      	subs	r3, r0, #0
 8002d2e:	d104      	bne.n	8002d3a <ADC_Enable+0xaa>
 8002d30:	687b      	ldr	r3, [r7, #4]
 8002d32:	681b      	ldr	r3, [r3, #0]
 8002d34:	0018      	movs	r0, r3
 8002d36:	f7ff fb23 	bl	8002380 <LL_ADC_Enable>
 8002d3a:	f7ff fa05 	bl	8002148 <HAL_GetTick>
 8002d3e:	0002      	movs	r2, r0
 8002d40:	68fb      	ldr	r3, [r7, #12]
 8002d42:	1ad3      	subs	r3, r2, r3
 8002d44:	2b02      	cmp	r3, #2
 8002d46:	d914      	bls.n	8002d72 <ADC_Enable+0xe2>
 8002d48:	687b      	ldr	r3, [r7, #4]
 8002d4a:	681b      	ldr	r3, [r3, #0]
 8002d4c:	681b      	ldr	r3, [r3, #0]
 8002d4e:	2201      	movs	r2, #1
 8002d50:	4013      	ands	r3, r2
 8002d52:	2b01      	cmp	r3, #1
 8002d54:	d00d      	beq.n	8002d72 <ADC_Enable+0xe2>
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002d5a:	2210      	movs	r2, #16
 8002d5c:	431a      	orrs	r2, r3
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	659a      	str	r2, [r3, #88]	; 0x58
 8002d62:	687b      	ldr	r3, [r7, #4]
 8002d64:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002d66:	2201      	movs	r2, #1
 8002d68:	431a      	orrs	r2, r3
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	65da      	str	r2, [r3, #92]	; 0x5c
 8002d6e:	2301      	movs	r3, #1
 8002d70:	e007      	b.n	8002d82 <ADC_Enable+0xf2>
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	681b      	ldr	r3, [r3, #0]
 8002d76:	681b      	ldr	r3, [r3, #0]
 8002d78:	2201      	movs	r2, #1
 8002d7a:	4013      	ands	r3, r2
 8002d7c:	2b01      	cmp	r3, #1
 8002d7e:	d1d0      	bne.n	8002d22 <ADC_Enable+0x92>
 8002d80:	2300      	movs	r3, #0
 8002d82:	0018      	movs	r0, r3
 8002d84:	46bd      	mov	sp, r7
 8002d86:	b004      	add	sp, #16
 8002d88:	bd80      	pop	{r7, pc}
 8002d8a:	46c0      	nop			; (mov r8, r8)
 8002d8c:	80000017 	.word	0x80000017
 8002d90:	40012708 	.word	0x40012708
 8002d94:	20000000 	.word	0x20000000
 8002d98:	00030d40 	.word	0x00030d40

08002d9c <ADC_Disable>:
 8002d9c:	b580      	push	{r7, lr}
 8002d9e:	b084      	sub	sp, #16
 8002da0:	af00      	add	r7, sp, #0
 8002da2:	6078      	str	r0, [r7, #4]
 8002da4:	687b      	ldr	r3, [r7, #4]
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	0018      	movs	r0, r3
 8002daa:	f7ff fb1e 	bl	80023ea <LL_ADC_IsDisableOngoing>
 8002dae:	0003      	movs	r3, r0
 8002db0:	60fb      	str	r3, [r7, #12]
 8002db2:	687b      	ldr	r3, [r7, #4]
 8002db4:	681b      	ldr	r3, [r3, #0]
 8002db6:	0018      	movs	r0, r3
 8002db8:	f7ff fb06 	bl	80023c8 <LL_ADC_IsEnabled>
 8002dbc:	1e03      	subs	r3, r0, #0
 8002dbe:	d046      	beq.n	8002e4e <ADC_Disable+0xb2>
 8002dc0:	68fb      	ldr	r3, [r7, #12]
 8002dc2:	2b00      	cmp	r3, #0
 8002dc4:	d143      	bne.n	8002e4e <ADC_Disable+0xb2>
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	689b      	ldr	r3, [r3, #8]
 8002dcc:	2205      	movs	r2, #5
 8002dce:	4013      	ands	r3, r2
 8002dd0:	2b01      	cmp	r3, #1
 8002dd2:	d10d      	bne.n	8002df0 <ADC_Disable+0x54>
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	681b      	ldr	r3, [r3, #0]
 8002dd8:	0018      	movs	r0, r3
 8002dda:	f7ff fae3 	bl	80023a4 <LL_ADC_Disable>
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	681b      	ldr	r3, [r3, #0]
 8002de2:	2203      	movs	r2, #3
 8002de4:	601a      	str	r2, [r3, #0]
 8002de6:	f7ff f9af 	bl	8002148 <HAL_GetTick>
 8002dea:	0003      	movs	r3, r0
 8002dec:	60bb      	str	r3, [r7, #8]
 8002dee:	e028      	b.n	8002e42 <ADC_Disable+0xa6>
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002df4:	2210      	movs	r2, #16
 8002df6:	431a      	orrs	r2, r3
 8002df8:	687b      	ldr	r3, [r7, #4]
 8002dfa:	659a      	str	r2, [r3, #88]	; 0x58
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002e00:	2201      	movs	r2, #1
 8002e02:	431a      	orrs	r2, r3
 8002e04:	687b      	ldr	r3, [r7, #4]
 8002e06:	65da      	str	r2, [r3, #92]	; 0x5c
 8002e08:	2301      	movs	r3, #1
 8002e0a:	e021      	b.n	8002e50 <ADC_Disable+0xb4>
 8002e0c:	f7ff f99c 	bl	8002148 <HAL_GetTick>
 8002e10:	0002      	movs	r2, r0
 8002e12:	68bb      	ldr	r3, [r7, #8]
 8002e14:	1ad3      	subs	r3, r2, r3
 8002e16:	2b02      	cmp	r3, #2
 8002e18:	d913      	bls.n	8002e42 <ADC_Disable+0xa6>
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	681b      	ldr	r3, [r3, #0]
 8002e1e:	689b      	ldr	r3, [r3, #8]
 8002e20:	2201      	movs	r2, #1
 8002e22:	4013      	ands	r3, r2
 8002e24:	d00d      	beq.n	8002e42 <ADC_Disable+0xa6>
 8002e26:	687b      	ldr	r3, [r7, #4]
 8002e28:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002e2a:	2210      	movs	r2, #16
 8002e2c:	431a      	orrs	r2, r3
 8002e2e:	687b      	ldr	r3, [r7, #4]
 8002e30:	659a      	str	r2, [r3, #88]	; 0x58
 8002e32:	687b      	ldr	r3, [r7, #4]
 8002e34:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002e36:	2201      	movs	r2, #1
 8002e38:	431a      	orrs	r2, r3
 8002e3a:	687b      	ldr	r3, [r7, #4]
 8002e3c:	65da      	str	r2, [r3, #92]	; 0x5c
 8002e3e:	2301      	movs	r3, #1
 8002e40:	e006      	b.n	8002e50 <ADC_Disable+0xb4>
 8002e42:	687b      	ldr	r3, [r7, #4]
 8002e44:	681b      	ldr	r3, [r3, #0]
 8002e46:	689b      	ldr	r3, [r3, #8]
 8002e48:	2201      	movs	r2, #1
 8002e4a:	4013      	ands	r3, r2
 8002e4c:	d1de      	bne.n	8002e0c <ADC_Disable+0x70>
 8002e4e:	2300      	movs	r3, #0
 8002e50:	0018      	movs	r0, r3
 8002e52:	46bd      	mov	sp, r7
 8002e54:	b004      	add	sp, #16
 8002e56:	bd80      	pop	{r7, pc}

08002e58 <ADC_DMAConvCplt>:
 8002e58:	b580      	push	{r7, lr}
 8002e5a:	b084      	sub	sp, #16
 8002e5c:	af00      	add	r7, sp, #0
 8002e5e:	6078      	str	r0, [r7, #4]
 8002e60:	687b      	ldr	r3, [r7, #4]
 8002e62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002e64:	60fb      	str	r3, [r7, #12]
 8002e66:	68fb      	ldr	r3, [r7, #12]
 8002e68:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002e6a:	2250      	movs	r2, #80	; 0x50
 8002e6c:	4013      	ands	r3, r2
 8002e6e:	d141      	bne.n	8002ef4 <ADC_DMAConvCplt+0x9c>
 8002e70:	68fb      	ldr	r3, [r7, #12]
 8002e72:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002e74:	2280      	movs	r2, #128	; 0x80
 8002e76:	0092      	lsls	r2, r2, #2
 8002e78:	431a      	orrs	r2, r3
 8002e7a:	68fb      	ldr	r3, [r7, #12]
 8002e7c:	659a      	str	r2, [r3, #88]	; 0x58
 8002e7e:	68fb      	ldr	r3, [r7, #12]
 8002e80:	681b      	ldr	r3, [r3, #0]
 8002e82:	0018      	movs	r0, r3
 8002e84:	f7ff f9e3 	bl	800224e <LL_ADC_REG_IsTriggerSourceSWStart>
 8002e88:	1e03      	subs	r3, r0, #0
 8002e8a:	d02e      	beq.n	8002eea <ADC_DMAConvCplt+0x92>
 8002e8c:	68fb      	ldr	r3, [r7, #12]
 8002e8e:	7e9b      	ldrb	r3, [r3, #26]
 8002e90:	2b00      	cmp	r3, #0
 8002e92:	d12a      	bne.n	8002eea <ADC_DMAConvCplt+0x92>
 8002e94:	68fb      	ldr	r3, [r7, #12]
 8002e96:	681b      	ldr	r3, [r3, #0]
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	2208      	movs	r2, #8
 8002e9c:	4013      	ands	r3, r2
 8002e9e:	2b08      	cmp	r3, #8
 8002ea0:	d123      	bne.n	8002eea <ADC_DMAConvCplt+0x92>
 8002ea2:	68fb      	ldr	r3, [r7, #12]
 8002ea4:	681b      	ldr	r3, [r3, #0]
 8002ea6:	0018      	movs	r0, r3
 8002ea8:	f7ff fac2 	bl	8002430 <LL_ADC_REG_IsConversionOngoing>
 8002eac:	1e03      	subs	r3, r0, #0
 8002eae:	d110      	bne.n	8002ed2 <ADC_DMAConvCplt+0x7a>
 8002eb0:	68fb      	ldr	r3, [r7, #12]
 8002eb2:	681b      	ldr	r3, [r3, #0]
 8002eb4:	685a      	ldr	r2, [r3, #4]
 8002eb6:	68fb      	ldr	r3, [r7, #12]
 8002eb8:	681b      	ldr	r3, [r3, #0]
 8002eba:	210c      	movs	r1, #12
 8002ebc:	438a      	bics	r2, r1
 8002ebe:	605a      	str	r2, [r3, #4]
 8002ec0:	68fb      	ldr	r3, [r7, #12]
 8002ec2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002ec4:	4a15      	ldr	r2, [pc, #84]	; (8002f1c <ADC_DMAConvCplt+0xc4>)
 8002ec6:	4013      	ands	r3, r2
 8002ec8:	2201      	movs	r2, #1
 8002eca:	431a      	orrs	r2, r3
 8002ecc:	68fb      	ldr	r3, [r7, #12]
 8002ece:	659a      	str	r2, [r3, #88]	; 0x58
 8002ed0:	e00b      	b.n	8002eea <ADC_DMAConvCplt+0x92>
 8002ed2:	68fb      	ldr	r3, [r7, #12]
 8002ed4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002ed6:	2220      	movs	r2, #32
 8002ed8:	431a      	orrs	r2, r3
 8002eda:	68fb      	ldr	r3, [r7, #12]
 8002edc:	659a      	str	r2, [r3, #88]	; 0x58
 8002ede:	68fb      	ldr	r3, [r7, #12]
 8002ee0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002ee2:	2201      	movs	r2, #1
 8002ee4:	431a      	orrs	r2, r3
 8002ee6:	68fb      	ldr	r3, [r7, #12]
 8002ee8:	65da      	str	r2, [r3, #92]	; 0x5c
 8002eea:	68fb      	ldr	r3, [r7, #12]
 8002eec:	0018      	movs	r0, r3
 8002eee:	f7fe fdf7 	bl	8001ae0 <HAL_ADC_ConvCpltCallback>
 8002ef2:	e00f      	b.n	8002f14 <ADC_DMAConvCplt+0xbc>
 8002ef4:	68fb      	ldr	r3, [r7, #12]
 8002ef6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002ef8:	2210      	movs	r2, #16
 8002efa:	4013      	ands	r3, r2
 8002efc:	d004      	beq.n	8002f08 <ADC_DMAConvCplt+0xb0>
 8002efe:	68fb      	ldr	r3, [r7, #12]
 8002f00:	0018      	movs	r0, r3
 8002f02:	f7ff fce5 	bl	80028d0 <HAL_ADC_ErrorCallback>
 8002f06:	e005      	b.n	8002f14 <ADC_DMAConvCplt+0xbc>
 8002f08:	68fb      	ldr	r3, [r7, #12]
 8002f0a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002f0c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002f0e:	687a      	ldr	r2, [r7, #4]
 8002f10:	0010      	movs	r0, r2
 8002f12:	4798      	blx	r3
 8002f14:	46c0      	nop			; (mov r8, r8)
 8002f16:	46bd      	mov	sp, r7
 8002f18:	b004      	add	sp, #16
 8002f1a:	bd80      	pop	{r7, pc}
 8002f1c:	fffffefe 	.word	0xfffffefe

08002f20 <ADC_DMAHalfConvCplt>:
 8002f20:	b580      	push	{r7, lr}
 8002f22:	b084      	sub	sp, #16
 8002f24:	af00      	add	r7, sp, #0
 8002f26:	6078      	str	r0, [r7, #4]
 8002f28:	687b      	ldr	r3, [r7, #4]
 8002f2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002f2c:	60fb      	str	r3, [r7, #12]
 8002f2e:	68fb      	ldr	r3, [r7, #12]
 8002f30:	0018      	movs	r0, r3
 8002f32:	f7ff fcc5 	bl	80028c0 <HAL_ADC_ConvHalfCpltCallback>
 8002f36:	46c0      	nop			; (mov r8, r8)
 8002f38:	46bd      	mov	sp, r7
 8002f3a:	b004      	add	sp, #16
 8002f3c:	bd80      	pop	{r7, pc}

08002f3e <ADC_DMAError>:
 8002f3e:	b580      	push	{r7, lr}
 8002f40:	b084      	sub	sp, #16
 8002f42:	af00      	add	r7, sp, #0
 8002f44:	6078      	str	r0, [r7, #4]
 8002f46:	687b      	ldr	r3, [r7, #4]
 8002f48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002f4a:	60fb      	str	r3, [r7, #12]
 8002f4c:	68fb      	ldr	r3, [r7, #12]
 8002f4e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002f50:	2240      	movs	r2, #64	; 0x40
 8002f52:	431a      	orrs	r2, r3
 8002f54:	68fb      	ldr	r3, [r7, #12]
 8002f56:	659a      	str	r2, [r3, #88]	; 0x58
 8002f58:	68fb      	ldr	r3, [r7, #12]
 8002f5a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002f5c:	2204      	movs	r2, #4
 8002f5e:	431a      	orrs	r2, r3
 8002f60:	68fb      	ldr	r3, [r7, #12]
 8002f62:	65da      	str	r2, [r3, #92]	; 0x5c
 8002f64:	68fb      	ldr	r3, [r7, #12]
 8002f66:	0018      	movs	r0, r3
 8002f68:	f7ff fcb2 	bl	80028d0 <HAL_ADC_ErrorCallback>
 8002f6c:	46c0      	nop			; (mov r8, r8)
 8002f6e:	46bd      	mov	sp, r7
 8002f70:	b004      	add	sp, #16
 8002f72:	bd80      	pop	{r7, pc}

08002f74 <LL_ADC_SetCalibrationFactor>:
 8002f74:	b580      	push	{r7, lr}
 8002f76:	b082      	sub	sp, #8
 8002f78:	af00      	add	r7, sp, #0
 8002f7a:	6078      	str	r0, [r7, #4]
 8002f7c:	6039      	str	r1, [r7, #0]
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	22b4      	movs	r2, #180	; 0xb4
 8002f82:	589b      	ldr	r3, [r3, r2]
 8002f84:	227f      	movs	r2, #127	; 0x7f
 8002f86:	4393      	bics	r3, r2
 8002f88:	001a      	movs	r2, r3
 8002f8a:	683b      	ldr	r3, [r7, #0]
 8002f8c:	431a      	orrs	r2, r3
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	21b4      	movs	r1, #180	; 0xb4
 8002f92:	505a      	str	r2, [r3, r1]
 8002f94:	46c0      	nop			; (mov r8, r8)
 8002f96:	46bd      	mov	sp, r7
 8002f98:	b002      	add	sp, #8
 8002f9a:	bd80      	pop	{r7, pc}

08002f9c <LL_ADC_GetCalibrationFactor>:
 8002f9c:	b580      	push	{r7, lr}
 8002f9e:	b082      	sub	sp, #8
 8002fa0:	af00      	add	r7, sp, #0
 8002fa2:	6078      	str	r0, [r7, #4]
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	22b4      	movs	r2, #180	; 0xb4
 8002fa8:	589b      	ldr	r3, [r3, r2]
 8002faa:	227f      	movs	r2, #127	; 0x7f
 8002fac:	4013      	ands	r3, r2
 8002fae:	0018      	movs	r0, r3
 8002fb0:	46bd      	mov	sp, r7
 8002fb2:	b002      	add	sp, #8
 8002fb4:	bd80      	pop	{r7, pc}
	...

08002fb8 <LL_ADC_Enable>:
 8002fb8:	b580      	push	{r7, lr}
 8002fba:	b082      	sub	sp, #8
 8002fbc:	af00      	add	r7, sp, #0
 8002fbe:	6078      	str	r0, [r7, #4]
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	689b      	ldr	r3, [r3, #8]
 8002fc4:	4a04      	ldr	r2, [pc, #16]	; (8002fd8 <LL_ADC_Enable+0x20>)
 8002fc6:	4013      	ands	r3, r2
 8002fc8:	2201      	movs	r2, #1
 8002fca:	431a      	orrs	r2, r3
 8002fcc:	687b      	ldr	r3, [r7, #4]
 8002fce:	609a      	str	r2, [r3, #8]
 8002fd0:	46c0      	nop			; (mov r8, r8)
 8002fd2:	46bd      	mov	sp, r7
 8002fd4:	b002      	add	sp, #8
 8002fd6:	bd80      	pop	{r7, pc}
 8002fd8:	7fffffe8 	.word	0x7fffffe8

08002fdc <LL_ADC_Disable>:
 8002fdc:	b580      	push	{r7, lr}
 8002fde:	b082      	sub	sp, #8
 8002fe0:	af00      	add	r7, sp, #0
 8002fe2:	6078      	str	r0, [r7, #4]
 8002fe4:	687b      	ldr	r3, [r7, #4]
 8002fe6:	689b      	ldr	r3, [r3, #8]
 8002fe8:	4a04      	ldr	r2, [pc, #16]	; (8002ffc <LL_ADC_Disable+0x20>)
 8002fea:	4013      	ands	r3, r2
 8002fec:	2202      	movs	r2, #2
 8002fee:	431a      	orrs	r2, r3
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	609a      	str	r2, [r3, #8]
 8002ff4:	46c0      	nop			; (mov r8, r8)
 8002ff6:	46bd      	mov	sp, r7
 8002ff8:	b002      	add	sp, #8
 8002ffa:	bd80      	pop	{r7, pc}
 8002ffc:	7fffffe8 	.word	0x7fffffe8

08003000 <LL_ADC_IsEnabled>:
 8003000:	b580      	push	{r7, lr}
 8003002:	b082      	sub	sp, #8
 8003004:	af00      	add	r7, sp, #0
 8003006:	6078      	str	r0, [r7, #4]
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	689b      	ldr	r3, [r3, #8]
 800300c:	2201      	movs	r2, #1
 800300e:	4013      	ands	r3, r2
 8003010:	2b01      	cmp	r3, #1
 8003012:	d101      	bne.n	8003018 <LL_ADC_IsEnabled+0x18>
 8003014:	2301      	movs	r3, #1
 8003016:	e000      	b.n	800301a <LL_ADC_IsEnabled+0x1a>
 8003018:	2300      	movs	r3, #0
 800301a:	0018      	movs	r0, r3
 800301c:	46bd      	mov	sp, r7
 800301e:	b002      	add	sp, #8
 8003020:	bd80      	pop	{r7, pc}
	...

08003024 <LL_ADC_StartCalibration>:
 8003024:	b580      	push	{r7, lr}
 8003026:	b082      	sub	sp, #8
 8003028:	af00      	add	r7, sp, #0
 800302a:	6078      	str	r0, [r7, #4]
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	689b      	ldr	r3, [r3, #8]
 8003030:	4a05      	ldr	r2, [pc, #20]	; (8003048 <LL_ADC_StartCalibration+0x24>)
 8003032:	4013      	ands	r3, r2
 8003034:	2280      	movs	r2, #128	; 0x80
 8003036:	0612      	lsls	r2, r2, #24
 8003038:	431a      	orrs	r2, r3
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	609a      	str	r2, [r3, #8]
 800303e:	46c0      	nop			; (mov r8, r8)
 8003040:	46bd      	mov	sp, r7
 8003042:	b002      	add	sp, #8
 8003044:	bd80      	pop	{r7, pc}
 8003046:	46c0      	nop			; (mov r8, r8)
 8003048:	7fffffe8 	.word	0x7fffffe8

0800304c <LL_ADC_IsCalibrationOnGoing>:
 800304c:	b580      	push	{r7, lr}
 800304e:	b082      	sub	sp, #8
 8003050:	af00      	add	r7, sp, #0
 8003052:	6078      	str	r0, [r7, #4]
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	689b      	ldr	r3, [r3, #8]
 8003058:	0fdb      	lsrs	r3, r3, #31
 800305a:	07da      	lsls	r2, r3, #31
 800305c:	2380      	movs	r3, #128	; 0x80
 800305e:	061b      	lsls	r3, r3, #24
 8003060:	429a      	cmp	r2, r3
 8003062:	d101      	bne.n	8003068 <LL_ADC_IsCalibrationOnGoing+0x1c>
 8003064:	2301      	movs	r3, #1
 8003066:	e000      	b.n	800306a <LL_ADC_IsCalibrationOnGoing+0x1e>
 8003068:	2300      	movs	r3, #0
 800306a:	0018      	movs	r0, r3
 800306c:	46bd      	mov	sp, r7
 800306e:	b002      	add	sp, #8
 8003070:	bd80      	pop	{r7, pc}
	...

08003074 <HAL_ADCEx_Calibration_Start>:
 8003074:	b590      	push	{r4, r7, lr}
 8003076:	b089      	sub	sp, #36	; 0x24
 8003078:	af00      	add	r7, sp, #0
 800307a:	6078      	str	r0, [r7, #4]
 800307c:	2300      	movs	r3, #0
 800307e:	60bb      	str	r3, [r7, #8]
 8003080:	2300      	movs	r3, #0
 8003082:	61bb      	str	r3, [r7, #24]
 8003084:	687b      	ldr	r3, [r7, #4]
 8003086:	2254      	movs	r2, #84	; 0x54
 8003088:	5c9b      	ldrb	r3, [r3, r2]
 800308a:	2b01      	cmp	r3, #1
 800308c:	d101      	bne.n	8003092 <HAL_ADCEx_Calibration_Start+0x1e>
 800308e:	2302      	movs	r3, #2
 8003090:	e0ba      	b.n	8003208 <HAL_ADCEx_Calibration_Start+0x194>
 8003092:	687b      	ldr	r3, [r7, #4]
 8003094:	2254      	movs	r2, #84	; 0x54
 8003096:	2101      	movs	r1, #1
 8003098:	5499      	strb	r1, [r3, r2]
 800309a:	2317      	movs	r3, #23
 800309c:	18fc      	adds	r4, r7, r3
 800309e:	687b      	ldr	r3, [r7, #4]
 80030a0:	0018      	movs	r0, r3
 80030a2:	f7ff fe7b 	bl	8002d9c <ADC_Disable>
 80030a6:	0003      	movs	r3, r0
 80030a8:	7023      	strb	r3, [r4, #0]
 80030aa:	687b      	ldr	r3, [r7, #4]
 80030ac:	681b      	ldr	r3, [r3, #0]
 80030ae:	0018      	movs	r0, r3
 80030b0:	f7ff ffa6 	bl	8003000 <LL_ADC_IsEnabled>
 80030b4:	1e03      	subs	r3, r0, #0
 80030b6:	d000      	beq.n	80030ba <HAL_ADCEx_Calibration_Start+0x46>
 80030b8:	e099      	b.n	80031ee <HAL_ADCEx_Calibration_Start+0x17a>
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80030be:	4a54      	ldr	r2, [pc, #336]	; (8003210 <HAL_ADCEx_Calibration_Start+0x19c>)
 80030c0:	4013      	ands	r3, r2
 80030c2:	2202      	movs	r2, #2
 80030c4:	431a      	orrs	r2, r3
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	659a      	str	r2, [r3, #88]	; 0x58
 80030ca:	687b      	ldr	r3, [r7, #4]
 80030cc:	681b      	ldr	r3, [r3, #0]
 80030ce:	68db      	ldr	r3, [r3, #12]
 80030d0:	4a50      	ldr	r2, [pc, #320]	; (8003214 <HAL_ADCEx_Calibration_Start+0x1a0>)
 80030d2:	4013      	ands	r3, r2
 80030d4:	613b      	str	r3, [r7, #16]
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	681b      	ldr	r3, [r3, #0]
 80030da:	68da      	ldr	r2, [r3, #12]
 80030dc:	687b      	ldr	r3, [r7, #4]
 80030de:	681b      	ldr	r3, [r3, #0]
 80030e0:	494d      	ldr	r1, [pc, #308]	; (8003218 <HAL_ADCEx_Calibration_Start+0x1a4>)
 80030e2:	400a      	ands	r2, r1
 80030e4:	60da      	str	r2, [r3, #12]
 80030e6:	2300      	movs	r3, #0
 80030e8:	61fb      	str	r3, [r7, #28]
 80030ea:	e02d      	b.n	8003148 <HAL_ADCEx_Calibration_Start+0xd4>
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	681b      	ldr	r3, [r3, #0]
 80030f0:	0018      	movs	r0, r3
 80030f2:	f7ff ff97 	bl	8003024 <LL_ADC_StartCalibration>
 80030f6:	e014      	b.n	8003122 <HAL_ADCEx_Calibration_Start+0xae>
 80030f8:	68bb      	ldr	r3, [r7, #8]
 80030fa:	3301      	adds	r3, #1
 80030fc:	60bb      	str	r3, [r7, #8]
 80030fe:	68bb      	ldr	r3, [r7, #8]
 8003100:	4a46      	ldr	r2, [pc, #280]	; (800321c <HAL_ADCEx_Calibration_Start+0x1a8>)
 8003102:	4293      	cmp	r3, r2
 8003104:	d90d      	bls.n	8003122 <HAL_ADCEx_Calibration_Start+0xae>
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800310a:	2212      	movs	r2, #18
 800310c:	4393      	bics	r3, r2
 800310e:	2210      	movs	r2, #16
 8003110:	431a      	orrs	r2, r3
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	659a      	str	r2, [r3, #88]	; 0x58
 8003116:	687b      	ldr	r3, [r7, #4]
 8003118:	2254      	movs	r2, #84	; 0x54
 800311a:	2100      	movs	r1, #0
 800311c:	5499      	strb	r1, [r3, r2]
 800311e:	2301      	movs	r3, #1
 8003120:	e072      	b.n	8003208 <HAL_ADCEx_Calibration_Start+0x194>
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	681b      	ldr	r3, [r3, #0]
 8003126:	0018      	movs	r0, r3
 8003128:	f7ff ff90 	bl	800304c <LL_ADC_IsCalibrationOnGoing>
 800312c:	1e03      	subs	r3, r0, #0
 800312e:	d1e3      	bne.n	80030f8 <HAL_ADCEx_Calibration_Start+0x84>
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	681b      	ldr	r3, [r3, #0]
 8003134:	0018      	movs	r0, r3
 8003136:	f7ff ff31 	bl	8002f9c <LL_ADC_GetCalibrationFactor>
 800313a:	0002      	movs	r2, r0
 800313c:	69bb      	ldr	r3, [r7, #24]
 800313e:	189b      	adds	r3, r3, r2
 8003140:	61bb      	str	r3, [r7, #24]
 8003142:	69fb      	ldr	r3, [r7, #28]
 8003144:	3301      	adds	r3, #1
 8003146:	61fb      	str	r3, [r7, #28]
 8003148:	69fb      	ldr	r3, [r7, #28]
 800314a:	2b07      	cmp	r3, #7
 800314c:	d9ce      	bls.n	80030ec <HAL_ADCEx_Calibration_Start+0x78>
 800314e:	69f9      	ldr	r1, [r7, #28]
 8003150:	69b8      	ldr	r0, [r7, #24]
 8003152:	f7fc ffdf 	bl	8000114 <__udivsi3>
 8003156:	0003      	movs	r3, r0
 8003158:	61bb      	str	r3, [r7, #24]
 800315a:	687b      	ldr	r3, [r7, #4]
 800315c:	681b      	ldr	r3, [r3, #0]
 800315e:	0018      	movs	r0, r3
 8003160:	f7ff ff2a 	bl	8002fb8 <LL_ADC_Enable>
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	681b      	ldr	r3, [r3, #0]
 8003168:	69ba      	ldr	r2, [r7, #24]
 800316a:	0011      	movs	r1, r2
 800316c:	0018      	movs	r0, r3
 800316e:	f7ff ff01 	bl	8002f74 <LL_ADC_SetCalibrationFactor>
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	0018      	movs	r0, r3
 8003178:	f7ff ff30 	bl	8002fdc <LL_ADC_Disable>
 800317c:	f7fe ffe4 	bl	8002148 <HAL_GetTick>
 8003180:	0003      	movs	r3, r0
 8003182:	60fb      	str	r3, [r7, #12]
 8003184:	e01b      	b.n	80031be <HAL_ADCEx_Calibration_Start+0x14a>
 8003186:	f7fe ffdf 	bl	8002148 <HAL_GetTick>
 800318a:	0002      	movs	r2, r0
 800318c:	68fb      	ldr	r3, [r7, #12]
 800318e:	1ad3      	subs	r3, r2, r3
 8003190:	2b02      	cmp	r3, #2
 8003192:	d914      	bls.n	80031be <HAL_ADCEx_Calibration_Start+0x14a>
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	681b      	ldr	r3, [r3, #0]
 8003198:	0018      	movs	r0, r3
 800319a:	f7ff ff31 	bl	8003000 <LL_ADC_IsEnabled>
 800319e:	1e03      	subs	r3, r0, #0
 80031a0:	d00d      	beq.n	80031be <HAL_ADCEx_Calibration_Start+0x14a>
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80031a6:	2210      	movs	r2, #16
 80031a8:	431a      	orrs	r2, r3
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	659a      	str	r2, [r3, #88]	; 0x58
 80031ae:	687b      	ldr	r3, [r7, #4]
 80031b0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80031b2:	2201      	movs	r2, #1
 80031b4:	431a      	orrs	r2, r3
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	65da      	str	r2, [r3, #92]	; 0x5c
 80031ba:	2301      	movs	r3, #1
 80031bc:	e024      	b.n	8003208 <HAL_ADCEx_Calibration_Start+0x194>
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	681b      	ldr	r3, [r3, #0]
 80031c2:	0018      	movs	r0, r3
 80031c4:	f7ff ff1c 	bl	8003000 <LL_ADC_IsEnabled>
 80031c8:	1e03      	subs	r3, r0, #0
 80031ca:	d1dc      	bne.n	8003186 <HAL_ADCEx_Calibration_Start+0x112>
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	681b      	ldr	r3, [r3, #0]
 80031d0:	68d9      	ldr	r1, [r3, #12]
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	681b      	ldr	r3, [r3, #0]
 80031d6:	693a      	ldr	r2, [r7, #16]
 80031d8:	430a      	orrs	r2, r1
 80031da:	60da      	str	r2, [r3, #12]
 80031dc:	687b      	ldr	r3, [r7, #4]
 80031de:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80031e0:	2203      	movs	r2, #3
 80031e2:	4393      	bics	r3, r2
 80031e4:	2201      	movs	r2, #1
 80031e6:	431a      	orrs	r2, r3
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	659a      	str	r2, [r3, #88]	; 0x58
 80031ec:	e005      	b.n	80031fa <HAL_ADCEx_Calibration_Start+0x186>
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80031f2:	2210      	movs	r2, #16
 80031f4:	431a      	orrs	r2, r3
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	659a      	str	r2, [r3, #88]	; 0x58
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	2254      	movs	r2, #84	; 0x54
 80031fe:	2100      	movs	r1, #0
 8003200:	5499      	strb	r1, [r3, r2]
 8003202:	2317      	movs	r3, #23
 8003204:	18fb      	adds	r3, r7, r3
 8003206:	781b      	ldrb	r3, [r3, #0]
 8003208:	0018      	movs	r0, r3
 800320a:	46bd      	mov	sp, r7
 800320c:	b009      	add	sp, #36	; 0x24
 800320e:	bd90      	pop	{r4, r7, pc}
 8003210:	fffffefd 	.word	0xfffffefd
 8003214:	00008003 	.word	0x00008003
 8003218:	ffff7ffc 	.word	0xffff7ffc
 800321c:	0002f1ff 	.word	0x0002f1ff

08003220 <__NVIC_EnableIRQ>:
 8003220:	b580      	push	{r7, lr}
 8003222:	b082      	sub	sp, #8
 8003224:	af00      	add	r7, sp, #0
 8003226:	0002      	movs	r2, r0
 8003228:	1dfb      	adds	r3, r7, #7
 800322a:	701a      	strb	r2, [r3, #0]
 800322c:	1dfb      	adds	r3, r7, #7
 800322e:	781b      	ldrb	r3, [r3, #0]
 8003230:	2b7f      	cmp	r3, #127	; 0x7f
 8003232:	d809      	bhi.n	8003248 <__NVIC_EnableIRQ+0x28>
 8003234:	1dfb      	adds	r3, r7, #7
 8003236:	781b      	ldrb	r3, [r3, #0]
 8003238:	001a      	movs	r2, r3
 800323a:	231f      	movs	r3, #31
 800323c:	401a      	ands	r2, r3
 800323e:	4b04      	ldr	r3, [pc, #16]	; (8003250 <__NVIC_EnableIRQ+0x30>)
 8003240:	2101      	movs	r1, #1
 8003242:	4091      	lsls	r1, r2
 8003244:	000a      	movs	r2, r1
 8003246:	601a      	str	r2, [r3, #0]
 8003248:	46c0      	nop			; (mov r8, r8)
 800324a:	46bd      	mov	sp, r7
 800324c:	b002      	add	sp, #8
 800324e:	bd80      	pop	{r7, pc}
 8003250:	e000e100 	.word	0xe000e100

08003254 <__NVIC_SetPriority>:
 8003254:	b590      	push	{r4, r7, lr}
 8003256:	b083      	sub	sp, #12
 8003258:	af00      	add	r7, sp, #0
 800325a:	0002      	movs	r2, r0
 800325c:	6039      	str	r1, [r7, #0]
 800325e:	1dfb      	adds	r3, r7, #7
 8003260:	701a      	strb	r2, [r3, #0]
 8003262:	1dfb      	adds	r3, r7, #7
 8003264:	781b      	ldrb	r3, [r3, #0]
 8003266:	2b7f      	cmp	r3, #127	; 0x7f
 8003268:	d828      	bhi.n	80032bc <__NVIC_SetPriority+0x68>
 800326a:	4a2f      	ldr	r2, [pc, #188]	; (8003328 <__NVIC_SetPriority+0xd4>)
 800326c:	1dfb      	adds	r3, r7, #7
 800326e:	781b      	ldrb	r3, [r3, #0]
 8003270:	b25b      	sxtb	r3, r3
 8003272:	089b      	lsrs	r3, r3, #2
 8003274:	33c0      	adds	r3, #192	; 0xc0
 8003276:	009b      	lsls	r3, r3, #2
 8003278:	589b      	ldr	r3, [r3, r2]
 800327a:	1dfa      	adds	r2, r7, #7
 800327c:	7812      	ldrb	r2, [r2, #0]
 800327e:	0011      	movs	r1, r2
 8003280:	2203      	movs	r2, #3
 8003282:	400a      	ands	r2, r1
 8003284:	00d2      	lsls	r2, r2, #3
 8003286:	21ff      	movs	r1, #255	; 0xff
 8003288:	4091      	lsls	r1, r2
 800328a:	000a      	movs	r2, r1
 800328c:	43d2      	mvns	r2, r2
 800328e:	401a      	ands	r2, r3
 8003290:	0011      	movs	r1, r2
 8003292:	683b      	ldr	r3, [r7, #0]
 8003294:	019b      	lsls	r3, r3, #6
 8003296:	22ff      	movs	r2, #255	; 0xff
 8003298:	401a      	ands	r2, r3
 800329a:	1dfb      	adds	r3, r7, #7
 800329c:	781b      	ldrb	r3, [r3, #0]
 800329e:	0018      	movs	r0, r3
 80032a0:	2303      	movs	r3, #3
 80032a2:	4003      	ands	r3, r0
 80032a4:	00db      	lsls	r3, r3, #3
 80032a6:	409a      	lsls	r2, r3
 80032a8:	481f      	ldr	r0, [pc, #124]	; (8003328 <__NVIC_SetPriority+0xd4>)
 80032aa:	1dfb      	adds	r3, r7, #7
 80032ac:	781b      	ldrb	r3, [r3, #0]
 80032ae:	b25b      	sxtb	r3, r3
 80032b0:	089b      	lsrs	r3, r3, #2
 80032b2:	430a      	orrs	r2, r1
 80032b4:	33c0      	adds	r3, #192	; 0xc0
 80032b6:	009b      	lsls	r3, r3, #2
 80032b8:	501a      	str	r2, [r3, r0]
 80032ba:	e031      	b.n	8003320 <__NVIC_SetPriority+0xcc>
 80032bc:	4a1b      	ldr	r2, [pc, #108]	; (800332c <__NVIC_SetPriority+0xd8>)
 80032be:	1dfb      	adds	r3, r7, #7
 80032c0:	781b      	ldrb	r3, [r3, #0]
 80032c2:	0019      	movs	r1, r3
 80032c4:	230f      	movs	r3, #15
 80032c6:	400b      	ands	r3, r1
 80032c8:	3b08      	subs	r3, #8
 80032ca:	089b      	lsrs	r3, r3, #2
 80032cc:	3306      	adds	r3, #6
 80032ce:	009b      	lsls	r3, r3, #2
 80032d0:	18d3      	adds	r3, r2, r3
 80032d2:	3304      	adds	r3, #4
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	1dfa      	adds	r2, r7, #7
 80032d8:	7812      	ldrb	r2, [r2, #0]
 80032da:	0011      	movs	r1, r2
 80032dc:	2203      	movs	r2, #3
 80032de:	400a      	ands	r2, r1
 80032e0:	00d2      	lsls	r2, r2, #3
 80032e2:	21ff      	movs	r1, #255	; 0xff
 80032e4:	4091      	lsls	r1, r2
 80032e6:	000a      	movs	r2, r1
 80032e8:	43d2      	mvns	r2, r2
 80032ea:	401a      	ands	r2, r3
 80032ec:	0011      	movs	r1, r2
 80032ee:	683b      	ldr	r3, [r7, #0]
 80032f0:	019b      	lsls	r3, r3, #6
 80032f2:	22ff      	movs	r2, #255	; 0xff
 80032f4:	401a      	ands	r2, r3
 80032f6:	1dfb      	adds	r3, r7, #7
 80032f8:	781b      	ldrb	r3, [r3, #0]
 80032fa:	0018      	movs	r0, r3
 80032fc:	2303      	movs	r3, #3
 80032fe:	4003      	ands	r3, r0
 8003300:	00db      	lsls	r3, r3, #3
 8003302:	409a      	lsls	r2, r3
 8003304:	4809      	ldr	r0, [pc, #36]	; (800332c <__NVIC_SetPriority+0xd8>)
 8003306:	1dfb      	adds	r3, r7, #7
 8003308:	781b      	ldrb	r3, [r3, #0]
 800330a:	001c      	movs	r4, r3
 800330c:	230f      	movs	r3, #15
 800330e:	4023      	ands	r3, r4
 8003310:	3b08      	subs	r3, #8
 8003312:	089b      	lsrs	r3, r3, #2
 8003314:	430a      	orrs	r2, r1
 8003316:	3306      	adds	r3, #6
 8003318:	009b      	lsls	r3, r3, #2
 800331a:	18c3      	adds	r3, r0, r3
 800331c:	3304      	adds	r3, #4
 800331e:	601a      	str	r2, [r3, #0]
 8003320:	46c0      	nop			; (mov r8, r8)
 8003322:	46bd      	mov	sp, r7
 8003324:	b003      	add	sp, #12
 8003326:	bd90      	pop	{r4, r7, pc}
 8003328:	e000e100 	.word	0xe000e100
 800332c:	e000ed00 	.word	0xe000ed00

08003330 <SysTick_Config>:
 8003330:	b580      	push	{r7, lr}
 8003332:	b082      	sub	sp, #8
 8003334:	af00      	add	r7, sp, #0
 8003336:	6078      	str	r0, [r7, #4]
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	1e5a      	subs	r2, r3, #1
 800333c:	2380      	movs	r3, #128	; 0x80
 800333e:	045b      	lsls	r3, r3, #17
 8003340:	429a      	cmp	r2, r3
 8003342:	d301      	bcc.n	8003348 <SysTick_Config+0x18>
 8003344:	2301      	movs	r3, #1
 8003346:	e010      	b.n	800336a <SysTick_Config+0x3a>
 8003348:	4b0a      	ldr	r3, [pc, #40]	; (8003374 <SysTick_Config+0x44>)
 800334a:	687a      	ldr	r2, [r7, #4]
 800334c:	3a01      	subs	r2, #1
 800334e:	605a      	str	r2, [r3, #4]
 8003350:	2301      	movs	r3, #1
 8003352:	425b      	negs	r3, r3
 8003354:	2103      	movs	r1, #3
 8003356:	0018      	movs	r0, r3
 8003358:	f7ff ff7c 	bl	8003254 <__NVIC_SetPriority>
 800335c:	4b05      	ldr	r3, [pc, #20]	; (8003374 <SysTick_Config+0x44>)
 800335e:	2200      	movs	r2, #0
 8003360:	609a      	str	r2, [r3, #8]
 8003362:	4b04      	ldr	r3, [pc, #16]	; (8003374 <SysTick_Config+0x44>)
 8003364:	2207      	movs	r2, #7
 8003366:	601a      	str	r2, [r3, #0]
 8003368:	2300      	movs	r3, #0
 800336a:	0018      	movs	r0, r3
 800336c:	46bd      	mov	sp, r7
 800336e:	b002      	add	sp, #8
 8003370:	bd80      	pop	{r7, pc}
 8003372:	46c0      	nop			; (mov r8, r8)
 8003374:	e000e010 	.word	0xe000e010

08003378 <HAL_NVIC_SetPriority>:
 8003378:	b580      	push	{r7, lr}
 800337a:	b084      	sub	sp, #16
 800337c:	af00      	add	r7, sp, #0
 800337e:	60b9      	str	r1, [r7, #8]
 8003380:	607a      	str	r2, [r7, #4]
 8003382:	210f      	movs	r1, #15
 8003384:	187b      	adds	r3, r7, r1
 8003386:	1c02      	adds	r2, r0, #0
 8003388:	701a      	strb	r2, [r3, #0]
 800338a:	68ba      	ldr	r2, [r7, #8]
 800338c:	187b      	adds	r3, r7, r1
 800338e:	781b      	ldrb	r3, [r3, #0]
 8003390:	b25b      	sxtb	r3, r3
 8003392:	0011      	movs	r1, r2
 8003394:	0018      	movs	r0, r3
 8003396:	f7ff ff5d 	bl	8003254 <__NVIC_SetPriority>
 800339a:	46c0      	nop			; (mov r8, r8)
 800339c:	46bd      	mov	sp, r7
 800339e:	b004      	add	sp, #16
 80033a0:	bd80      	pop	{r7, pc}

080033a2 <HAL_NVIC_EnableIRQ>:
 80033a2:	b580      	push	{r7, lr}
 80033a4:	b082      	sub	sp, #8
 80033a6:	af00      	add	r7, sp, #0
 80033a8:	0002      	movs	r2, r0
 80033aa:	1dfb      	adds	r3, r7, #7
 80033ac:	701a      	strb	r2, [r3, #0]
 80033ae:	1dfb      	adds	r3, r7, #7
 80033b0:	781b      	ldrb	r3, [r3, #0]
 80033b2:	b25b      	sxtb	r3, r3
 80033b4:	0018      	movs	r0, r3
 80033b6:	f7ff ff33 	bl	8003220 <__NVIC_EnableIRQ>
 80033ba:	46c0      	nop			; (mov r8, r8)
 80033bc:	46bd      	mov	sp, r7
 80033be:	b002      	add	sp, #8
 80033c0:	bd80      	pop	{r7, pc}

080033c2 <HAL_SYSTICK_Config>:
 80033c2:	b580      	push	{r7, lr}
 80033c4:	b082      	sub	sp, #8
 80033c6:	af00      	add	r7, sp, #0
 80033c8:	6078      	str	r0, [r7, #4]
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	0018      	movs	r0, r3
 80033ce:	f7ff ffaf 	bl	8003330 <SysTick_Config>
 80033d2:	0003      	movs	r3, r0
 80033d4:	0018      	movs	r0, r3
 80033d6:	46bd      	mov	sp, r7
 80033d8:	b002      	add	sp, #8
 80033da:	bd80      	pop	{r7, pc}

080033dc <HAL_DMA_Init>:
 80033dc:	b580      	push	{r7, lr}
 80033de:	b082      	sub	sp, #8
 80033e0:	af00      	add	r7, sp, #0
 80033e2:	6078      	str	r0, [r7, #4]
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	2b00      	cmp	r3, #0
 80033e8:	d101      	bne.n	80033ee <HAL_DMA_Init+0x12>
 80033ea:	2301      	movs	r3, #1
 80033ec:	e077      	b.n	80034de <HAL_DMA_Init+0x102>
 80033ee:	687b      	ldr	r3, [r7, #4]
 80033f0:	681b      	ldr	r3, [r3, #0]
 80033f2:	4a3d      	ldr	r2, [pc, #244]	; (80034e8 <HAL_DMA_Init+0x10c>)
 80033f4:	4694      	mov	ip, r2
 80033f6:	4463      	add	r3, ip
 80033f8:	2114      	movs	r1, #20
 80033fa:	0018      	movs	r0, r3
 80033fc:	f7fc fe8a 	bl	8000114 <__udivsi3>
 8003400:	0003      	movs	r3, r0
 8003402:	009a      	lsls	r2, r3, #2
 8003404:	687b      	ldr	r3, [r7, #4]
 8003406:	641a      	str	r2, [r3, #64]	; 0x40
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	2225      	movs	r2, #37	; 0x25
 800340c:	2102      	movs	r1, #2
 800340e:	5499      	strb	r1, [r3, r2]
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	681b      	ldr	r3, [r3, #0]
 8003414:	681a      	ldr	r2, [r3, #0]
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	681b      	ldr	r3, [r3, #0]
 800341a:	4934      	ldr	r1, [pc, #208]	; (80034ec <HAL_DMA_Init+0x110>)
 800341c:	400a      	ands	r2, r1
 800341e:	601a      	str	r2, [r3, #0]
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	681b      	ldr	r3, [r3, #0]
 8003424:	6819      	ldr	r1, [r3, #0]
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	689a      	ldr	r2, [r3, #8]
 800342a:	687b      	ldr	r3, [r7, #4]
 800342c:	68db      	ldr	r3, [r3, #12]
 800342e:	431a      	orrs	r2, r3
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	691b      	ldr	r3, [r3, #16]
 8003434:	431a      	orrs	r2, r3
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	695b      	ldr	r3, [r3, #20]
 800343a:	431a      	orrs	r2, r3
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	699b      	ldr	r3, [r3, #24]
 8003440:	431a      	orrs	r2, r3
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	69db      	ldr	r3, [r3, #28]
 8003446:	431a      	orrs	r2, r3
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	6a1b      	ldr	r3, [r3, #32]
 800344c:	431a      	orrs	r2, r3
 800344e:	687b      	ldr	r3, [r7, #4]
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	430a      	orrs	r2, r1
 8003454:	601a      	str	r2, [r3, #0]
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	0018      	movs	r0, r3
 800345a:	f000 fa8d 	bl	8003978 <DMA_CalcDMAMUXChannelBaseAndMask>
 800345e:	687b      	ldr	r3, [r7, #4]
 8003460:	689a      	ldr	r2, [r3, #8]
 8003462:	2380      	movs	r3, #128	; 0x80
 8003464:	01db      	lsls	r3, r3, #7
 8003466:	429a      	cmp	r2, r3
 8003468:	d102      	bne.n	8003470 <HAL_DMA_Init+0x94>
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	2200      	movs	r2, #0
 800346e:	605a      	str	r2, [r3, #4]
 8003470:	687b      	ldr	r3, [r7, #4]
 8003472:	685a      	ldr	r2, [r3, #4]
 8003474:	687b      	ldr	r3, [r7, #4]
 8003476:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003478:	213f      	movs	r1, #63	; 0x3f
 800347a:	400a      	ands	r2, r1
 800347c:	601a      	str	r2, [r3, #0]
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003482:	687a      	ldr	r2, [r7, #4]
 8003484:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 8003486:	605a      	str	r2, [r3, #4]
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	685b      	ldr	r3, [r3, #4]
 800348c:	2b00      	cmp	r3, #0
 800348e:	d011      	beq.n	80034b4 <HAL_DMA_Init+0xd8>
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	685b      	ldr	r3, [r3, #4]
 8003494:	2b04      	cmp	r3, #4
 8003496:	d80d      	bhi.n	80034b4 <HAL_DMA_Init+0xd8>
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	0018      	movs	r0, r3
 800349c:	f000 fa98 	bl	80039d0 <DMA_CalcDMAMUXRequestGenBaseAndMask>
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80034a4:	2200      	movs	r2, #0
 80034a6:	601a      	str	r2, [r3, #0]
 80034a8:	687b      	ldr	r3, [r7, #4]
 80034aa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80034ac:	687a      	ldr	r2, [r7, #4]
 80034ae:	6d92      	ldr	r2, [r2, #88]	; 0x58
 80034b0:	605a      	str	r2, [r3, #4]
 80034b2:	e008      	b.n	80034c6 <HAL_DMA_Init+0xea>
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	2200      	movs	r2, #0
 80034b8:	651a      	str	r2, [r3, #80]	; 0x50
 80034ba:	687b      	ldr	r3, [r7, #4]
 80034bc:	2200      	movs	r2, #0
 80034be:	655a      	str	r2, [r3, #84]	; 0x54
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	2200      	movs	r2, #0
 80034c4:	659a      	str	r2, [r3, #88]	; 0x58
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	2200      	movs	r2, #0
 80034ca:	63da      	str	r2, [r3, #60]	; 0x3c
 80034cc:	687b      	ldr	r3, [r7, #4]
 80034ce:	2225      	movs	r2, #37	; 0x25
 80034d0:	2101      	movs	r1, #1
 80034d2:	5499      	strb	r1, [r3, r2]
 80034d4:	687b      	ldr	r3, [r7, #4]
 80034d6:	2224      	movs	r2, #36	; 0x24
 80034d8:	2100      	movs	r1, #0
 80034da:	5499      	strb	r1, [r3, r2]
 80034dc:	2300      	movs	r3, #0
 80034de:	0018      	movs	r0, r3
 80034e0:	46bd      	mov	sp, r7
 80034e2:	b002      	add	sp, #8
 80034e4:	bd80      	pop	{r7, pc}
 80034e6:	46c0      	nop			; (mov r8, r8)
 80034e8:	bffdfff8 	.word	0xbffdfff8
 80034ec:	ffff800f 	.word	0xffff800f

080034f0 <HAL_DMA_Start_IT>:
 80034f0:	b580      	push	{r7, lr}
 80034f2:	b086      	sub	sp, #24
 80034f4:	af00      	add	r7, sp, #0
 80034f6:	60f8      	str	r0, [r7, #12]
 80034f8:	60b9      	str	r1, [r7, #8]
 80034fa:	607a      	str	r2, [r7, #4]
 80034fc:	603b      	str	r3, [r7, #0]
 80034fe:	2317      	movs	r3, #23
 8003500:	18fb      	adds	r3, r7, r3
 8003502:	2200      	movs	r2, #0
 8003504:	701a      	strb	r2, [r3, #0]
 8003506:	68fb      	ldr	r3, [r7, #12]
 8003508:	2224      	movs	r2, #36	; 0x24
 800350a:	5c9b      	ldrb	r3, [r3, r2]
 800350c:	2b01      	cmp	r3, #1
 800350e:	d101      	bne.n	8003514 <HAL_DMA_Start_IT+0x24>
 8003510:	2302      	movs	r3, #2
 8003512:	e06f      	b.n	80035f4 <HAL_DMA_Start_IT+0x104>
 8003514:	68fb      	ldr	r3, [r7, #12]
 8003516:	2224      	movs	r2, #36	; 0x24
 8003518:	2101      	movs	r1, #1
 800351a:	5499      	strb	r1, [r3, r2]
 800351c:	68fb      	ldr	r3, [r7, #12]
 800351e:	2225      	movs	r2, #37	; 0x25
 8003520:	5c9b      	ldrb	r3, [r3, r2]
 8003522:	b2db      	uxtb	r3, r3
 8003524:	2b01      	cmp	r3, #1
 8003526:	d157      	bne.n	80035d8 <HAL_DMA_Start_IT+0xe8>
 8003528:	68fb      	ldr	r3, [r7, #12]
 800352a:	2225      	movs	r2, #37	; 0x25
 800352c:	2102      	movs	r1, #2
 800352e:	5499      	strb	r1, [r3, r2]
 8003530:	68fb      	ldr	r3, [r7, #12]
 8003532:	2200      	movs	r2, #0
 8003534:	63da      	str	r2, [r3, #60]	; 0x3c
 8003536:	68fb      	ldr	r3, [r7, #12]
 8003538:	681b      	ldr	r3, [r3, #0]
 800353a:	681a      	ldr	r2, [r3, #0]
 800353c:	68fb      	ldr	r3, [r7, #12]
 800353e:	681b      	ldr	r3, [r3, #0]
 8003540:	2101      	movs	r1, #1
 8003542:	438a      	bics	r2, r1
 8003544:	601a      	str	r2, [r3, #0]
 8003546:	683b      	ldr	r3, [r7, #0]
 8003548:	687a      	ldr	r2, [r7, #4]
 800354a:	68b9      	ldr	r1, [r7, #8]
 800354c:	68f8      	ldr	r0, [r7, #12]
 800354e:	f000 f9d3 	bl	80038f8 <DMA_SetConfig>
 8003552:	68fb      	ldr	r3, [r7, #12]
 8003554:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003556:	2b00      	cmp	r3, #0
 8003558:	d008      	beq.n	800356c <HAL_DMA_Start_IT+0x7c>
 800355a:	68fb      	ldr	r3, [r7, #12]
 800355c:	681b      	ldr	r3, [r3, #0]
 800355e:	681a      	ldr	r2, [r3, #0]
 8003560:	68fb      	ldr	r3, [r7, #12]
 8003562:	681b      	ldr	r3, [r3, #0]
 8003564:	210e      	movs	r1, #14
 8003566:	430a      	orrs	r2, r1
 8003568:	601a      	str	r2, [r3, #0]
 800356a:	e00f      	b.n	800358c <HAL_DMA_Start_IT+0x9c>
 800356c:	68fb      	ldr	r3, [r7, #12]
 800356e:	681b      	ldr	r3, [r3, #0]
 8003570:	681a      	ldr	r2, [r3, #0]
 8003572:	68fb      	ldr	r3, [r7, #12]
 8003574:	681b      	ldr	r3, [r3, #0]
 8003576:	2104      	movs	r1, #4
 8003578:	438a      	bics	r2, r1
 800357a:	601a      	str	r2, [r3, #0]
 800357c:	68fb      	ldr	r3, [r7, #12]
 800357e:	681b      	ldr	r3, [r3, #0]
 8003580:	681a      	ldr	r2, [r3, #0]
 8003582:	68fb      	ldr	r3, [r7, #12]
 8003584:	681b      	ldr	r3, [r3, #0]
 8003586:	210a      	movs	r1, #10
 8003588:	430a      	orrs	r2, r1
 800358a:	601a      	str	r2, [r3, #0]
 800358c:	68fb      	ldr	r3, [r7, #12]
 800358e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003590:	681a      	ldr	r2, [r3, #0]
 8003592:	2380      	movs	r3, #128	; 0x80
 8003594:	025b      	lsls	r3, r3, #9
 8003596:	4013      	ands	r3, r2
 8003598:	d008      	beq.n	80035ac <HAL_DMA_Start_IT+0xbc>
 800359a:	68fb      	ldr	r3, [r7, #12]
 800359c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800359e:	681a      	ldr	r2, [r3, #0]
 80035a0:	68fb      	ldr	r3, [r7, #12]
 80035a2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80035a4:	2180      	movs	r1, #128	; 0x80
 80035a6:	0049      	lsls	r1, r1, #1
 80035a8:	430a      	orrs	r2, r1
 80035aa:	601a      	str	r2, [r3, #0]
 80035ac:	68fb      	ldr	r3, [r7, #12]
 80035ae:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80035b0:	2b00      	cmp	r3, #0
 80035b2:	d008      	beq.n	80035c6 <HAL_DMA_Start_IT+0xd6>
 80035b4:	68fb      	ldr	r3, [r7, #12]
 80035b6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80035b8:	681a      	ldr	r2, [r3, #0]
 80035ba:	68fb      	ldr	r3, [r7, #12]
 80035bc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80035be:	2180      	movs	r1, #128	; 0x80
 80035c0:	0049      	lsls	r1, r1, #1
 80035c2:	430a      	orrs	r2, r1
 80035c4:	601a      	str	r2, [r3, #0]
 80035c6:	68fb      	ldr	r3, [r7, #12]
 80035c8:	681b      	ldr	r3, [r3, #0]
 80035ca:	681a      	ldr	r2, [r3, #0]
 80035cc:	68fb      	ldr	r3, [r7, #12]
 80035ce:	681b      	ldr	r3, [r3, #0]
 80035d0:	2101      	movs	r1, #1
 80035d2:	430a      	orrs	r2, r1
 80035d4:	601a      	str	r2, [r3, #0]
 80035d6:	e00a      	b.n	80035ee <HAL_DMA_Start_IT+0xfe>
 80035d8:	68fb      	ldr	r3, [r7, #12]
 80035da:	2280      	movs	r2, #128	; 0x80
 80035dc:	63da      	str	r2, [r3, #60]	; 0x3c
 80035de:	68fb      	ldr	r3, [r7, #12]
 80035e0:	2224      	movs	r2, #36	; 0x24
 80035e2:	2100      	movs	r1, #0
 80035e4:	5499      	strb	r1, [r3, r2]
 80035e6:	2317      	movs	r3, #23
 80035e8:	18fb      	adds	r3, r7, r3
 80035ea:	2201      	movs	r2, #1
 80035ec:	701a      	strb	r2, [r3, #0]
 80035ee:	2317      	movs	r3, #23
 80035f0:	18fb      	adds	r3, r7, r3
 80035f2:	781b      	ldrb	r3, [r3, #0]
 80035f4:	0018      	movs	r0, r3
 80035f6:	46bd      	mov	sp, r7
 80035f8:	b006      	add	sp, #24
 80035fa:	bd80      	pop	{r7, pc}

080035fc <HAL_DMA_Abort>:
 80035fc:	b580      	push	{r7, lr}
 80035fe:	b082      	sub	sp, #8
 8003600:	af00      	add	r7, sp, #0
 8003602:	6078      	str	r0, [r7, #4]
 8003604:	687b      	ldr	r3, [r7, #4]
 8003606:	2b00      	cmp	r3, #0
 8003608:	d101      	bne.n	800360e <HAL_DMA_Abort+0x12>
 800360a:	2301      	movs	r3, #1
 800360c:	e050      	b.n	80036b0 <HAL_DMA_Abort+0xb4>
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	2225      	movs	r2, #37	; 0x25
 8003612:	5c9b      	ldrb	r3, [r3, r2]
 8003614:	b2db      	uxtb	r3, r3
 8003616:	2b02      	cmp	r3, #2
 8003618:	d008      	beq.n	800362c <HAL_DMA_Abort+0x30>
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	2204      	movs	r2, #4
 800361e:	63da      	str	r2, [r3, #60]	; 0x3c
 8003620:	687b      	ldr	r3, [r7, #4]
 8003622:	2224      	movs	r2, #36	; 0x24
 8003624:	2100      	movs	r1, #0
 8003626:	5499      	strb	r1, [r3, r2]
 8003628:	2301      	movs	r3, #1
 800362a:	e041      	b.n	80036b0 <HAL_DMA_Abort+0xb4>
 800362c:	687b      	ldr	r3, [r7, #4]
 800362e:	681b      	ldr	r3, [r3, #0]
 8003630:	681a      	ldr	r2, [r3, #0]
 8003632:	687b      	ldr	r3, [r7, #4]
 8003634:	681b      	ldr	r3, [r3, #0]
 8003636:	210e      	movs	r1, #14
 8003638:	438a      	bics	r2, r1
 800363a:	601a      	str	r2, [r3, #0]
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003640:	681a      	ldr	r2, [r3, #0]
 8003642:	687b      	ldr	r3, [r7, #4]
 8003644:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003646:	491c      	ldr	r1, [pc, #112]	; (80036b8 <HAL_DMA_Abort+0xbc>)
 8003648:	400a      	ands	r2, r1
 800364a:	601a      	str	r2, [r3, #0]
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	681b      	ldr	r3, [r3, #0]
 8003650:	681a      	ldr	r2, [r3, #0]
 8003652:	687b      	ldr	r3, [r7, #4]
 8003654:	681b      	ldr	r3, [r3, #0]
 8003656:	2101      	movs	r1, #1
 8003658:	438a      	bics	r2, r1
 800365a:	601a      	str	r2, [r3, #0]
 800365c:	4b17      	ldr	r3, [pc, #92]	; (80036bc <HAL_DMA_Abort+0xc0>)
 800365e:	6859      	ldr	r1, [r3, #4]
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003664:	221c      	movs	r2, #28
 8003666:	4013      	ands	r3, r2
 8003668:	2201      	movs	r2, #1
 800366a:	409a      	lsls	r2, r3
 800366c:	4b13      	ldr	r3, [pc, #76]	; (80036bc <HAL_DMA_Abort+0xc0>)
 800366e:	430a      	orrs	r2, r1
 8003670:	605a      	str	r2, [r3, #4]
 8003672:	687b      	ldr	r3, [r7, #4]
 8003674:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003676:	687a      	ldr	r2, [r7, #4]
 8003678:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 800367a:	605a      	str	r2, [r3, #4]
 800367c:	687b      	ldr	r3, [r7, #4]
 800367e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003680:	2b00      	cmp	r3, #0
 8003682:	d00c      	beq.n	800369e <HAL_DMA_Abort+0xa2>
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003688:	681a      	ldr	r2, [r3, #0]
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800368e:	490a      	ldr	r1, [pc, #40]	; (80036b8 <HAL_DMA_Abort+0xbc>)
 8003690:	400a      	ands	r2, r1
 8003692:	601a      	str	r2, [r3, #0]
 8003694:	687b      	ldr	r3, [r7, #4]
 8003696:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003698:	687a      	ldr	r2, [r7, #4]
 800369a:	6d92      	ldr	r2, [r2, #88]	; 0x58
 800369c:	605a      	str	r2, [r3, #4]
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	2225      	movs	r2, #37	; 0x25
 80036a2:	2101      	movs	r1, #1
 80036a4:	5499      	strb	r1, [r3, r2]
 80036a6:	687b      	ldr	r3, [r7, #4]
 80036a8:	2224      	movs	r2, #36	; 0x24
 80036aa:	2100      	movs	r1, #0
 80036ac:	5499      	strb	r1, [r3, r2]
 80036ae:	2300      	movs	r3, #0
 80036b0:	0018      	movs	r0, r3
 80036b2:	46bd      	mov	sp, r7
 80036b4:	b002      	add	sp, #8
 80036b6:	bd80      	pop	{r7, pc}
 80036b8:	fffffeff 	.word	0xfffffeff
 80036bc:	40020000 	.word	0x40020000

080036c0 <HAL_DMA_Abort_IT>:
 80036c0:	b580      	push	{r7, lr}
 80036c2:	b084      	sub	sp, #16
 80036c4:	af00      	add	r7, sp, #0
 80036c6:	6078      	str	r0, [r7, #4]
 80036c8:	210f      	movs	r1, #15
 80036ca:	187b      	adds	r3, r7, r1
 80036cc:	2200      	movs	r2, #0
 80036ce:	701a      	strb	r2, [r3, #0]
 80036d0:	687b      	ldr	r3, [r7, #4]
 80036d2:	2225      	movs	r2, #37	; 0x25
 80036d4:	5c9b      	ldrb	r3, [r3, r2]
 80036d6:	b2db      	uxtb	r3, r3
 80036d8:	2b02      	cmp	r3, #2
 80036da:	d006      	beq.n	80036ea <HAL_DMA_Abort_IT+0x2a>
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	2204      	movs	r2, #4
 80036e0:	63da      	str	r2, [r3, #60]	; 0x3c
 80036e2:	187b      	adds	r3, r7, r1
 80036e4:	2201      	movs	r2, #1
 80036e6:	701a      	strb	r2, [r3, #0]
 80036e8:	e049      	b.n	800377e <HAL_DMA_Abort_IT+0xbe>
 80036ea:	687b      	ldr	r3, [r7, #4]
 80036ec:	681b      	ldr	r3, [r3, #0]
 80036ee:	681a      	ldr	r2, [r3, #0]
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	681b      	ldr	r3, [r3, #0]
 80036f4:	210e      	movs	r1, #14
 80036f6:	438a      	bics	r2, r1
 80036f8:	601a      	str	r2, [r3, #0]
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	681b      	ldr	r3, [r3, #0]
 80036fe:	681a      	ldr	r2, [r3, #0]
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	681b      	ldr	r3, [r3, #0]
 8003704:	2101      	movs	r1, #1
 8003706:	438a      	bics	r2, r1
 8003708:	601a      	str	r2, [r3, #0]
 800370a:	687b      	ldr	r3, [r7, #4]
 800370c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800370e:	681a      	ldr	r2, [r3, #0]
 8003710:	687b      	ldr	r3, [r7, #4]
 8003712:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003714:	491d      	ldr	r1, [pc, #116]	; (800378c <HAL_DMA_Abort_IT+0xcc>)
 8003716:	400a      	ands	r2, r1
 8003718:	601a      	str	r2, [r3, #0]
 800371a:	4b1d      	ldr	r3, [pc, #116]	; (8003790 <HAL_DMA_Abort_IT+0xd0>)
 800371c:	6859      	ldr	r1, [r3, #4]
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003722:	221c      	movs	r2, #28
 8003724:	4013      	ands	r3, r2
 8003726:	2201      	movs	r2, #1
 8003728:	409a      	lsls	r2, r3
 800372a:	4b19      	ldr	r3, [pc, #100]	; (8003790 <HAL_DMA_Abort_IT+0xd0>)
 800372c:	430a      	orrs	r2, r1
 800372e:	605a      	str	r2, [r3, #4]
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003734:	687a      	ldr	r2, [r7, #4]
 8003736:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 8003738:	605a      	str	r2, [r3, #4]
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800373e:	2b00      	cmp	r3, #0
 8003740:	d00c      	beq.n	800375c <HAL_DMA_Abort_IT+0x9c>
 8003742:	687b      	ldr	r3, [r7, #4]
 8003744:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003746:	681a      	ldr	r2, [r3, #0]
 8003748:	687b      	ldr	r3, [r7, #4]
 800374a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800374c:	490f      	ldr	r1, [pc, #60]	; (800378c <HAL_DMA_Abort_IT+0xcc>)
 800374e:	400a      	ands	r2, r1
 8003750:	601a      	str	r2, [r3, #0]
 8003752:	687b      	ldr	r3, [r7, #4]
 8003754:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003756:	687a      	ldr	r2, [r7, #4]
 8003758:	6d92      	ldr	r2, [r2, #88]	; 0x58
 800375a:	605a      	str	r2, [r3, #4]
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	2225      	movs	r2, #37	; 0x25
 8003760:	2101      	movs	r1, #1
 8003762:	5499      	strb	r1, [r3, r2]
 8003764:	687b      	ldr	r3, [r7, #4]
 8003766:	2224      	movs	r2, #36	; 0x24
 8003768:	2100      	movs	r1, #0
 800376a:	5499      	strb	r1, [r3, r2]
 800376c:	687b      	ldr	r3, [r7, #4]
 800376e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003770:	2b00      	cmp	r3, #0
 8003772:	d004      	beq.n	800377e <HAL_DMA_Abort_IT+0xbe>
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003778:	687a      	ldr	r2, [r7, #4]
 800377a:	0010      	movs	r0, r2
 800377c:	4798      	blx	r3
 800377e:	230f      	movs	r3, #15
 8003780:	18fb      	adds	r3, r7, r3
 8003782:	781b      	ldrb	r3, [r3, #0]
 8003784:	0018      	movs	r0, r3
 8003786:	46bd      	mov	sp, r7
 8003788:	b004      	add	sp, #16
 800378a:	bd80      	pop	{r7, pc}
 800378c:	fffffeff 	.word	0xfffffeff
 8003790:	40020000 	.word	0x40020000

08003794 <HAL_DMA_IRQHandler>:
 8003794:	b580      	push	{r7, lr}
 8003796:	b084      	sub	sp, #16
 8003798:	af00      	add	r7, sp, #0
 800379a:	6078      	str	r0, [r7, #4]
 800379c:	4b55      	ldr	r3, [pc, #340]	; (80038f4 <HAL_DMA_IRQHandler+0x160>)
 800379e:	681b      	ldr	r3, [r3, #0]
 80037a0:	60fb      	str	r3, [r7, #12]
 80037a2:	687b      	ldr	r3, [r7, #4]
 80037a4:	681b      	ldr	r3, [r3, #0]
 80037a6:	681b      	ldr	r3, [r3, #0]
 80037a8:	60bb      	str	r3, [r7, #8]
 80037aa:	687b      	ldr	r3, [r7, #4]
 80037ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80037ae:	221c      	movs	r2, #28
 80037b0:	4013      	ands	r3, r2
 80037b2:	2204      	movs	r2, #4
 80037b4:	409a      	lsls	r2, r3
 80037b6:	0013      	movs	r3, r2
 80037b8:	68fa      	ldr	r2, [r7, #12]
 80037ba:	4013      	ands	r3, r2
 80037bc:	d027      	beq.n	800380e <HAL_DMA_IRQHandler+0x7a>
 80037be:	68bb      	ldr	r3, [r7, #8]
 80037c0:	2204      	movs	r2, #4
 80037c2:	4013      	ands	r3, r2
 80037c4:	d023      	beq.n	800380e <HAL_DMA_IRQHandler+0x7a>
 80037c6:	687b      	ldr	r3, [r7, #4]
 80037c8:	681b      	ldr	r3, [r3, #0]
 80037ca:	681b      	ldr	r3, [r3, #0]
 80037cc:	2220      	movs	r2, #32
 80037ce:	4013      	ands	r3, r2
 80037d0:	d107      	bne.n	80037e2 <HAL_DMA_IRQHandler+0x4e>
 80037d2:	687b      	ldr	r3, [r7, #4]
 80037d4:	681b      	ldr	r3, [r3, #0]
 80037d6:	681a      	ldr	r2, [r3, #0]
 80037d8:	687b      	ldr	r3, [r7, #4]
 80037da:	681b      	ldr	r3, [r3, #0]
 80037dc:	2104      	movs	r1, #4
 80037de:	438a      	bics	r2, r1
 80037e0:	601a      	str	r2, [r3, #0]
 80037e2:	4b44      	ldr	r3, [pc, #272]	; (80038f4 <HAL_DMA_IRQHandler+0x160>)
 80037e4:	6859      	ldr	r1, [r3, #4]
 80037e6:	687b      	ldr	r3, [r7, #4]
 80037e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80037ea:	221c      	movs	r2, #28
 80037ec:	4013      	ands	r3, r2
 80037ee:	2204      	movs	r2, #4
 80037f0:	409a      	lsls	r2, r3
 80037f2:	4b40      	ldr	r3, [pc, #256]	; (80038f4 <HAL_DMA_IRQHandler+0x160>)
 80037f4:	430a      	orrs	r2, r1
 80037f6:	605a      	str	r2, [r3, #4]
 80037f8:	687b      	ldr	r3, [r7, #4]
 80037fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80037fc:	2b00      	cmp	r3, #0
 80037fe:	d100      	bne.n	8003802 <HAL_DMA_IRQHandler+0x6e>
 8003800:	e073      	b.n	80038ea <HAL_DMA_IRQHandler+0x156>
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003806:	687a      	ldr	r2, [r7, #4]
 8003808:	0010      	movs	r0, r2
 800380a:	4798      	blx	r3
 800380c:	e06d      	b.n	80038ea <HAL_DMA_IRQHandler+0x156>
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003812:	221c      	movs	r2, #28
 8003814:	4013      	ands	r3, r2
 8003816:	2202      	movs	r2, #2
 8003818:	409a      	lsls	r2, r3
 800381a:	0013      	movs	r3, r2
 800381c:	68fa      	ldr	r2, [r7, #12]
 800381e:	4013      	ands	r3, r2
 8003820:	d02e      	beq.n	8003880 <HAL_DMA_IRQHandler+0xec>
 8003822:	68bb      	ldr	r3, [r7, #8]
 8003824:	2202      	movs	r2, #2
 8003826:	4013      	ands	r3, r2
 8003828:	d02a      	beq.n	8003880 <HAL_DMA_IRQHandler+0xec>
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	681b      	ldr	r3, [r3, #0]
 800382e:	681b      	ldr	r3, [r3, #0]
 8003830:	2220      	movs	r2, #32
 8003832:	4013      	ands	r3, r2
 8003834:	d10b      	bne.n	800384e <HAL_DMA_IRQHandler+0xba>
 8003836:	687b      	ldr	r3, [r7, #4]
 8003838:	681b      	ldr	r3, [r3, #0]
 800383a:	681a      	ldr	r2, [r3, #0]
 800383c:	687b      	ldr	r3, [r7, #4]
 800383e:	681b      	ldr	r3, [r3, #0]
 8003840:	210a      	movs	r1, #10
 8003842:	438a      	bics	r2, r1
 8003844:	601a      	str	r2, [r3, #0]
 8003846:	687b      	ldr	r3, [r7, #4]
 8003848:	2225      	movs	r2, #37	; 0x25
 800384a:	2101      	movs	r1, #1
 800384c:	5499      	strb	r1, [r3, r2]
 800384e:	4b29      	ldr	r3, [pc, #164]	; (80038f4 <HAL_DMA_IRQHandler+0x160>)
 8003850:	6859      	ldr	r1, [r3, #4]
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003856:	221c      	movs	r2, #28
 8003858:	4013      	ands	r3, r2
 800385a:	2202      	movs	r2, #2
 800385c:	409a      	lsls	r2, r3
 800385e:	4b25      	ldr	r3, [pc, #148]	; (80038f4 <HAL_DMA_IRQHandler+0x160>)
 8003860:	430a      	orrs	r2, r1
 8003862:	605a      	str	r2, [r3, #4]
 8003864:	687b      	ldr	r3, [r7, #4]
 8003866:	2224      	movs	r2, #36	; 0x24
 8003868:	2100      	movs	r1, #0
 800386a:	5499      	strb	r1, [r3, r2]
 800386c:	687b      	ldr	r3, [r7, #4]
 800386e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003870:	2b00      	cmp	r3, #0
 8003872:	d03a      	beq.n	80038ea <HAL_DMA_IRQHandler+0x156>
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003878:	687a      	ldr	r2, [r7, #4]
 800387a:	0010      	movs	r0, r2
 800387c:	4798      	blx	r3
 800387e:	e034      	b.n	80038ea <HAL_DMA_IRQHandler+0x156>
 8003880:	687b      	ldr	r3, [r7, #4]
 8003882:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003884:	221c      	movs	r2, #28
 8003886:	4013      	ands	r3, r2
 8003888:	2208      	movs	r2, #8
 800388a:	409a      	lsls	r2, r3
 800388c:	0013      	movs	r3, r2
 800388e:	68fa      	ldr	r2, [r7, #12]
 8003890:	4013      	ands	r3, r2
 8003892:	d02b      	beq.n	80038ec <HAL_DMA_IRQHandler+0x158>
 8003894:	68bb      	ldr	r3, [r7, #8]
 8003896:	2208      	movs	r2, #8
 8003898:	4013      	ands	r3, r2
 800389a:	d027      	beq.n	80038ec <HAL_DMA_IRQHandler+0x158>
 800389c:	687b      	ldr	r3, [r7, #4]
 800389e:	681b      	ldr	r3, [r3, #0]
 80038a0:	681a      	ldr	r2, [r3, #0]
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	210e      	movs	r1, #14
 80038a8:	438a      	bics	r2, r1
 80038aa:	601a      	str	r2, [r3, #0]
 80038ac:	4b11      	ldr	r3, [pc, #68]	; (80038f4 <HAL_DMA_IRQHandler+0x160>)
 80038ae:	6859      	ldr	r1, [r3, #4]
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80038b4:	221c      	movs	r2, #28
 80038b6:	4013      	ands	r3, r2
 80038b8:	2201      	movs	r2, #1
 80038ba:	409a      	lsls	r2, r3
 80038bc:	4b0d      	ldr	r3, [pc, #52]	; (80038f4 <HAL_DMA_IRQHandler+0x160>)
 80038be:	430a      	orrs	r2, r1
 80038c0:	605a      	str	r2, [r3, #4]
 80038c2:	687b      	ldr	r3, [r7, #4]
 80038c4:	2201      	movs	r2, #1
 80038c6:	63da      	str	r2, [r3, #60]	; 0x3c
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	2225      	movs	r2, #37	; 0x25
 80038cc:	2101      	movs	r1, #1
 80038ce:	5499      	strb	r1, [r3, r2]
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	2224      	movs	r2, #36	; 0x24
 80038d4:	2100      	movs	r1, #0
 80038d6:	5499      	strb	r1, [r3, r2]
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80038dc:	2b00      	cmp	r3, #0
 80038de:	d005      	beq.n	80038ec <HAL_DMA_IRQHandler+0x158>
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80038e4:	687a      	ldr	r2, [r7, #4]
 80038e6:	0010      	movs	r0, r2
 80038e8:	4798      	blx	r3
 80038ea:	46c0      	nop			; (mov r8, r8)
 80038ec:	46c0      	nop			; (mov r8, r8)
 80038ee:	46bd      	mov	sp, r7
 80038f0:	b004      	add	sp, #16
 80038f2:	bd80      	pop	{r7, pc}
 80038f4:	40020000 	.word	0x40020000

080038f8 <DMA_SetConfig>:
 80038f8:	b580      	push	{r7, lr}
 80038fa:	b084      	sub	sp, #16
 80038fc:	af00      	add	r7, sp, #0
 80038fe:	60f8      	str	r0, [r7, #12]
 8003900:	60b9      	str	r1, [r7, #8]
 8003902:	607a      	str	r2, [r7, #4]
 8003904:	603b      	str	r3, [r7, #0]
 8003906:	68fb      	ldr	r3, [r7, #12]
 8003908:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800390a:	68fa      	ldr	r2, [r7, #12]
 800390c:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 800390e:	605a      	str	r2, [r3, #4]
 8003910:	68fb      	ldr	r3, [r7, #12]
 8003912:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003914:	2b00      	cmp	r3, #0
 8003916:	d004      	beq.n	8003922 <DMA_SetConfig+0x2a>
 8003918:	68fb      	ldr	r3, [r7, #12]
 800391a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800391c:	68fa      	ldr	r2, [r7, #12]
 800391e:	6d92      	ldr	r2, [r2, #88]	; 0x58
 8003920:	605a      	str	r2, [r3, #4]
 8003922:	4b14      	ldr	r3, [pc, #80]	; (8003974 <DMA_SetConfig+0x7c>)
 8003924:	6859      	ldr	r1, [r3, #4]
 8003926:	68fb      	ldr	r3, [r7, #12]
 8003928:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800392a:	221c      	movs	r2, #28
 800392c:	4013      	ands	r3, r2
 800392e:	2201      	movs	r2, #1
 8003930:	409a      	lsls	r2, r3
 8003932:	4b10      	ldr	r3, [pc, #64]	; (8003974 <DMA_SetConfig+0x7c>)
 8003934:	430a      	orrs	r2, r1
 8003936:	605a      	str	r2, [r3, #4]
 8003938:	68fb      	ldr	r3, [r7, #12]
 800393a:	681b      	ldr	r3, [r3, #0]
 800393c:	683a      	ldr	r2, [r7, #0]
 800393e:	605a      	str	r2, [r3, #4]
 8003940:	68fb      	ldr	r3, [r7, #12]
 8003942:	689b      	ldr	r3, [r3, #8]
 8003944:	2b10      	cmp	r3, #16
 8003946:	d108      	bne.n	800395a <DMA_SetConfig+0x62>
 8003948:	68fb      	ldr	r3, [r7, #12]
 800394a:	681b      	ldr	r3, [r3, #0]
 800394c:	687a      	ldr	r2, [r7, #4]
 800394e:	609a      	str	r2, [r3, #8]
 8003950:	68fb      	ldr	r3, [r7, #12]
 8003952:	681b      	ldr	r3, [r3, #0]
 8003954:	68ba      	ldr	r2, [r7, #8]
 8003956:	60da      	str	r2, [r3, #12]
 8003958:	e007      	b.n	800396a <DMA_SetConfig+0x72>
 800395a:	68fb      	ldr	r3, [r7, #12]
 800395c:	681b      	ldr	r3, [r3, #0]
 800395e:	68ba      	ldr	r2, [r7, #8]
 8003960:	609a      	str	r2, [r3, #8]
 8003962:	68fb      	ldr	r3, [r7, #12]
 8003964:	681b      	ldr	r3, [r3, #0]
 8003966:	687a      	ldr	r2, [r7, #4]
 8003968:	60da      	str	r2, [r3, #12]
 800396a:	46c0      	nop			; (mov r8, r8)
 800396c:	46bd      	mov	sp, r7
 800396e:	b004      	add	sp, #16
 8003970:	bd80      	pop	{r7, pc}
 8003972:	46c0      	nop			; (mov r8, r8)
 8003974:	40020000 	.word	0x40020000

08003978 <DMA_CalcDMAMUXChannelBaseAndMask>:
 8003978:	b580      	push	{r7, lr}
 800397a:	b084      	sub	sp, #16
 800397c:	af00      	add	r7, sp, #0
 800397e:	6078      	str	r0, [r7, #4]
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003984:	089b      	lsrs	r3, r3, #2
 8003986:	4a10      	ldr	r2, [pc, #64]	; (80039c8 <DMA_CalcDMAMUXChannelBaseAndMask+0x50>)
 8003988:	4694      	mov	ip, r2
 800398a:	4463      	add	r3, ip
 800398c:	009b      	lsls	r3, r3, #2
 800398e:	001a      	movs	r2, r3
 8003990:	687b      	ldr	r3, [r7, #4]
 8003992:	645a      	str	r2, [r3, #68]	; 0x44
 8003994:	687b      	ldr	r3, [r7, #4]
 8003996:	681b      	ldr	r3, [r3, #0]
 8003998:	001a      	movs	r2, r3
 800399a:	23ff      	movs	r3, #255	; 0xff
 800399c:	4013      	ands	r3, r2
 800399e:	3b08      	subs	r3, #8
 80039a0:	2114      	movs	r1, #20
 80039a2:	0018      	movs	r0, r3
 80039a4:	f7fc fbb6 	bl	8000114 <__udivsi3>
 80039a8:	0003      	movs	r3, r0
 80039aa:	60fb      	str	r3, [r7, #12]
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	4a07      	ldr	r2, [pc, #28]	; (80039cc <DMA_CalcDMAMUXChannelBaseAndMask+0x54>)
 80039b0:	649a      	str	r2, [r3, #72]	; 0x48
 80039b2:	68fb      	ldr	r3, [r7, #12]
 80039b4:	221f      	movs	r2, #31
 80039b6:	4013      	ands	r3, r2
 80039b8:	2201      	movs	r2, #1
 80039ba:	409a      	lsls	r2, r3
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	64da      	str	r2, [r3, #76]	; 0x4c
 80039c0:	46c0      	nop			; (mov r8, r8)
 80039c2:	46bd      	mov	sp, r7
 80039c4:	b004      	add	sp, #16
 80039c6:	bd80      	pop	{r7, pc}
 80039c8:	10008200 	.word	0x10008200
 80039cc:	40020880 	.word	0x40020880

080039d0 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
 80039d0:	b580      	push	{r7, lr}
 80039d2:	b084      	sub	sp, #16
 80039d4:	af00      	add	r7, sp, #0
 80039d6:	6078      	str	r0, [r7, #4]
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	685b      	ldr	r3, [r3, #4]
 80039dc:	223f      	movs	r2, #63	; 0x3f
 80039de:	4013      	ands	r3, r2
 80039e0:	60fb      	str	r3, [r7, #12]
 80039e2:	68fb      	ldr	r3, [r7, #12]
 80039e4:	4a0a      	ldr	r2, [pc, #40]	; (8003a10 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x40>)
 80039e6:	4694      	mov	ip, r2
 80039e8:	4463      	add	r3, ip
 80039ea:	009b      	lsls	r3, r3, #2
 80039ec:	001a      	movs	r2, r3
 80039ee:	687b      	ldr	r3, [r7, #4]
 80039f0:	651a      	str	r2, [r3, #80]	; 0x50
 80039f2:	687b      	ldr	r3, [r7, #4]
 80039f4:	4a07      	ldr	r2, [pc, #28]	; (8003a14 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x44>)
 80039f6:	655a      	str	r2, [r3, #84]	; 0x54
 80039f8:	68fb      	ldr	r3, [r7, #12]
 80039fa:	3b01      	subs	r3, #1
 80039fc:	2203      	movs	r2, #3
 80039fe:	4013      	ands	r3, r2
 8003a00:	2201      	movs	r2, #1
 8003a02:	409a      	lsls	r2, r3
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	659a      	str	r2, [r3, #88]	; 0x58
 8003a08:	46c0      	nop			; (mov r8, r8)
 8003a0a:	46bd      	mov	sp, r7
 8003a0c:	b004      	add	sp, #16
 8003a0e:	bd80      	pop	{r7, pc}
 8003a10:	1000823f 	.word	0x1000823f
 8003a14:	40020940 	.word	0x40020940

08003a18 <HAL_GPIO_Init>:
 8003a18:	b580      	push	{r7, lr}
 8003a1a:	b086      	sub	sp, #24
 8003a1c:	af00      	add	r7, sp, #0
 8003a1e:	6078      	str	r0, [r7, #4]
 8003a20:	6039      	str	r1, [r7, #0]
 8003a22:	2300      	movs	r3, #0
 8003a24:	617b      	str	r3, [r7, #20]
 8003a26:	e147      	b.n	8003cb8 <HAL_GPIO_Init+0x2a0>
 8003a28:	683b      	ldr	r3, [r7, #0]
 8003a2a:	681b      	ldr	r3, [r3, #0]
 8003a2c:	2101      	movs	r1, #1
 8003a2e:	697a      	ldr	r2, [r7, #20]
 8003a30:	4091      	lsls	r1, r2
 8003a32:	000a      	movs	r2, r1
 8003a34:	4013      	ands	r3, r2
 8003a36:	60fb      	str	r3, [r7, #12]
 8003a38:	68fb      	ldr	r3, [r7, #12]
 8003a3a:	2b00      	cmp	r3, #0
 8003a3c:	d100      	bne.n	8003a40 <HAL_GPIO_Init+0x28>
 8003a3e:	e138      	b.n	8003cb2 <HAL_GPIO_Init+0x29a>
 8003a40:	683b      	ldr	r3, [r7, #0]
 8003a42:	685b      	ldr	r3, [r3, #4]
 8003a44:	2203      	movs	r2, #3
 8003a46:	4013      	ands	r3, r2
 8003a48:	2b01      	cmp	r3, #1
 8003a4a:	d005      	beq.n	8003a58 <HAL_GPIO_Init+0x40>
 8003a4c:	683b      	ldr	r3, [r7, #0]
 8003a4e:	685b      	ldr	r3, [r3, #4]
 8003a50:	2203      	movs	r2, #3
 8003a52:	4013      	ands	r3, r2
 8003a54:	2b02      	cmp	r3, #2
 8003a56:	d130      	bne.n	8003aba <HAL_GPIO_Init+0xa2>
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	689b      	ldr	r3, [r3, #8]
 8003a5c:	613b      	str	r3, [r7, #16]
 8003a5e:	697b      	ldr	r3, [r7, #20]
 8003a60:	005b      	lsls	r3, r3, #1
 8003a62:	2203      	movs	r2, #3
 8003a64:	409a      	lsls	r2, r3
 8003a66:	0013      	movs	r3, r2
 8003a68:	43da      	mvns	r2, r3
 8003a6a:	693b      	ldr	r3, [r7, #16]
 8003a6c:	4013      	ands	r3, r2
 8003a6e:	613b      	str	r3, [r7, #16]
 8003a70:	683b      	ldr	r3, [r7, #0]
 8003a72:	68da      	ldr	r2, [r3, #12]
 8003a74:	697b      	ldr	r3, [r7, #20]
 8003a76:	005b      	lsls	r3, r3, #1
 8003a78:	409a      	lsls	r2, r3
 8003a7a:	0013      	movs	r3, r2
 8003a7c:	693a      	ldr	r2, [r7, #16]
 8003a7e:	4313      	orrs	r3, r2
 8003a80:	613b      	str	r3, [r7, #16]
 8003a82:	687b      	ldr	r3, [r7, #4]
 8003a84:	693a      	ldr	r2, [r7, #16]
 8003a86:	609a      	str	r2, [r3, #8]
 8003a88:	687b      	ldr	r3, [r7, #4]
 8003a8a:	685b      	ldr	r3, [r3, #4]
 8003a8c:	613b      	str	r3, [r7, #16]
 8003a8e:	2201      	movs	r2, #1
 8003a90:	697b      	ldr	r3, [r7, #20]
 8003a92:	409a      	lsls	r2, r3
 8003a94:	0013      	movs	r3, r2
 8003a96:	43da      	mvns	r2, r3
 8003a98:	693b      	ldr	r3, [r7, #16]
 8003a9a:	4013      	ands	r3, r2
 8003a9c:	613b      	str	r3, [r7, #16]
 8003a9e:	683b      	ldr	r3, [r7, #0]
 8003aa0:	685b      	ldr	r3, [r3, #4]
 8003aa2:	091b      	lsrs	r3, r3, #4
 8003aa4:	2201      	movs	r2, #1
 8003aa6:	401a      	ands	r2, r3
 8003aa8:	697b      	ldr	r3, [r7, #20]
 8003aaa:	409a      	lsls	r2, r3
 8003aac:	0013      	movs	r3, r2
 8003aae:	693a      	ldr	r2, [r7, #16]
 8003ab0:	4313      	orrs	r3, r2
 8003ab2:	613b      	str	r3, [r7, #16]
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	693a      	ldr	r2, [r7, #16]
 8003ab8:	605a      	str	r2, [r3, #4]
 8003aba:	683b      	ldr	r3, [r7, #0]
 8003abc:	685b      	ldr	r3, [r3, #4]
 8003abe:	2203      	movs	r2, #3
 8003ac0:	4013      	ands	r3, r2
 8003ac2:	2b03      	cmp	r3, #3
 8003ac4:	d017      	beq.n	8003af6 <HAL_GPIO_Init+0xde>
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	68db      	ldr	r3, [r3, #12]
 8003aca:	613b      	str	r3, [r7, #16]
 8003acc:	697b      	ldr	r3, [r7, #20]
 8003ace:	005b      	lsls	r3, r3, #1
 8003ad0:	2203      	movs	r2, #3
 8003ad2:	409a      	lsls	r2, r3
 8003ad4:	0013      	movs	r3, r2
 8003ad6:	43da      	mvns	r2, r3
 8003ad8:	693b      	ldr	r3, [r7, #16]
 8003ada:	4013      	ands	r3, r2
 8003adc:	613b      	str	r3, [r7, #16]
 8003ade:	683b      	ldr	r3, [r7, #0]
 8003ae0:	689a      	ldr	r2, [r3, #8]
 8003ae2:	697b      	ldr	r3, [r7, #20]
 8003ae4:	005b      	lsls	r3, r3, #1
 8003ae6:	409a      	lsls	r2, r3
 8003ae8:	0013      	movs	r3, r2
 8003aea:	693a      	ldr	r2, [r7, #16]
 8003aec:	4313      	orrs	r3, r2
 8003aee:	613b      	str	r3, [r7, #16]
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	693a      	ldr	r2, [r7, #16]
 8003af4:	60da      	str	r2, [r3, #12]
 8003af6:	683b      	ldr	r3, [r7, #0]
 8003af8:	685b      	ldr	r3, [r3, #4]
 8003afa:	2203      	movs	r2, #3
 8003afc:	4013      	ands	r3, r2
 8003afe:	2b02      	cmp	r3, #2
 8003b00:	d123      	bne.n	8003b4a <HAL_GPIO_Init+0x132>
 8003b02:	697b      	ldr	r3, [r7, #20]
 8003b04:	08da      	lsrs	r2, r3, #3
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	3208      	adds	r2, #8
 8003b0a:	0092      	lsls	r2, r2, #2
 8003b0c:	58d3      	ldr	r3, [r2, r3]
 8003b0e:	613b      	str	r3, [r7, #16]
 8003b10:	697b      	ldr	r3, [r7, #20]
 8003b12:	2207      	movs	r2, #7
 8003b14:	4013      	ands	r3, r2
 8003b16:	009b      	lsls	r3, r3, #2
 8003b18:	220f      	movs	r2, #15
 8003b1a:	409a      	lsls	r2, r3
 8003b1c:	0013      	movs	r3, r2
 8003b1e:	43da      	mvns	r2, r3
 8003b20:	693b      	ldr	r3, [r7, #16]
 8003b22:	4013      	ands	r3, r2
 8003b24:	613b      	str	r3, [r7, #16]
 8003b26:	683b      	ldr	r3, [r7, #0]
 8003b28:	691a      	ldr	r2, [r3, #16]
 8003b2a:	697b      	ldr	r3, [r7, #20]
 8003b2c:	2107      	movs	r1, #7
 8003b2e:	400b      	ands	r3, r1
 8003b30:	009b      	lsls	r3, r3, #2
 8003b32:	409a      	lsls	r2, r3
 8003b34:	0013      	movs	r3, r2
 8003b36:	693a      	ldr	r2, [r7, #16]
 8003b38:	4313      	orrs	r3, r2
 8003b3a:	613b      	str	r3, [r7, #16]
 8003b3c:	697b      	ldr	r3, [r7, #20]
 8003b3e:	08da      	lsrs	r2, r3, #3
 8003b40:	687b      	ldr	r3, [r7, #4]
 8003b42:	3208      	adds	r2, #8
 8003b44:	0092      	lsls	r2, r2, #2
 8003b46:	6939      	ldr	r1, [r7, #16]
 8003b48:	50d1      	str	r1, [r2, r3]
 8003b4a:	687b      	ldr	r3, [r7, #4]
 8003b4c:	681b      	ldr	r3, [r3, #0]
 8003b4e:	613b      	str	r3, [r7, #16]
 8003b50:	697b      	ldr	r3, [r7, #20]
 8003b52:	005b      	lsls	r3, r3, #1
 8003b54:	2203      	movs	r2, #3
 8003b56:	409a      	lsls	r2, r3
 8003b58:	0013      	movs	r3, r2
 8003b5a:	43da      	mvns	r2, r3
 8003b5c:	693b      	ldr	r3, [r7, #16]
 8003b5e:	4013      	ands	r3, r2
 8003b60:	613b      	str	r3, [r7, #16]
 8003b62:	683b      	ldr	r3, [r7, #0]
 8003b64:	685b      	ldr	r3, [r3, #4]
 8003b66:	2203      	movs	r2, #3
 8003b68:	401a      	ands	r2, r3
 8003b6a:	697b      	ldr	r3, [r7, #20]
 8003b6c:	005b      	lsls	r3, r3, #1
 8003b6e:	409a      	lsls	r2, r3
 8003b70:	0013      	movs	r3, r2
 8003b72:	693a      	ldr	r2, [r7, #16]
 8003b74:	4313      	orrs	r3, r2
 8003b76:	613b      	str	r3, [r7, #16]
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	693a      	ldr	r2, [r7, #16]
 8003b7c:	601a      	str	r2, [r3, #0]
 8003b7e:	683b      	ldr	r3, [r7, #0]
 8003b80:	685a      	ldr	r2, [r3, #4]
 8003b82:	23c0      	movs	r3, #192	; 0xc0
 8003b84:	029b      	lsls	r3, r3, #10
 8003b86:	4013      	ands	r3, r2
 8003b88:	d100      	bne.n	8003b8c <HAL_GPIO_Init+0x174>
 8003b8a:	e092      	b.n	8003cb2 <HAL_GPIO_Init+0x29a>
 8003b8c:	4a50      	ldr	r2, [pc, #320]	; (8003cd0 <HAL_GPIO_Init+0x2b8>)
 8003b8e:	697b      	ldr	r3, [r7, #20]
 8003b90:	089b      	lsrs	r3, r3, #2
 8003b92:	3318      	adds	r3, #24
 8003b94:	009b      	lsls	r3, r3, #2
 8003b96:	589b      	ldr	r3, [r3, r2]
 8003b98:	613b      	str	r3, [r7, #16]
 8003b9a:	697b      	ldr	r3, [r7, #20]
 8003b9c:	2203      	movs	r2, #3
 8003b9e:	4013      	ands	r3, r2
 8003ba0:	00db      	lsls	r3, r3, #3
 8003ba2:	220f      	movs	r2, #15
 8003ba4:	409a      	lsls	r2, r3
 8003ba6:	0013      	movs	r3, r2
 8003ba8:	43da      	mvns	r2, r3
 8003baa:	693b      	ldr	r3, [r7, #16]
 8003bac:	4013      	ands	r3, r2
 8003bae:	613b      	str	r3, [r7, #16]
 8003bb0:	687a      	ldr	r2, [r7, #4]
 8003bb2:	23a0      	movs	r3, #160	; 0xa0
 8003bb4:	05db      	lsls	r3, r3, #23
 8003bb6:	429a      	cmp	r2, r3
 8003bb8:	d013      	beq.n	8003be2 <HAL_GPIO_Init+0x1ca>
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	4a45      	ldr	r2, [pc, #276]	; (8003cd4 <HAL_GPIO_Init+0x2bc>)
 8003bbe:	4293      	cmp	r3, r2
 8003bc0:	d00d      	beq.n	8003bde <HAL_GPIO_Init+0x1c6>
 8003bc2:	687b      	ldr	r3, [r7, #4]
 8003bc4:	4a44      	ldr	r2, [pc, #272]	; (8003cd8 <HAL_GPIO_Init+0x2c0>)
 8003bc6:	4293      	cmp	r3, r2
 8003bc8:	d007      	beq.n	8003bda <HAL_GPIO_Init+0x1c2>
 8003bca:	687b      	ldr	r3, [r7, #4]
 8003bcc:	4a43      	ldr	r2, [pc, #268]	; (8003cdc <HAL_GPIO_Init+0x2c4>)
 8003bce:	4293      	cmp	r3, r2
 8003bd0:	d101      	bne.n	8003bd6 <HAL_GPIO_Init+0x1be>
 8003bd2:	2303      	movs	r3, #3
 8003bd4:	e006      	b.n	8003be4 <HAL_GPIO_Init+0x1cc>
 8003bd6:	2305      	movs	r3, #5
 8003bd8:	e004      	b.n	8003be4 <HAL_GPIO_Init+0x1cc>
 8003bda:	2302      	movs	r3, #2
 8003bdc:	e002      	b.n	8003be4 <HAL_GPIO_Init+0x1cc>
 8003bde:	2301      	movs	r3, #1
 8003be0:	e000      	b.n	8003be4 <HAL_GPIO_Init+0x1cc>
 8003be2:	2300      	movs	r3, #0
 8003be4:	697a      	ldr	r2, [r7, #20]
 8003be6:	2103      	movs	r1, #3
 8003be8:	400a      	ands	r2, r1
 8003bea:	00d2      	lsls	r2, r2, #3
 8003bec:	4093      	lsls	r3, r2
 8003bee:	693a      	ldr	r2, [r7, #16]
 8003bf0:	4313      	orrs	r3, r2
 8003bf2:	613b      	str	r3, [r7, #16]
 8003bf4:	4936      	ldr	r1, [pc, #216]	; (8003cd0 <HAL_GPIO_Init+0x2b8>)
 8003bf6:	697b      	ldr	r3, [r7, #20]
 8003bf8:	089b      	lsrs	r3, r3, #2
 8003bfa:	3318      	adds	r3, #24
 8003bfc:	009b      	lsls	r3, r3, #2
 8003bfe:	693a      	ldr	r2, [r7, #16]
 8003c00:	505a      	str	r2, [r3, r1]
 8003c02:	4b33      	ldr	r3, [pc, #204]	; (8003cd0 <HAL_GPIO_Init+0x2b8>)
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	613b      	str	r3, [r7, #16]
 8003c08:	68fb      	ldr	r3, [r7, #12]
 8003c0a:	43da      	mvns	r2, r3
 8003c0c:	693b      	ldr	r3, [r7, #16]
 8003c0e:	4013      	ands	r3, r2
 8003c10:	613b      	str	r3, [r7, #16]
 8003c12:	683b      	ldr	r3, [r7, #0]
 8003c14:	685a      	ldr	r2, [r3, #4]
 8003c16:	2380      	movs	r3, #128	; 0x80
 8003c18:	035b      	lsls	r3, r3, #13
 8003c1a:	4013      	ands	r3, r2
 8003c1c:	d003      	beq.n	8003c26 <HAL_GPIO_Init+0x20e>
 8003c1e:	693a      	ldr	r2, [r7, #16]
 8003c20:	68fb      	ldr	r3, [r7, #12]
 8003c22:	4313      	orrs	r3, r2
 8003c24:	613b      	str	r3, [r7, #16]
 8003c26:	4b2a      	ldr	r3, [pc, #168]	; (8003cd0 <HAL_GPIO_Init+0x2b8>)
 8003c28:	693a      	ldr	r2, [r7, #16]
 8003c2a:	601a      	str	r2, [r3, #0]
 8003c2c:	4b28      	ldr	r3, [pc, #160]	; (8003cd0 <HAL_GPIO_Init+0x2b8>)
 8003c2e:	685b      	ldr	r3, [r3, #4]
 8003c30:	613b      	str	r3, [r7, #16]
 8003c32:	68fb      	ldr	r3, [r7, #12]
 8003c34:	43da      	mvns	r2, r3
 8003c36:	693b      	ldr	r3, [r7, #16]
 8003c38:	4013      	ands	r3, r2
 8003c3a:	613b      	str	r3, [r7, #16]
 8003c3c:	683b      	ldr	r3, [r7, #0]
 8003c3e:	685a      	ldr	r2, [r3, #4]
 8003c40:	2380      	movs	r3, #128	; 0x80
 8003c42:	039b      	lsls	r3, r3, #14
 8003c44:	4013      	ands	r3, r2
 8003c46:	d003      	beq.n	8003c50 <HAL_GPIO_Init+0x238>
 8003c48:	693a      	ldr	r2, [r7, #16]
 8003c4a:	68fb      	ldr	r3, [r7, #12]
 8003c4c:	4313      	orrs	r3, r2
 8003c4e:	613b      	str	r3, [r7, #16]
 8003c50:	4b1f      	ldr	r3, [pc, #124]	; (8003cd0 <HAL_GPIO_Init+0x2b8>)
 8003c52:	693a      	ldr	r2, [r7, #16]
 8003c54:	605a      	str	r2, [r3, #4]
 8003c56:	4a1e      	ldr	r2, [pc, #120]	; (8003cd0 <HAL_GPIO_Init+0x2b8>)
 8003c58:	2384      	movs	r3, #132	; 0x84
 8003c5a:	58d3      	ldr	r3, [r2, r3]
 8003c5c:	613b      	str	r3, [r7, #16]
 8003c5e:	68fb      	ldr	r3, [r7, #12]
 8003c60:	43da      	mvns	r2, r3
 8003c62:	693b      	ldr	r3, [r7, #16]
 8003c64:	4013      	ands	r3, r2
 8003c66:	613b      	str	r3, [r7, #16]
 8003c68:	683b      	ldr	r3, [r7, #0]
 8003c6a:	685a      	ldr	r2, [r3, #4]
 8003c6c:	2380      	movs	r3, #128	; 0x80
 8003c6e:	029b      	lsls	r3, r3, #10
 8003c70:	4013      	ands	r3, r2
 8003c72:	d003      	beq.n	8003c7c <HAL_GPIO_Init+0x264>
 8003c74:	693a      	ldr	r2, [r7, #16]
 8003c76:	68fb      	ldr	r3, [r7, #12]
 8003c78:	4313      	orrs	r3, r2
 8003c7a:	613b      	str	r3, [r7, #16]
 8003c7c:	4914      	ldr	r1, [pc, #80]	; (8003cd0 <HAL_GPIO_Init+0x2b8>)
 8003c7e:	2284      	movs	r2, #132	; 0x84
 8003c80:	693b      	ldr	r3, [r7, #16]
 8003c82:	508b      	str	r3, [r1, r2]
 8003c84:	4a12      	ldr	r2, [pc, #72]	; (8003cd0 <HAL_GPIO_Init+0x2b8>)
 8003c86:	2380      	movs	r3, #128	; 0x80
 8003c88:	58d3      	ldr	r3, [r2, r3]
 8003c8a:	613b      	str	r3, [r7, #16]
 8003c8c:	68fb      	ldr	r3, [r7, #12]
 8003c8e:	43da      	mvns	r2, r3
 8003c90:	693b      	ldr	r3, [r7, #16]
 8003c92:	4013      	ands	r3, r2
 8003c94:	613b      	str	r3, [r7, #16]
 8003c96:	683b      	ldr	r3, [r7, #0]
 8003c98:	685a      	ldr	r2, [r3, #4]
 8003c9a:	2380      	movs	r3, #128	; 0x80
 8003c9c:	025b      	lsls	r3, r3, #9
 8003c9e:	4013      	ands	r3, r2
 8003ca0:	d003      	beq.n	8003caa <HAL_GPIO_Init+0x292>
 8003ca2:	693a      	ldr	r2, [r7, #16]
 8003ca4:	68fb      	ldr	r3, [r7, #12]
 8003ca6:	4313      	orrs	r3, r2
 8003ca8:	613b      	str	r3, [r7, #16]
 8003caa:	4909      	ldr	r1, [pc, #36]	; (8003cd0 <HAL_GPIO_Init+0x2b8>)
 8003cac:	2280      	movs	r2, #128	; 0x80
 8003cae:	693b      	ldr	r3, [r7, #16]
 8003cb0:	508b      	str	r3, [r1, r2]
 8003cb2:	697b      	ldr	r3, [r7, #20]
 8003cb4:	3301      	adds	r3, #1
 8003cb6:	617b      	str	r3, [r7, #20]
 8003cb8:	683b      	ldr	r3, [r7, #0]
 8003cba:	681a      	ldr	r2, [r3, #0]
 8003cbc:	697b      	ldr	r3, [r7, #20]
 8003cbe:	40da      	lsrs	r2, r3
 8003cc0:	1e13      	subs	r3, r2, #0
 8003cc2:	d000      	beq.n	8003cc6 <HAL_GPIO_Init+0x2ae>
 8003cc4:	e6b0      	b.n	8003a28 <HAL_GPIO_Init+0x10>
 8003cc6:	46c0      	nop			; (mov r8, r8)
 8003cc8:	46c0      	nop			; (mov r8, r8)
 8003cca:	46bd      	mov	sp, r7
 8003ccc:	b006      	add	sp, #24
 8003cce:	bd80      	pop	{r7, pc}
 8003cd0:	40021800 	.word	0x40021800
 8003cd4:	50000400 	.word	0x50000400
 8003cd8:	50000800 	.word	0x50000800
 8003cdc:	50000c00 	.word	0x50000c00

08003ce0 <HAL_GPIO_WritePin>:
 8003ce0:	b580      	push	{r7, lr}
 8003ce2:	b082      	sub	sp, #8
 8003ce4:	af00      	add	r7, sp, #0
 8003ce6:	6078      	str	r0, [r7, #4]
 8003ce8:	0008      	movs	r0, r1
 8003cea:	0011      	movs	r1, r2
 8003cec:	1cbb      	adds	r3, r7, #2
 8003cee:	1c02      	adds	r2, r0, #0
 8003cf0:	801a      	strh	r2, [r3, #0]
 8003cf2:	1c7b      	adds	r3, r7, #1
 8003cf4:	1c0a      	adds	r2, r1, #0
 8003cf6:	701a      	strb	r2, [r3, #0]
 8003cf8:	1c7b      	adds	r3, r7, #1
 8003cfa:	781b      	ldrb	r3, [r3, #0]
 8003cfc:	2b00      	cmp	r3, #0
 8003cfe:	d004      	beq.n	8003d0a <HAL_GPIO_WritePin+0x2a>
 8003d00:	1cbb      	adds	r3, r7, #2
 8003d02:	881a      	ldrh	r2, [r3, #0]
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	619a      	str	r2, [r3, #24]
 8003d08:	e003      	b.n	8003d12 <HAL_GPIO_WritePin+0x32>
 8003d0a:	1cbb      	adds	r3, r7, #2
 8003d0c:	881a      	ldrh	r2, [r3, #0]
 8003d0e:	687b      	ldr	r3, [r7, #4]
 8003d10:	629a      	str	r2, [r3, #40]	; 0x28
 8003d12:	46c0      	nop			; (mov r8, r8)
 8003d14:	46bd      	mov	sp, r7
 8003d16:	b002      	add	sp, #8
 8003d18:	bd80      	pop	{r7, pc}
	...

08003d1c <HAL_IWDG_Init>:
 8003d1c:	b580      	push	{r7, lr}
 8003d1e:	b084      	sub	sp, #16
 8003d20:	af00      	add	r7, sp, #0
 8003d22:	6078      	str	r0, [r7, #4]
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	2b00      	cmp	r3, #0
 8003d28:	d101      	bne.n	8003d2e <HAL_IWDG_Init+0x12>
 8003d2a:	2301      	movs	r3, #1
 8003d2c:	e03d      	b.n	8003daa <HAL_IWDG_Init+0x8e>
 8003d2e:	687b      	ldr	r3, [r7, #4]
 8003d30:	681b      	ldr	r3, [r3, #0]
 8003d32:	4a20      	ldr	r2, [pc, #128]	; (8003db4 <HAL_IWDG_Init+0x98>)
 8003d34:	601a      	str	r2, [r3, #0]
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	681b      	ldr	r3, [r3, #0]
 8003d3a:	4a1f      	ldr	r2, [pc, #124]	; (8003db8 <HAL_IWDG_Init+0x9c>)
 8003d3c:	601a      	str	r2, [r3, #0]
 8003d3e:	687b      	ldr	r3, [r7, #4]
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	687a      	ldr	r2, [r7, #4]
 8003d44:	6852      	ldr	r2, [r2, #4]
 8003d46:	605a      	str	r2, [r3, #4]
 8003d48:	687b      	ldr	r3, [r7, #4]
 8003d4a:	681b      	ldr	r3, [r3, #0]
 8003d4c:	687a      	ldr	r2, [r7, #4]
 8003d4e:	6892      	ldr	r2, [r2, #8]
 8003d50:	609a      	str	r2, [r3, #8]
 8003d52:	f7fe f9f9 	bl	8002148 <HAL_GetTick>
 8003d56:	0003      	movs	r3, r0
 8003d58:	60fb      	str	r3, [r7, #12]
 8003d5a:	e00e      	b.n	8003d7a <HAL_IWDG_Init+0x5e>
 8003d5c:	f7fe f9f4 	bl	8002148 <HAL_GetTick>
 8003d60:	0002      	movs	r2, r0
 8003d62:	68fb      	ldr	r3, [r7, #12]
 8003d64:	1ad3      	subs	r3, r2, r3
 8003d66:	2b31      	cmp	r3, #49	; 0x31
 8003d68:	d907      	bls.n	8003d7a <HAL_IWDG_Init+0x5e>
 8003d6a:	687b      	ldr	r3, [r7, #4]
 8003d6c:	681b      	ldr	r3, [r3, #0]
 8003d6e:	68db      	ldr	r3, [r3, #12]
 8003d70:	2207      	movs	r2, #7
 8003d72:	4013      	ands	r3, r2
 8003d74:	d001      	beq.n	8003d7a <HAL_IWDG_Init+0x5e>
 8003d76:	2303      	movs	r3, #3
 8003d78:	e017      	b.n	8003daa <HAL_IWDG_Init+0x8e>
 8003d7a:	687b      	ldr	r3, [r7, #4]
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	68db      	ldr	r3, [r3, #12]
 8003d80:	2207      	movs	r2, #7
 8003d82:	4013      	ands	r3, r2
 8003d84:	d1ea      	bne.n	8003d5c <HAL_IWDG_Init+0x40>
 8003d86:	687b      	ldr	r3, [r7, #4]
 8003d88:	681b      	ldr	r3, [r3, #0]
 8003d8a:	691a      	ldr	r2, [r3, #16]
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	68db      	ldr	r3, [r3, #12]
 8003d90:	429a      	cmp	r2, r3
 8003d92:	d005      	beq.n	8003da0 <HAL_IWDG_Init+0x84>
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	681b      	ldr	r3, [r3, #0]
 8003d98:	687a      	ldr	r2, [r7, #4]
 8003d9a:	68d2      	ldr	r2, [r2, #12]
 8003d9c:	611a      	str	r2, [r3, #16]
 8003d9e:	e003      	b.n	8003da8 <HAL_IWDG_Init+0x8c>
 8003da0:	687b      	ldr	r3, [r7, #4]
 8003da2:	681b      	ldr	r3, [r3, #0]
 8003da4:	4a05      	ldr	r2, [pc, #20]	; (8003dbc <HAL_IWDG_Init+0xa0>)
 8003da6:	601a      	str	r2, [r3, #0]
 8003da8:	2300      	movs	r3, #0
 8003daa:	0018      	movs	r0, r3
 8003dac:	46bd      	mov	sp, r7
 8003dae:	b004      	add	sp, #16
 8003db0:	bd80      	pop	{r7, pc}
 8003db2:	46c0      	nop			; (mov r8, r8)
 8003db4:	0000cccc 	.word	0x0000cccc
 8003db8:	00005555 	.word	0x00005555
 8003dbc:	0000aaaa 	.word	0x0000aaaa

08003dc0 <HAL_IWDG_Refresh>:
 8003dc0:	b580      	push	{r7, lr}
 8003dc2:	b082      	sub	sp, #8
 8003dc4:	af00      	add	r7, sp, #0
 8003dc6:	6078      	str	r0, [r7, #4]
 8003dc8:	687b      	ldr	r3, [r7, #4]
 8003dca:	681b      	ldr	r3, [r3, #0]
 8003dcc:	4a03      	ldr	r2, [pc, #12]	; (8003ddc <HAL_IWDG_Refresh+0x1c>)
 8003dce:	601a      	str	r2, [r3, #0]
 8003dd0:	2300      	movs	r3, #0
 8003dd2:	0018      	movs	r0, r3
 8003dd4:	46bd      	mov	sp, r7
 8003dd6:	b002      	add	sp, #8
 8003dd8:	bd80      	pop	{r7, pc}
 8003dda:	46c0      	nop			; (mov r8, r8)
 8003ddc:	0000aaaa 	.word	0x0000aaaa

08003de0 <HAL_PWREx_ControlVoltageScaling>:
 8003de0:	b580      	push	{r7, lr}
 8003de2:	b084      	sub	sp, #16
 8003de4:	af00      	add	r7, sp, #0
 8003de6:	6078      	str	r0, [r7, #4]
 8003de8:	4b19      	ldr	r3, [pc, #100]	; (8003e50 <HAL_PWREx_ControlVoltageScaling+0x70>)
 8003dea:	681b      	ldr	r3, [r3, #0]
 8003dec:	4a19      	ldr	r2, [pc, #100]	; (8003e54 <HAL_PWREx_ControlVoltageScaling+0x74>)
 8003dee:	4013      	ands	r3, r2
 8003df0:	0019      	movs	r1, r3
 8003df2:	4b17      	ldr	r3, [pc, #92]	; (8003e50 <HAL_PWREx_ControlVoltageScaling+0x70>)
 8003df4:	687a      	ldr	r2, [r7, #4]
 8003df6:	430a      	orrs	r2, r1
 8003df8:	601a      	str	r2, [r3, #0]
 8003dfa:	687a      	ldr	r2, [r7, #4]
 8003dfc:	2380      	movs	r3, #128	; 0x80
 8003dfe:	009b      	lsls	r3, r3, #2
 8003e00:	429a      	cmp	r2, r3
 8003e02:	d11f      	bne.n	8003e44 <HAL_PWREx_ControlVoltageScaling+0x64>
 8003e04:	4b14      	ldr	r3, [pc, #80]	; (8003e58 <HAL_PWREx_ControlVoltageScaling+0x78>)
 8003e06:	681a      	ldr	r2, [r3, #0]
 8003e08:	0013      	movs	r3, r2
 8003e0a:	005b      	lsls	r3, r3, #1
 8003e0c:	189b      	adds	r3, r3, r2
 8003e0e:	005b      	lsls	r3, r3, #1
 8003e10:	4912      	ldr	r1, [pc, #72]	; (8003e5c <HAL_PWREx_ControlVoltageScaling+0x7c>)
 8003e12:	0018      	movs	r0, r3
 8003e14:	f7fc f97e 	bl	8000114 <__udivsi3>
 8003e18:	0003      	movs	r3, r0
 8003e1a:	3301      	adds	r3, #1
 8003e1c:	60fb      	str	r3, [r7, #12]
 8003e1e:	e008      	b.n	8003e32 <HAL_PWREx_ControlVoltageScaling+0x52>
 8003e20:	68fb      	ldr	r3, [r7, #12]
 8003e22:	2b00      	cmp	r3, #0
 8003e24:	d003      	beq.n	8003e2e <HAL_PWREx_ControlVoltageScaling+0x4e>
 8003e26:	68fb      	ldr	r3, [r7, #12]
 8003e28:	3b01      	subs	r3, #1
 8003e2a:	60fb      	str	r3, [r7, #12]
 8003e2c:	e001      	b.n	8003e32 <HAL_PWREx_ControlVoltageScaling+0x52>
 8003e2e:	2303      	movs	r3, #3
 8003e30:	e009      	b.n	8003e46 <HAL_PWREx_ControlVoltageScaling+0x66>
 8003e32:	4b07      	ldr	r3, [pc, #28]	; (8003e50 <HAL_PWREx_ControlVoltageScaling+0x70>)
 8003e34:	695a      	ldr	r2, [r3, #20]
 8003e36:	2380      	movs	r3, #128	; 0x80
 8003e38:	00db      	lsls	r3, r3, #3
 8003e3a:	401a      	ands	r2, r3
 8003e3c:	2380      	movs	r3, #128	; 0x80
 8003e3e:	00db      	lsls	r3, r3, #3
 8003e40:	429a      	cmp	r2, r3
 8003e42:	d0ed      	beq.n	8003e20 <HAL_PWREx_ControlVoltageScaling+0x40>
 8003e44:	2300      	movs	r3, #0
 8003e46:	0018      	movs	r0, r3
 8003e48:	46bd      	mov	sp, r7
 8003e4a:	b004      	add	sp, #16
 8003e4c:	bd80      	pop	{r7, pc}
 8003e4e:	46c0      	nop			; (mov r8, r8)
 8003e50:	40007000 	.word	0x40007000
 8003e54:	fffff9ff 	.word	0xfffff9ff
 8003e58:	20000000 	.word	0x20000000
 8003e5c:	000f4240 	.word	0x000f4240

08003e60 <LL_RCC_GetAPB1Prescaler>:
 8003e60:	b580      	push	{r7, lr}
 8003e62:	af00      	add	r7, sp, #0
 8003e64:	4b03      	ldr	r3, [pc, #12]	; (8003e74 <LL_RCC_GetAPB1Prescaler+0x14>)
 8003e66:	689a      	ldr	r2, [r3, #8]
 8003e68:	23e0      	movs	r3, #224	; 0xe0
 8003e6a:	01db      	lsls	r3, r3, #7
 8003e6c:	4013      	ands	r3, r2
 8003e6e:	0018      	movs	r0, r3
 8003e70:	46bd      	mov	sp, r7
 8003e72:	bd80      	pop	{r7, pc}
 8003e74:	40021000 	.word	0x40021000

08003e78 <HAL_RCC_OscConfig>:
 8003e78:	b580      	push	{r7, lr}
 8003e7a:	b088      	sub	sp, #32
 8003e7c:	af00      	add	r7, sp, #0
 8003e7e:	6078      	str	r0, [r7, #4]
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	2b00      	cmp	r3, #0
 8003e84:	d101      	bne.n	8003e8a <HAL_RCC_OscConfig+0x12>
 8003e86:	2301      	movs	r3, #1
 8003e88:	e2f3      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	681b      	ldr	r3, [r3, #0]
 8003e8e:	2201      	movs	r2, #1
 8003e90:	4013      	ands	r3, r2
 8003e92:	d100      	bne.n	8003e96 <HAL_RCC_OscConfig+0x1e>
 8003e94:	e07c      	b.n	8003f90 <HAL_RCC_OscConfig+0x118>
 8003e96:	4bc3      	ldr	r3, [pc, #780]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003e98:	689b      	ldr	r3, [r3, #8]
 8003e9a:	2238      	movs	r2, #56	; 0x38
 8003e9c:	4013      	ands	r3, r2
 8003e9e:	61bb      	str	r3, [r7, #24]
 8003ea0:	4bc0      	ldr	r3, [pc, #768]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003ea2:	68db      	ldr	r3, [r3, #12]
 8003ea4:	2203      	movs	r2, #3
 8003ea6:	4013      	ands	r3, r2
 8003ea8:	617b      	str	r3, [r7, #20]
 8003eaa:	69bb      	ldr	r3, [r7, #24]
 8003eac:	2b10      	cmp	r3, #16
 8003eae:	d102      	bne.n	8003eb6 <HAL_RCC_OscConfig+0x3e>
 8003eb0:	697b      	ldr	r3, [r7, #20]
 8003eb2:	2b03      	cmp	r3, #3
 8003eb4:	d002      	beq.n	8003ebc <HAL_RCC_OscConfig+0x44>
 8003eb6:	69bb      	ldr	r3, [r7, #24]
 8003eb8:	2b08      	cmp	r3, #8
 8003eba:	d10b      	bne.n	8003ed4 <HAL_RCC_OscConfig+0x5c>
 8003ebc:	4bb9      	ldr	r3, [pc, #740]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003ebe:	681a      	ldr	r2, [r3, #0]
 8003ec0:	2380      	movs	r3, #128	; 0x80
 8003ec2:	029b      	lsls	r3, r3, #10
 8003ec4:	4013      	ands	r3, r2
 8003ec6:	d062      	beq.n	8003f8e <HAL_RCC_OscConfig+0x116>
 8003ec8:	687b      	ldr	r3, [r7, #4]
 8003eca:	685b      	ldr	r3, [r3, #4]
 8003ecc:	2b00      	cmp	r3, #0
 8003ece:	d15e      	bne.n	8003f8e <HAL_RCC_OscConfig+0x116>
 8003ed0:	2301      	movs	r3, #1
 8003ed2:	e2ce      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	685a      	ldr	r2, [r3, #4]
 8003ed8:	2380      	movs	r3, #128	; 0x80
 8003eda:	025b      	lsls	r3, r3, #9
 8003edc:	429a      	cmp	r2, r3
 8003ede:	d107      	bne.n	8003ef0 <HAL_RCC_OscConfig+0x78>
 8003ee0:	4bb0      	ldr	r3, [pc, #704]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003ee2:	681a      	ldr	r2, [r3, #0]
 8003ee4:	4baf      	ldr	r3, [pc, #700]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003ee6:	2180      	movs	r1, #128	; 0x80
 8003ee8:	0249      	lsls	r1, r1, #9
 8003eea:	430a      	orrs	r2, r1
 8003eec:	601a      	str	r2, [r3, #0]
 8003eee:	e020      	b.n	8003f32 <HAL_RCC_OscConfig+0xba>
 8003ef0:	687b      	ldr	r3, [r7, #4]
 8003ef2:	685a      	ldr	r2, [r3, #4]
 8003ef4:	23a0      	movs	r3, #160	; 0xa0
 8003ef6:	02db      	lsls	r3, r3, #11
 8003ef8:	429a      	cmp	r2, r3
 8003efa:	d10e      	bne.n	8003f1a <HAL_RCC_OscConfig+0xa2>
 8003efc:	4ba9      	ldr	r3, [pc, #676]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003efe:	681a      	ldr	r2, [r3, #0]
 8003f00:	4ba8      	ldr	r3, [pc, #672]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003f02:	2180      	movs	r1, #128	; 0x80
 8003f04:	02c9      	lsls	r1, r1, #11
 8003f06:	430a      	orrs	r2, r1
 8003f08:	601a      	str	r2, [r3, #0]
 8003f0a:	4ba6      	ldr	r3, [pc, #664]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003f0c:	681a      	ldr	r2, [r3, #0]
 8003f0e:	4ba5      	ldr	r3, [pc, #660]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003f10:	2180      	movs	r1, #128	; 0x80
 8003f12:	0249      	lsls	r1, r1, #9
 8003f14:	430a      	orrs	r2, r1
 8003f16:	601a      	str	r2, [r3, #0]
 8003f18:	e00b      	b.n	8003f32 <HAL_RCC_OscConfig+0xba>
 8003f1a:	4ba2      	ldr	r3, [pc, #648]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003f1c:	681a      	ldr	r2, [r3, #0]
 8003f1e:	4ba1      	ldr	r3, [pc, #644]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003f20:	49a1      	ldr	r1, [pc, #644]	; (80041a8 <HAL_RCC_OscConfig+0x330>)
 8003f22:	400a      	ands	r2, r1
 8003f24:	601a      	str	r2, [r3, #0]
 8003f26:	4b9f      	ldr	r3, [pc, #636]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003f28:	681a      	ldr	r2, [r3, #0]
 8003f2a:	4b9e      	ldr	r3, [pc, #632]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003f2c:	499f      	ldr	r1, [pc, #636]	; (80041ac <HAL_RCC_OscConfig+0x334>)
 8003f2e:	400a      	ands	r2, r1
 8003f30:	601a      	str	r2, [r3, #0]
 8003f32:	687b      	ldr	r3, [r7, #4]
 8003f34:	685b      	ldr	r3, [r3, #4]
 8003f36:	2b00      	cmp	r3, #0
 8003f38:	d014      	beq.n	8003f64 <HAL_RCC_OscConfig+0xec>
 8003f3a:	f7fe f905 	bl	8002148 <HAL_GetTick>
 8003f3e:	0003      	movs	r3, r0
 8003f40:	613b      	str	r3, [r7, #16]
 8003f42:	e008      	b.n	8003f56 <HAL_RCC_OscConfig+0xde>
 8003f44:	f7fe f900 	bl	8002148 <HAL_GetTick>
 8003f48:	0002      	movs	r2, r0
 8003f4a:	693b      	ldr	r3, [r7, #16]
 8003f4c:	1ad3      	subs	r3, r2, r3
 8003f4e:	2b64      	cmp	r3, #100	; 0x64
 8003f50:	d901      	bls.n	8003f56 <HAL_RCC_OscConfig+0xde>
 8003f52:	2303      	movs	r3, #3
 8003f54:	e28d      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 8003f56:	4b93      	ldr	r3, [pc, #588]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003f58:	681a      	ldr	r2, [r3, #0]
 8003f5a:	2380      	movs	r3, #128	; 0x80
 8003f5c:	029b      	lsls	r3, r3, #10
 8003f5e:	4013      	ands	r3, r2
 8003f60:	d0f0      	beq.n	8003f44 <HAL_RCC_OscConfig+0xcc>
 8003f62:	e015      	b.n	8003f90 <HAL_RCC_OscConfig+0x118>
 8003f64:	f7fe f8f0 	bl	8002148 <HAL_GetTick>
 8003f68:	0003      	movs	r3, r0
 8003f6a:	613b      	str	r3, [r7, #16]
 8003f6c:	e008      	b.n	8003f80 <HAL_RCC_OscConfig+0x108>
 8003f6e:	f7fe f8eb 	bl	8002148 <HAL_GetTick>
 8003f72:	0002      	movs	r2, r0
 8003f74:	693b      	ldr	r3, [r7, #16]
 8003f76:	1ad3      	subs	r3, r2, r3
 8003f78:	2b64      	cmp	r3, #100	; 0x64
 8003f7a:	d901      	bls.n	8003f80 <HAL_RCC_OscConfig+0x108>
 8003f7c:	2303      	movs	r3, #3
 8003f7e:	e278      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 8003f80:	4b88      	ldr	r3, [pc, #544]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003f82:	681a      	ldr	r2, [r3, #0]
 8003f84:	2380      	movs	r3, #128	; 0x80
 8003f86:	029b      	lsls	r3, r3, #10
 8003f88:	4013      	ands	r3, r2
 8003f8a:	d1f0      	bne.n	8003f6e <HAL_RCC_OscConfig+0xf6>
 8003f8c:	e000      	b.n	8003f90 <HAL_RCC_OscConfig+0x118>
 8003f8e:	46c0      	nop			; (mov r8, r8)
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	681b      	ldr	r3, [r3, #0]
 8003f94:	2202      	movs	r2, #2
 8003f96:	4013      	ands	r3, r2
 8003f98:	d100      	bne.n	8003f9c <HAL_RCC_OscConfig+0x124>
 8003f9a:	e099      	b.n	80040d0 <HAL_RCC_OscConfig+0x258>
 8003f9c:	4b81      	ldr	r3, [pc, #516]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003f9e:	689b      	ldr	r3, [r3, #8]
 8003fa0:	2238      	movs	r2, #56	; 0x38
 8003fa2:	4013      	ands	r3, r2
 8003fa4:	61bb      	str	r3, [r7, #24]
 8003fa6:	4b7f      	ldr	r3, [pc, #508]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003fa8:	68db      	ldr	r3, [r3, #12]
 8003faa:	2203      	movs	r2, #3
 8003fac:	4013      	ands	r3, r2
 8003fae:	617b      	str	r3, [r7, #20]
 8003fb0:	69bb      	ldr	r3, [r7, #24]
 8003fb2:	2b10      	cmp	r3, #16
 8003fb4:	d102      	bne.n	8003fbc <HAL_RCC_OscConfig+0x144>
 8003fb6:	697b      	ldr	r3, [r7, #20]
 8003fb8:	2b02      	cmp	r3, #2
 8003fba:	d002      	beq.n	8003fc2 <HAL_RCC_OscConfig+0x14a>
 8003fbc:	69bb      	ldr	r3, [r7, #24]
 8003fbe:	2b00      	cmp	r3, #0
 8003fc0:	d135      	bne.n	800402e <HAL_RCC_OscConfig+0x1b6>
 8003fc2:	4b78      	ldr	r3, [pc, #480]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003fc4:	681a      	ldr	r2, [r3, #0]
 8003fc6:	2380      	movs	r3, #128	; 0x80
 8003fc8:	00db      	lsls	r3, r3, #3
 8003fca:	4013      	ands	r3, r2
 8003fcc:	d005      	beq.n	8003fda <HAL_RCC_OscConfig+0x162>
 8003fce:	687b      	ldr	r3, [r7, #4]
 8003fd0:	68db      	ldr	r3, [r3, #12]
 8003fd2:	2b00      	cmp	r3, #0
 8003fd4:	d101      	bne.n	8003fda <HAL_RCC_OscConfig+0x162>
 8003fd6:	2301      	movs	r3, #1
 8003fd8:	e24b      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 8003fda:	4b72      	ldr	r3, [pc, #456]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003fdc:	685b      	ldr	r3, [r3, #4]
 8003fde:	4a74      	ldr	r2, [pc, #464]	; (80041b0 <HAL_RCC_OscConfig+0x338>)
 8003fe0:	4013      	ands	r3, r2
 8003fe2:	0019      	movs	r1, r3
 8003fe4:	687b      	ldr	r3, [r7, #4]
 8003fe6:	695b      	ldr	r3, [r3, #20]
 8003fe8:	021a      	lsls	r2, r3, #8
 8003fea:	4b6e      	ldr	r3, [pc, #440]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003fec:	430a      	orrs	r2, r1
 8003fee:	605a      	str	r2, [r3, #4]
 8003ff0:	69bb      	ldr	r3, [r7, #24]
 8003ff2:	2b00      	cmp	r3, #0
 8003ff4:	d112      	bne.n	800401c <HAL_RCC_OscConfig+0x1a4>
 8003ff6:	4b6b      	ldr	r3, [pc, #428]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8003ff8:	681b      	ldr	r3, [r3, #0]
 8003ffa:	4a6e      	ldr	r2, [pc, #440]	; (80041b4 <HAL_RCC_OscConfig+0x33c>)
 8003ffc:	4013      	ands	r3, r2
 8003ffe:	0019      	movs	r1, r3
 8004000:	687b      	ldr	r3, [r7, #4]
 8004002:	691a      	ldr	r2, [r3, #16]
 8004004:	4b67      	ldr	r3, [pc, #412]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8004006:	430a      	orrs	r2, r1
 8004008:	601a      	str	r2, [r3, #0]
 800400a:	4b66      	ldr	r3, [pc, #408]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 800400c:	681b      	ldr	r3, [r3, #0]
 800400e:	0adb      	lsrs	r3, r3, #11
 8004010:	2207      	movs	r2, #7
 8004012:	4013      	ands	r3, r2
 8004014:	4a68      	ldr	r2, [pc, #416]	; (80041b8 <HAL_RCC_OscConfig+0x340>)
 8004016:	40da      	lsrs	r2, r3
 8004018:	4b68      	ldr	r3, [pc, #416]	; (80041bc <HAL_RCC_OscConfig+0x344>)
 800401a:	601a      	str	r2, [r3, #0]
 800401c:	4b68      	ldr	r3, [pc, #416]	; (80041c0 <HAL_RCC_OscConfig+0x348>)
 800401e:	681b      	ldr	r3, [r3, #0]
 8004020:	0018      	movs	r0, r3
 8004022:	f7fe f835 	bl	8002090 <HAL_InitTick>
 8004026:	1e03      	subs	r3, r0, #0
 8004028:	d051      	beq.n	80040ce <HAL_RCC_OscConfig+0x256>
 800402a:	2301      	movs	r3, #1
 800402c:	e221      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 800402e:	687b      	ldr	r3, [r7, #4]
 8004030:	68db      	ldr	r3, [r3, #12]
 8004032:	2b00      	cmp	r3, #0
 8004034:	d030      	beq.n	8004098 <HAL_RCC_OscConfig+0x220>
 8004036:	4b5b      	ldr	r3, [pc, #364]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8004038:	681b      	ldr	r3, [r3, #0]
 800403a:	4a5e      	ldr	r2, [pc, #376]	; (80041b4 <HAL_RCC_OscConfig+0x33c>)
 800403c:	4013      	ands	r3, r2
 800403e:	0019      	movs	r1, r3
 8004040:	687b      	ldr	r3, [r7, #4]
 8004042:	691a      	ldr	r2, [r3, #16]
 8004044:	4b57      	ldr	r3, [pc, #348]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8004046:	430a      	orrs	r2, r1
 8004048:	601a      	str	r2, [r3, #0]
 800404a:	4b56      	ldr	r3, [pc, #344]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 800404c:	681a      	ldr	r2, [r3, #0]
 800404e:	4b55      	ldr	r3, [pc, #340]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8004050:	2180      	movs	r1, #128	; 0x80
 8004052:	0049      	lsls	r1, r1, #1
 8004054:	430a      	orrs	r2, r1
 8004056:	601a      	str	r2, [r3, #0]
 8004058:	f7fe f876 	bl	8002148 <HAL_GetTick>
 800405c:	0003      	movs	r3, r0
 800405e:	613b      	str	r3, [r7, #16]
 8004060:	e008      	b.n	8004074 <HAL_RCC_OscConfig+0x1fc>
 8004062:	f7fe f871 	bl	8002148 <HAL_GetTick>
 8004066:	0002      	movs	r2, r0
 8004068:	693b      	ldr	r3, [r7, #16]
 800406a:	1ad3      	subs	r3, r2, r3
 800406c:	2b02      	cmp	r3, #2
 800406e:	d901      	bls.n	8004074 <HAL_RCC_OscConfig+0x1fc>
 8004070:	2303      	movs	r3, #3
 8004072:	e1fe      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 8004074:	4b4b      	ldr	r3, [pc, #300]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8004076:	681a      	ldr	r2, [r3, #0]
 8004078:	2380      	movs	r3, #128	; 0x80
 800407a:	00db      	lsls	r3, r3, #3
 800407c:	4013      	ands	r3, r2
 800407e:	d0f0      	beq.n	8004062 <HAL_RCC_OscConfig+0x1ea>
 8004080:	4b48      	ldr	r3, [pc, #288]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8004082:	685b      	ldr	r3, [r3, #4]
 8004084:	4a4a      	ldr	r2, [pc, #296]	; (80041b0 <HAL_RCC_OscConfig+0x338>)
 8004086:	4013      	ands	r3, r2
 8004088:	0019      	movs	r1, r3
 800408a:	687b      	ldr	r3, [r7, #4]
 800408c:	695b      	ldr	r3, [r3, #20]
 800408e:	021a      	lsls	r2, r3, #8
 8004090:	4b44      	ldr	r3, [pc, #272]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8004092:	430a      	orrs	r2, r1
 8004094:	605a      	str	r2, [r3, #4]
 8004096:	e01b      	b.n	80040d0 <HAL_RCC_OscConfig+0x258>
 8004098:	4b42      	ldr	r3, [pc, #264]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 800409a:	681a      	ldr	r2, [r3, #0]
 800409c:	4b41      	ldr	r3, [pc, #260]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 800409e:	4949      	ldr	r1, [pc, #292]	; (80041c4 <HAL_RCC_OscConfig+0x34c>)
 80040a0:	400a      	ands	r2, r1
 80040a2:	601a      	str	r2, [r3, #0]
 80040a4:	f7fe f850 	bl	8002148 <HAL_GetTick>
 80040a8:	0003      	movs	r3, r0
 80040aa:	613b      	str	r3, [r7, #16]
 80040ac:	e008      	b.n	80040c0 <HAL_RCC_OscConfig+0x248>
 80040ae:	f7fe f84b 	bl	8002148 <HAL_GetTick>
 80040b2:	0002      	movs	r2, r0
 80040b4:	693b      	ldr	r3, [r7, #16]
 80040b6:	1ad3      	subs	r3, r2, r3
 80040b8:	2b02      	cmp	r3, #2
 80040ba:	d901      	bls.n	80040c0 <HAL_RCC_OscConfig+0x248>
 80040bc:	2303      	movs	r3, #3
 80040be:	e1d8      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 80040c0:	4b38      	ldr	r3, [pc, #224]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 80040c2:	681a      	ldr	r2, [r3, #0]
 80040c4:	2380      	movs	r3, #128	; 0x80
 80040c6:	00db      	lsls	r3, r3, #3
 80040c8:	4013      	ands	r3, r2
 80040ca:	d1f0      	bne.n	80040ae <HAL_RCC_OscConfig+0x236>
 80040cc:	e000      	b.n	80040d0 <HAL_RCC_OscConfig+0x258>
 80040ce:	46c0      	nop			; (mov r8, r8)
 80040d0:	687b      	ldr	r3, [r7, #4]
 80040d2:	681b      	ldr	r3, [r3, #0]
 80040d4:	2208      	movs	r2, #8
 80040d6:	4013      	ands	r3, r2
 80040d8:	d047      	beq.n	800416a <HAL_RCC_OscConfig+0x2f2>
 80040da:	4b32      	ldr	r3, [pc, #200]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 80040dc:	689b      	ldr	r3, [r3, #8]
 80040de:	2238      	movs	r2, #56	; 0x38
 80040e0:	4013      	ands	r3, r2
 80040e2:	2b18      	cmp	r3, #24
 80040e4:	d10a      	bne.n	80040fc <HAL_RCC_OscConfig+0x284>
 80040e6:	4b2f      	ldr	r3, [pc, #188]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 80040e8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80040ea:	2202      	movs	r2, #2
 80040ec:	4013      	ands	r3, r2
 80040ee:	d03c      	beq.n	800416a <HAL_RCC_OscConfig+0x2f2>
 80040f0:	687b      	ldr	r3, [r7, #4]
 80040f2:	699b      	ldr	r3, [r3, #24]
 80040f4:	2b00      	cmp	r3, #0
 80040f6:	d138      	bne.n	800416a <HAL_RCC_OscConfig+0x2f2>
 80040f8:	2301      	movs	r3, #1
 80040fa:	e1ba      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	699b      	ldr	r3, [r3, #24]
 8004100:	2b00      	cmp	r3, #0
 8004102:	d019      	beq.n	8004138 <HAL_RCC_OscConfig+0x2c0>
 8004104:	4b27      	ldr	r3, [pc, #156]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8004106:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8004108:	4b26      	ldr	r3, [pc, #152]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 800410a:	2101      	movs	r1, #1
 800410c:	430a      	orrs	r2, r1
 800410e:	661a      	str	r2, [r3, #96]	; 0x60
 8004110:	f7fe f81a 	bl	8002148 <HAL_GetTick>
 8004114:	0003      	movs	r3, r0
 8004116:	613b      	str	r3, [r7, #16]
 8004118:	e008      	b.n	800412c <HAL_RCC_OscConfig+0x2b4>
 800411a:	f7fe f815 	bl	8002148 <HAL_GetTick>
 800411e:	0002      	movs	r2, r0
 8004120:	693b      	ldr	r3, [r7, #16]
 8004122:	1ad3      	subs	r3, r2, r3
 8004124:	2b02      	cmp	r3, #2
 8004126:	d901      	bls.n	800412c <HAL_RCC_OscConfig+0x2b4>
 8004128:	2303      	movs	r3, #3
 800412a:	e1a2      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 800412c:	4b1d      	ldr	r3, [pc, #116]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 800412e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004130:	2202      	movs	r2, #2
 8004132:	4013      	ands	r3, r2
 8004134:	d0f1      	beq.n	800411a <HAL_RCC_OscConfig+0x2a2>
 8004136:	e018      	b.n	800416a <HAL_RCC_OscConfig+0x2f2>
 8004138:	4b1a      	ldr	r3, [pc, #104]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 800413a:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800413c:	4b19      	ldr	r3, [pc, #100]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 800413e:	2101      	movs	r1, #1
 8004140:	438a      	bics	r2, r1
 8004142:	661a      	str	r2, [r3, #96]	; 0x60
 8004144:	f7fe f800 	bl	8002148 <HAL_GetTick>
 8004148:	0003      	movs	r3, r0
 800414a:	613b      	str	r3, [r7, #16]
 800414c:	e008      	b.n	8004160 <HAL_RCC_OscConfig+0x2e8>
 800414e:	f7fd fffb 	bl	8002148 <HAL_GetTick>
 8004152:	0002      	movs	r2, r0
 8004154:	693b      	ldr	r3, [r7, #16]
 8004156:	1ad3      	subs	r3, r2, r3
 8004158:	2b02      	cmp	r3, #2
 800415a:	d901      	bls.n	8004160 <HAL_RCC_OscConfig+0x2e8>
 800415c:	2303      	movs	r3, #3
 800415e:	e188      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 8004160:	4b10      	ldr	r3, [pc, #64]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8004162:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004164:	2202      	movs	r2, #2
 8004166:	4013      	ands	r3, r2
 8004168:	d1f1      	bne.n	800414e <HAL_RCC_OscConfig+0x2d6>
 800416a:	687b      	ldr	r3, [r7, #4]
 800416c:	681b      	ldr	r3, [r3, #0]
 800416e:	2204      	movs	r2, #4
 8004170:	4013      	ands	r3, r2
 8004172:	d100      	bne.n	8004176 <HAL_RCC_OscConfig+0x2fe>
 8004174:	e0c6      	b.n	8004304 <HAL_RCC_OscConfig+0x48c>
 8004176:	231f      	movs	r3, #31
 8004178:	18fb      	adds	r3, r7, r3
 800417a:	2200      	movs	r2, #0
 800417c:	701a      	strb	r2, [r3, #0]
 800417e:	4b09      	ldr	r3, [pc, #36]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 8004180:	689b      	ldr	r3, [r3, #8]
 8004182:	2238      	movs	r2, #56	; 0x38
 8004184:	4013      	ands	r3, r2
 8004186:	2b20      	cmp	r3, #32
 8004188:	d11e      	bne.n	80041c8 <HAL_RCC_OscConfig+0x350>
 800418a:	4b06      	ldr	r3, [pc, #24]	; (80041a4 <HAL_RCC_OscConfig+0x32c>)
 800418c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800418e:	2202      	movs	r2, #2
 8004190:	4013      	ands	r3, r2
 8004192:	d100      	bne.n	8004196 <HAL_RCC_OscConfig+0x31e>
 8004194:	e0b6      	b.n	8004304 <HAL_RCC_OscConfig+0x48c>
 8004196:	687b      	ldr	r3, [r7, #4]
 8004198:	689b      	ldr	r3, [r3, #8]
 800419a:	2b00      	cmp	r3, #0
 800419c:	d000      	beq.n	80041a0 <HAL_RCC_OscConfig+0x328>
 800419e:	e0b1      	b.n	8004304 <HAL_RCC_OscConfig+0x48c>
 80041a0:	2301      	movs	r3, #1
 80041a2:	e166      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 80041a4:	40021000 	.word	0x40021000
 80041a8:	fffeffff 	.word	0xfffeffff
 80041ac:	fffbffff 	.word	0xfffbffff
 80041b0:	ffff80ff 	.word	0xffff80ff
 80041b4:	ffffc7ff 	.word	0xffffc7ff
 80041b8:	00f42400 	.word	0x00f42400
 80041bc:	20000000 	.word	0x20000000
 80041c0:	20000004 	.word	0x20000004
 80041c4:	fffffeff 	.word	0xfffffeff
 80041c8:	4bac      	ldr	r3, [pc, #688]	; (800447c <HAL_RCC_OscConfig+0x604>)
 80041ca:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80041cc:	2380      	movs	r3, #128	; 0x80
 80041ce:	055b      	lsls	r3, r3, #21
 80041d0:	4013      	ands	r3, r2
 80041d2:	d101      	bne.n	80041d8 <HAL_RCC_OscConfig+0x360>
 80041d4:	2301      	movs	r3, #1
 80041d6:	e000      	b.n	80041da <HAL_RCC_OscConfig+0x362>
 80041d8:	2300      	movs	r3, #0
 80041da:	2b00      	cmp	r3, #0
 80041dc:	d011      	beq.n	8004202 <HAL_RCC_OscConfig+0x38a>
 80041de:	4ba7      	ldr	r3, [pc, #668]	; (800447c <HAL_RCC_OscConfig+0x604>)
 80041e0:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80041e2:	4ba6      	ldr	r3, [pc, #664]	; (800447c <HAL_RCC_OscConfig+0x604>)
 80041e4:	2180      	movs	r1, #128	; 0x80
 80041e6:	0549      	lsls	r1, r1, #21
 80041e8:	430a      	orrs	r2, r1
 80041ea:	63da      	str	r2, [r3, #60]	; 0x3c
 80041ec:	4ba3      	ldr	r3, [pc, #652]	; (800447c <HAL_RCC_OscConfig+0x604>)
 80041ee:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80041f0:	2380      	movs	r3, #128	; 0x80
 80041f2:	055b      	lsls	r3, r3, #21
 80041f4:	4013      	ands	r3, r2
 80041f6:	60fb      	str	r3, [r7, #12]
 80041f8:	68fb      	ldr	r3, [r7, #12]
 80041fa:	231f      	movs	r3, #31
 80041fc:	18fb      	adds	r3, r7, r3
 80041fe:	2201      	movs	r2, #1
 8004200:	701a      	strb	r2, [r3, #0]
 8004202:	4b9f      	ldr	r3, [pc, #636]	; (8004480 <HAL_RCC_OscConfig+0x608>)
 8004204:	681a      	ldr	r2, [r3, #0]
 8004206:	2380      	movs	r3, #128	; 0x80
 8004208:	005b      	lsls	r3, r3, #1
 800420a:	4013      	ands	r3, r2
 800420c:	d11a      	bne.n	8004244 <HAL_RCC_OscConfig+0x3cc>
 800420e:	4b9c      	ldr	r3, [pc, #624]	; (8004480 <HAL_RCC_OscConfig+0x608>)
 8004210:	681a      	ldr	r2, [r3, #0]
 8004212:	4b9b      	ldr	r3, [pc, #620]	; (8004480 <HAL_RCC_OscConfig+0x608>)
 8004214:	2180      	movs	r1, #128	; 0x80
 8004216:	0049      	lsls	r1, r1, #1
 8004218:	430a      	orrs	r2, r1
 800421a:	601a      	str	r2, [r3, #0]
 800421c:	f7fd ff94 	bl	8002148 <HAL_GetTick>
 8004220:	0003      	movs	r3, r0
 8004222:	613b      	str	r3, [r7, #16]
 8004224:	e008      	b.n	8004238 <HAL_RCC_OscConfig+0x3c0>
 8004226:	f7fd ff8f 	bl	8002148 <HAL_GetTick>
 800422a:	0002      	movs	r2, r0
 800422c:	693b      	ldr	r3, [r7, #16]
 800422e:	1ad3      	subs	r3, r2, r3
 8004230:	2b02      	cmp	r3, #2
 8004232:	d901      	bls.n	8004238 <HAL_RCC_OscConfig+0x3c0>
 8004234:	2303      	movs	r3, #3
 8004236:	e11c      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 8004238:	4b91      	ldr	r3, [pc, #580]	; (8004480 <HAL_RCC_OscConfig+0x608>)
 800423a:	681a      	ldr	r2, [r3, #0]
 800423c:	2380      	movs	r3, #128	; 0x80
 800423e:	005b      	lsls	r3, r3, #1
 8004240:	4013      	ands	r3, r2
 8004242:	d0f0      	beq.n	8004226 <HAL_RCC_OscConfig+0x3ae>
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	689b      	ldr	r3, [r3, #8]
 8004248:	2b01      	cmp	r3, #1
 800424a:	d106      	bne.n	800425a <HAL_RCC_OscConfig+0x3e2>
 800424c:	4b8b      	ldr	r3, [pc, #556]	; (800447c <HAL_RCC_OscConfig+0x604>)
 800424e:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8004250:	4b8a      	ldr	r3, [pc, #552]	; (800447c <HAL_RCC_OscConfig+0x604>)
 8004252:	2101      	movs	r1, #1
 8004254:	430a      	orrs	r2, r1
 8004256:	65da      	str	r2, [r3, #92]	; 0x5c
 8004258:	e01c      	b.n	8004294 <HAL_RCC_OscConfig+0x41c>
 800425a:	687b      	ldr	r3, [r7, #4]
 800425c:	689b      	ldr	r3, [r3, #8]
 800425e:	2b05      	cmp	r3, #5
 8004260:	d10c      	bne.n	800427c <HAL_RCC_OscConfig+0x404>
 8004262:	4b86      	ldr	r3, [pc, #536]	; (800447c <HAL_RCC_OscConfig+0x604>)
 8004264:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8004266:	4b85      	ldr	r3, [pc, #532]	; (800447c <HAL_RCC_OscConfig+0x604>)
 8004268:	2104      	movs	r1, #4
 800426a:	430a      	orrs	r2, r1
 800426c:	65da      	str	r2, [r3, #92]	; 0x5c
 800426e:	4b83      	ldr	r3, [pc, #524]	; (800447c <HAL_RCC_OscConfig+0x604>)
 8004270:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8004272:	4b82      	ldr	r3, [pc, #520]	; (800447c <HAL_RCC_OscConfig+0x604>)
 8004274:	2101      	movs	r1, #1
 8004276:	430a      	orrs	r2, r1
 8004278:	65da      	str	r2, [r3, #92]	; 0x5c
 800427a:	e00b      	b.n	8004294 <HAL_RCC_OscConfig+0x41c>
 800427c:	4b7f      	ldr	r3, [pc, #508]	; (800447c <HAL_RCC_OscConfig+0x604>)
 800427e:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8004280:	4b7e      	ldr	r3, [pc, #504]	; (800447c <HAL_RCC_OscConfig+0x604>)
 8004282:	2101      	movs	r1, #1
 8004284:	438a      	bics	r2, r1
 8004286:	65da      	str	r2, [r3, #92]	; 0x5c
 8004288:	4b7c      	ldr	r3, [pc, #496]	; (800447c <HAL_RCC_OscConfig+0x604>)
 800428a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800428c:	4b7b      	ldr	r3, [pc, #492]	; (800447c <HAL_RCC_OscConfig+0x604>)
 800428e:	2104      	movs	r1, #4
 8004290:	438a      	bics	r2, r1
 8004292:	65da      	str	r2, [r3, #92]	; 0x5c
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	689b      	ldr	r3, [r3, #8]
 8004298:	2b00      	cmp	r3, #0
 800429a:	d014      	beq.n	80042c6 <HAL_RCC_OscConfig+0x44e>
 800429c:	f7fd ff54 	bl	8002148 <HAL_GetTick>
 80042a0:	0003      	movs	r3, r0
 80042a2:	613b      	str	r3, [r7, #16]
 80042a4:	e009      	b.n	80042ba <HAL_RCC_OscConfig+0x442>
 80042a6:	f7fd ff4f 	bl	8002148 <HAL_GetTick>
 80042aa:	0002      	movs	r2, r0
 80042ac:	693b      	ldr	r3, [r7, #16]
 80042ae:	1ad3      	subs	r3, r2, r3
 80042b0:	4a74      	ldr	r2, [pc, #464]	; (8004484 <HAL_RCC_OscConfig+0x60c>)
 80042b2:	4293      	cmp	r3, r2
 80042b4:	d901      	bls.n	80042ba <HAL_RCC_OscConfig+0x442>
 80042b6:	2303      	movs	r3, #3
 80042b8:	e0db      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 80042ba:	4b70      	ldr	r3, [pc, #448]	; (800447c <HAL_RCC_OscConfig+0x604>)
 80042bc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80042be:	2202      	movs	r2, #2
 80042c0:	4013      	ands	r3, r2
 80042c2:	d0f0      	beq.n	80042a6 <HAL_RCC_OscConfig+0x42e>
 80042c4:	e013      	b.n	80042ee <HAL_RCC_OscConfig+0x476>
 80042c6:	f7fd ff3f 	bl	8002148 <HAL_GetTick>
 80042ca:	0003      	movs	r3, r0
 80042cc:	613b      	str	r3, [r7, #16]
 80042ce:	e009      	b.n	80042e4 <HAL_RCC_OscConfig+0x46c>
 80042d0:	f7fd ff3a 	bl	8002148 <HAL_GetTick>
 80042d4:	0002      	movs	r2, r0
 80042d6:	693b      	ldr	r3, [r7, #16]
 80042d8:	1ad3      	subs	r3, r2, r3
 80042da:	4a6a      	ldr	r2, [pc, #424]	; (8004484 <HAL_RCC_OscConfig+0x60c>)
 80042dc:	4293      	cmp	r3, r2
 80042de:	d901      	bls.n	80042e4 <HAL_RCC_OscConfig+0x46c>
 80042e0:	2303      	movs	r3, #3
 80042e2:	e0c6      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 80042e4:	4b65      	ldr	r3, [pc, #404]	; (800447c <HAL_RCC_OscConfig+0x604>)
 80042e6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80042e8:	2202      	movs	r2, #2
 80042ea:	4013      	ands	r3, r2
 80042ec:	d1f0      	bne.n	80042d0 <HAL_RCC_OscConfig+0x458>
 80042ee:	231f      	movs	r3, #31
 80042f0:	18fb      	adds	r3, r7, r3
 80042f2:	781b      	ldrb	r3, [r3, #0]
 80042f4:	2b01      	cmp	r3, #1
 80042f6:	d105      	bne.n	8004304 <HAL_RCC_OscConfig+0x48c>
 80042f8:	4b60      	ldr	r3, [pc, #384]	; (800447c <HAL_RCC_OscConfig+0x604>)
 80042fa:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80042fc:	4b5f      	ldr	r3, [pc, #380]	; (800447c <HAL_RCC_OscConfig+0x604>)
 80042fe:	4962      	ldr	r1, [pc, #392]	; (8004488 <HAL_RCC_OscConfig+0x610>)
 8004300:	400a      	ands	r2, r1
 8004302:	63da      	str	r2, [r3, #60]	; 0x3c
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	69db      	ldr	r3, [r3, #28]
 8004308:	2b00      	cmp	r3, #0
 800430a:	d100      	bne.n	800430e <HAL_RCC_OscConfig+0x496>
 800430c:	e0b0      	b.n	8004470 <HAL_RCC_OscConfig+0x5f8>
 800430e:	4b5b      	ldr	r3, [pc, #364]	; (800447c <HAL_RCC_OscConfig+0x604>)
 8004310:	689b      	ldr	r3, [r3, #8]
 8004312:	2238      	movs	r2, #56	; 0x38
 8004314:	4013      	ands	r3, r2
 8004316:	2b10      	cmp	r3, #16
 8004318:	d100      	bne.n	800431c <HAL_RCC_OscConfig+0x4a4>
 800431a:	e078      	b.n	800440e <HAL_RCC_OscConfig+0x596>
 800431c:	687b      	ldr	r3, [r7, #4]
 800431e:	69db      	ldr	r3, [r3, #28]
 8004320:	2b02      	cmp	r3, #2
 8004322:	d153      	bne.n	80043cc <HAL_RCC_OscConfig+0x554>
 8004324:	4b55      	ldr	r3, [pc, #340]	; (800447c <HAL_RCC_OscConfig+0x604>)
 8004326:	681a      	ldr	r2, [r3, #0]
 8004328:	4b54      	ldr	r3, [pc, #336]	; (800447c <HAL_RCC_OscConfig+0x604>)
 800432a:	4958      	ldr	r1, [pc, #352]	; (800448c <HAL_RCC_OscConfig+0x614>)
 800432c:	400a      	ands	r2, r1
 800432e:	601a      	str	r2, [r3, #0]
 8004330:	f7fd ff0a 	bl	8002148 <HAL_GetTick>
 8004334:	0003      	movs	r3, r0
 8004336:	613b      	str	r3, [r7, #16]
 8004338:	e008      	b.n	800434c <HAL_RCC_OscConfig+0x4d4>
 800433a:	f7fd ff05 	bl	8002148 <HAL_GetTick>
 800433e:	0002      	movs	r2, r0
 8004340:	693b      	ldr	r3, [r7, #16]
 8004342:	1ad3      	subs	r3, r2, r3
 8004344:	2b02      	cmp	r3, #2
 8004346:	d901      	bls.n	800434c <HAL_RCC_OscConfig+0x4d4>
 8004348:	2303      	movs	r3, #3
 800434a:	e092      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 800434c:	4b4b      	ldr	r3, [pc, #300]	; (800447c <HAL_RCC_OscConfig+0x604>)
 800434e:	681a      	ldr	r2, [r3, #0]
 8004350:	2380      	movs	r3, #128	; 0x80
 8004352:	049b      	lsls	r3, r3, #18
 8004354:	4013      	ands	r3, r2
 8004356:	d1f0      	bne.n	800433a <HAL_RCC_OscConfig+0x4c2>
 8004358:	4b48      	ldr	r3, [pc, #288]	; (800447c <HAL_RCC_OscConfig+0x604>)
 800435a:	68db      	ldr	r3, [r3, #12]
 800435c:	4a4c      	ldr	r2, [pc, #304]	; (8004490 <HAL_RCC_OscConfig+0x618>)
 800435e:	4013      	ands	r3, r2
 8004360:	0019      	movs	r1, r3
 8004362:	687b      	ldr	r3, [r7, #4]
 8004364:	6a1a      	ldr	r2, [r3, #32]
 8004366:	687b      	ldr	r3, [r7, #4]
 8004368:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800436a:	431a      	orrs	r2, r3
 800436c:	687b      	ldr	r3, [r7, #4]
 800436e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004370:	021b      	lsls	r3, r3, #8
 8004372:	431a      	orrs	r2, r3
 8004374:	687b      	ldr	r3, [r7, #4]
 8004376:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004378:	431a      	orrs	r2, r3
 800437a:	687b      	ldr	r3, [r7, #4]
 800437c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800437e:	431a      	orrs	r2, r3
 8004380:	4b3e      	ldr	r3, [pc, #248]	; (800447c <HAL_RCC_OscConfig+0x604>)
 8004382:	430a      	orrs	r2, r1
 8004384:	60da      	str	r2, [r3, #12]
 8004386:	4b3d      	ldr	r3, [pc, #244]	; (800447c <HAL_RCC_OscConfig+0x604>)
 8004388:	681a      	ldr	r2, [r3, #0]
 800438a:	4b3c      	ldr	r3, [pc, #240]	; (800447c <HAL_RCC_OscConfig+0x604>)
 800438c:	2180      	movs	r1, #128	; 0x80
 800438e:	0449      	lsls	r1, r1, #17
 8004390:	430a      	orrs	r2, r1
 8004392:	601a      	str	r2, [r3, #0]
 8004394:	4b39      	ldr	r3, [pc, #228]	; (800447c <HAL_RCC_OscConfig+0x604>)
 8004396:	68da      	ldr	r2, [r3, #12]
 8004398:	4b38      	ldr	r3, [pc, #224]	; (800447c <HAL_RCC_OscConfig+0x604>)
 800439a:	2180      	movs	r1, #128	; 0x80
 800439c:	0549      	lsls	r1, r1, #21
 800439e:	430a      	orrs	r2, r1
 80043a0:	60da      	str	r2, [r3, #12]
 80043a2:	f7fd fed1 	bl	8002148 <HAL_GetTick>
 80043a6:	0003      	movs	r3, r0
 80043a8:	613b      	str	r3, [r7, #16]
 80043aa:	e008      	b.n	80043be <HAL_RCC_OscConfig+0x546>
 80043ac:	f7fd fecc 	bl	8002148 <HAL_GetTick>
 80043b0:	0002      	movs	r2, r0
 80043b2:	693b      	ldr	r3, [r7, #16]
 80043b4:	1ad3      	subs	r3, r2, r3
 80043b6:	2b02      	cmp	r3, #2
 80043b8:	d901      	bls.n	80043be <HAL_RCC_OscConfig+0x546>
 80043ba:	2303      	movs	r3, #3
 80043bc:	e059      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 80043be:	4b2f      	ldr	r3, [pc, #188]	; (800447c <HAL_RCC_OscConfig+0x604>)
 80043c0:	681a      	ldr	r2, [r3, #0]
 80043c2:	2380      	movs	r3, #128	; 0x80
 80043c4:	049b      	lsls	r3, r3, #18
 80043c6:	4013      	ands	r3, r2
 80043c8:	d0f0      	beq.n	80043ac <HAL_RCC_OscConfig+0x534>
 80043ca:	e051      	b.n	8004470 <HAL_RCC_OscConfig+0x5f8>
 80043cc:	4b2b      	ldr	r3, [pc, #172]	; (800447c <HAL_RCC_OscConfig+0x604>)
 80043ce:	681a      	ldr	r2, [r3, #0]
 80043d0:	4b2a      	ldr	r3, [pc, #168]	; (800447c <HAL_RCC_OscConfig+0x604>)
 80043d2:	492e      	ldr	r1, [pc, #184]	; (800448c <HAL_RCC_OscConfig+0x614>)
 80043d4:	400a      	ands	r2, r1
 80043d6:	601a      	str	r2, [r3, #0]
 80043d8:	f7fd feb6 	bl	8002148 <HAL_GetTick>
 80043dc:	0003      	movs	r3, r0
 80043de:	613b      	str	r3, [r7, #16]
 80043e0:	e008      	b.n	80043f4 <HAL_RCC_OscConfig+0x57c>
 80043e2:	f7fd feb1 	bl	8002148 <HAL_GetTick>
 80043e6:	0002      	movs	r2, r0
 80043e8:	693b      	ldr	r3, [r7, #16]
 80043ea:	1ad3      	subs	r3, r2, r3
 80043ec:	2b02      	cmp	r3, #2
 80043ee:	d901      	bls.n	80043f4 <HAL_RCC_OscConfig+0x57c>
 80043f0:	2303      	movs	r3, #3
 80043f2:	e03e      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 80043f4:	4b21      	ldr	r3, [pc, #132]	; (800447c <HAL_RCC_OscConfig+0x604>)
 80043f6:	681a      	ldr	r2, [r3, #0]
 80043f8:	2380      	movs	r3, #128	; 0x80
 80043fa:	049b      	lsls	r3, r3, #18
 80043fc:	4013      	ands	r3, r2
 80043fe:	d1f0      	bne.n	80043e2 <HAL_RCC_OscConfig+0x56a>
 8004400:	4b1e      	ldr	r3, [pc, #120]	; (800447c <HAL_RCC_OscConfig+0x604>)
 8004402:	68da      	ldr	r2, [r3, #12]
 8004404:	4b1d      	ldr	r3, [pc, #116]	; (800447c <HAL_RCC_OscConfig+0x604>)
 8004406:	4923      	ldr	r1, [pc, #140]	; (8004494 <HAL_RCC_OscConfig+0x61c>)
 8004408:	400a      	ands	r2, r1
 800440a:	60da      	str	r2, [r3, #12]
 800440c:	e030      	b.n	8004470 <HAL_RCC_OscConfig+0x5f8>
 800440e:	687b      	ldr	r3, [r7, #4]
 8004410:	69db      	ldr	r3, [r3, #28]
 8004412:	2b01      	cmp	r3, #1
 8004414:	d101      	bne.n	800441a <HAL_RCC_OscConfig+0x5a2>
 8004416:	2301      	movs	r3, #1
 8004418:	e02b      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 800441a:	4b18      	ldr	r3, [pc, #96]	; (800447c <HAL_RCC_OscConfig+0x604>)
 800441c:	68db      	ldr	r3, [r3, #12]
 800441e:	617b      	str	r3, [r7, #20]
 8004420:	697b      	ldr	r3, [r7, #20]
 8004422:	2203      	movs	r2, #3
 8004424:	401a      	ands	r2, r3
 8004426:	687b      	ldr	r3, [r7, #4]
 8004428:	6a1b      	ldr	r3, [r3, #32]
 800442a:	429a      	cmp	r2, r3
 800442c:	d11e      	bne.n	800446c <HAL_RCC_OscConfig+0x5f4>
 800442e:	697b      	ldr	r3, [r7, #20]
 8004430:	2270      	movs	r2, #112	; 0x70
 8004432:	401a      	ands	r2, r3
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004438:	429a      	cmp	r2, r3
 800443a:	d117      	bne.n	800446c <HAL_RCC_OscConfig+0x5f4>
 800443c:	697a      	ldr	r2, [r7, #20]
 800443e:	23fe      	movs	r3, #254	; 0xfe
 8004440:	01db      	lsls	r3, r3, #7
 8004442:	401a      	ands	r2, r3
 8004444:	687b      	ldr	r3, [r7, #4]
 8004446:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004448:	021b      	lsls	r3, r3, #8
 800444a:	429a      	cmp	r2, r3
 800444c:	d10e      	bne.n	800446c <HAL_RCC_OscConfig+0x5f4>
 800444e:	697a      	ldr	r2, [r7, #20]
 8004450:	23f8      	movs	r3, #248	; 0xf8
 8004452:	039b      	lsls	r3, r3, #14
 8004454:	401a      	ands	r2, r3
 8004456:	687b      	ldr	r3, [r7, #4]
 8004458:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800445a:	429a      	cmp	r2, r3
 800445c:	d106      	bne.n	800446c <HAL_RCC_OscConfig+0x5f4>
 800445e:	697b      	ldr	r3, [r7, #20]
 8004460:	0f5b      	lsrs	r3, r3, #29
 8004462:	075a      	lsls	r2, r3, #29
 8004464:	687b      	ldr	r3, [r7, #4]
 8004466:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004468:	429a      	cmp	r2, r3
 800446a:	d001      	beq.n	8004470 <HAL_RCC_OscConfig+0x5f8>
 800446c:	2301      	movs	r3, #1
 800446e:	e000      	b.n	8004472 <HAL_RCC_OscConfig+0x5fa>
 8004470:	2300      	movs	r3, #0
 8004472:	0018      	movs	r0, r3
 8004474:	46bd      	mov	sp, r7
 8004476:	b008      	add	sp, #32
 8004478:	bd80      	pop	{r7, pc}
 800447a:	46c0      	nop			; (mov r8, r8)
 800447c:	40021000 	.word	0x40021000
 8004480:	40007000 	.word	0x40007000
 8004484:	00001388 	.word	0x00001388
 8004488:	efffffff 	.word	0xefffffff
 800448c:	feffffff 	.word	0xfeffffff
 8004490:	1fc1808c 	.word	0x1fc1808c
 8004494:	effefffc 	.word	0xeffefffc

08004498 <HAL_RCC_ClockConfig>:
 8004498:	b580      	push	{r7, lr}
 800449a:	b084      	sub	sp, #16
 800449c:	af00      	add	r7, sp, #0
 800449e:	6078      	str	r0, [r7, #4]
 80044a0:	6039      	str	r1, [r7, #0]
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	2b00      	cmp	r3, #0
 80044a6:	d101      	bne.n	80044ac <HAL_RCC_ClockConfig+0x14>
 80044a8:	2301      	movs	r3, #1
 80044aa:	e0e9      	b.n	8004680 <HAL_RCC_ClockConfig+0x1e8>
 80044ac:	4b76      	ldr	r3, [pc, #472]	; (8004688 <HAL_RCC_ClockConfig+0x1f0>)
 80044ae:	681b      	ldr	r3, [r3, #0]
 80044b0:	2207      	movs	r2, #7
 80044b2:	4013      	ands	r3, r2
 80044b4:	683a      	ldr	r2, [r7, #0]
 80044b6:	429a      	cmp	r2, r3
 80044b8:	d91e      	bls.n	80044f8 <HAL_RCC_ClockConfig+0x60>
 80044ba:	4b73      	ldr	r3, [pc, #460]	; (8004688 <HAL_RCC_ClockConfig+0x1f0>)
 80044bc:	681b      	ldr	r3, [r3, #0]
 80044be:	2207      	movs	r2, #7
 80044c0:	4393      	bics	r3, r2
 80044c2:	0019      	movs	r1, r3
 80044c4:	4b70      	ldr	r3, [pc, #448]	; (8004688 <HAL_RCC_ClockConfig+0x1f0>)
 80044c6:	683a      	ldr	r2, [r7, #0]
 80044c8:	430a      	orrs	r2, r1
 80044ca:	601a      	str	r2, [r3, #0]
 80044cc:	f7fd fe3c 	bl	8002148 <HAL_GetTick>
 80044d0:	0003      	movs	r3, r0
 80044d2:	60fb      	str	r3, [r7, #12]
 80044d4:	e009      	b.n	80044ea <HAL_RCC_ClockConfig+0x52>
 80044d6:	f7fd fe37 	bl	8002148 <HAL_GetTick>
 80044da:	0002      	movs	r2, r0
 80044dc:	68fb      	ldr	r3, [r7, #12]
 80044de:	1ad3      	subs	r3, r2, r3
 80044e0:	4a6a      	ldr	r2, [pc, #424]	; (800468c <HAL_RCC_ClockConfig+0x1f4>)
 80044e2:	4293      	cmp	r3, r2
 80044e4:	d901      	bls.n	80044ea <HAL_RCC_ClockConfig+0x52>
 80044e6:	2303      	movs	r3, #3
 80044e8:	e0ca      	b.n	8004680 <HAL_RCC_ClockConfig+0x1e8>
 80044ea:	4b67      	ldr	r3, [pc, #412]	; (8004688 <HAL_RCC_ClockConfig+0x1f0>)
 80044ec:	681b      	ldr	r3, [r3, #0]
 80044ee:	2207      	movs	r2, #7
 80044f0:	4013      	ands	r3, r2
 80044f2:	683a      	ldr	r2, [r7, #0]
 80044f4:	429a      	cmp	r2, r3
 80044f6:	d1ee      	bne.n	80044d6 <HAL_RCC_ClockConfig+0x3e>
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	681b      	ldr	r3, [r3, #0]
 80044fc:	2202      	movs	r2, #2
 80044fe:	4013      	ands	r3, r2
 8004500:	d015      	beq.n	800452e <HAL_RCC_ClockConfig+0x96>
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	681b      	ldr	r3, [r3, #0]
 8004506:	2204      	movs	r2, #4
 8004508:	4013      	ands	r3, r2
 800450a:	d006      	beq.n	800451a <HAL_RCC_ClockConfig+0x82>
 800450c:	4b60      	ldr	r3, [pc, #384]	; (8004690 <HAL_RCC_ClockConfig+0x1f8>)
 800450e:	689a      	ldr	r2, [r3, #8]
 8004510:	4b5f      	ldr	r3, [pc, #380]	; (8004690 <HAL_RCC_ClockConfig+0x1f8>)
 8004512:	21e0      	movs	r1, #224	; 0xe0
 8004514:	01c9      	lsls	r1, r1, #7
 8004516:	430a      	orrs	r2, r1
 8004518:	609a      	str	r2, [r3, #8]
 800451a:	4b5d      	ldr	r3, [pc, #372]	; (8004690 <HAL_RCC_ClockConfig+0x1f8>)
 800451c:	689b      	ldr	r3, [r3, #8]
 800451e:	4a5d      	ldr	r2, [pc, #372]	; (8004694 <HAL_RCC_ClockConfig+0x1fc>)
 8004520:	4013      	ands	r3, r2
 8004522:	0019      	movs	r1, r3
 8004524:	687b      	ldr	r3, [r7, #4]
 8004526:	689a      	ldr	r2, [r3, #8]
 8004528:	4b59      	ldr	r3, [pc, #356]	; (8004690 <HAL_RCC_ClockConfig+0x1f8>)
 800452a:	430a      	orrs	r2, r1
 800452c:	609a      	str	r2, [r3, #8]
 800452e:	687b      	ldr	r3, [r7, #4]
 8004530:	681b      	ldr	r3, [r3, #0]
 8004532:	2201      	movs	r2, #1
 8004534:	4013      	ands	r3, r2
 8004536:	d057      	beq.n	80045e8 <HAL_RCC_ClockConfig+0x150>
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	685b      	ldr	r3, [r3, #4]
 800453c:	2b01      	cmp	r3, #1
 800453e:	d107      	bne.n	8004550 <HAL_RCC_ClockConfig+0xb8>
 8004540:	4b53      	ldr	r3, [pc, #332]	; (8004690 <HAL_RCC_ClockConfig+0x1f8>)
 8004542:	681a      	ldr	r2, [r3, #0]
 8004544:	2380      	movs	r3, #128	; 0x80
 8004546:	029b      	lsls	r3, r3, #10
 8004548:	4013      	ands	r3, r2
 800454a:	d12b      	bne.n	80045a4 <HAL_RCC_ClockConfig+0x10c>
 800454c:	2301      	movs	r3, #1
 800454e:	e097      	b.n	8004680 <HAL_RCC_ClockConfig+0x1e8>
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	685b      	ldr	r3, [r3, #4]
 8004554:	2b02      	cmp	r3, #2
 8004556:	d107      	bne.n	8004568 <HAL_RCC_ClockConfig+0xd0>
 8004558:	4b4d      	ldr	r3, [pc, #308]	; (8004690 <HAL_RCC_ClockConfig+0x1f8>)
 800455a:	681a      	ldr	r2, [r3, #0]
 800455c:	2380      	movs	r3, #128	; 0x80
 800455e:	049b      	lsls	r3, r3, #18
 8004560:	4013      	ands	r3, r2
 8004562:	d11f      	bne.n	80045a4 <HAL_RCC_ClockConfig+0x10c>
 8004564:	2301      	movs	r3, #1
 8004566:	e08b      	b.n	8004680 <HAL_RCC_ClockConfig+0x1e8>
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	685b      	ldr	r3, [r3, #4]
 800456c:	2b00      	cmp	r3, #0
 800456e:	d107      	bne.n	8004580 <HAL_RCC_ClockConfig+0xe8>
 8004570:	4b47      	ldr	r3, [pc, #284]	; (8004690 <HAL_RCC_ClockConfig+0x1f8>)
 8004572:	681a      	ldr	r2, [r3, #0]
 8004574:	2380      	movs	r3, #128	; 0x80
 8004576:	00db      	lsls	r3, r3, #3
 8004578:	4013      	ands	r3, r2
 800457a:	d113      	bne.n	80045a4 <HAL_RCC_ClockConfig+0x10c>
 800457c:	2301      	movs	r3, #1
 800457e:	e07f      	b.n	8004680 <HAL_RCC_ClockConfig+0x1e8>
 8004580:	687b      	ldr	r3, [r7, #4]
 8004582:	685b      	ldr	r3, [r3, #4]
 8004584:	2b03      	cmp	r3, #3
 8004586:	d106      	bne.n	8004596 <HAL_RCC_ClockConfig+0xfe>
 8004588:	4b41      	ldr	r3, [pc, #260]	; (8004690 <HAL_RCC_ClockConfig+0x1f8>)
 800458a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800458c:	2202      	movs	r2, #2
 800458e:	4013      	ands	r3, r2
 8004590:	d108      	bne.n	80045a4 <HAL_RCC_ClockConfig+0x10c>
 8004592:	2301      	movs	r3, #1
 8004594:	e074      	b.n	8004680 <HAL_RCC_ClockConfig+0x1e8>
 8004596:	4b3e      	ldr	r3, [pc, #248]	; (8004690 <HAL_RCC_ClockConfig+0x1f8>)
 8004598:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800459a:	2202      	movs	r2, #2
 800459c:	4013      	ands	r3, r2
 800459e:	d101      	bne.n	80045a4 <HAL_RCC_ClockConfig+0x10c>
 80045a0:	2301      	movs	r3, #1
 80045a2:	e06d      	b.n	8004680 <HAL_RCC_ClockConfig+0x1e8>
 80045a4:	4b3a      	ldr	r3, [pc, #232]	; (8004690 <HAL_RCC_ClockConfig+0x1f8>)
 80045a6:	689b      	ldr	r3, [r3, #8]
 80045a8:	2207      	movs	r2, #7
 80045aa:	4393      	bics	r3, r2
 80045ac:	0019      	movs	r1, r3
 80045ae:	687b      	ldr	r3, [r7, #4]
 80045b0:	685a      	ldr	r2, [r3, #4]
 80045b2:	4b37      	ldr	r3, [pc, #220]	; (8004690 <HAL_RCC_ClockConfig+0x1f8>)
 80045b4:	430a      	orrs	r2, r1
 80045b6:	609a      	str	r2, [r3, #8]
 80045b8:	f7fd fdc6 	bl	8002148 <HAL_GetTick>
 80045bc:	0003      	movs	r3, r0
 80045be:	60fb      	str	r3, [r7, #12]
 80045c0:	e009      	b.n	80045d6 <HAL_RCC_ClockConfig+0x13e>
 80045c2:	f7fd fdc1 	bl	8002148 <HAL_GetTick>
 80045c6:	0002      	movs	r2, r0
 80045c8:	68fb      	ldr	r3, [r7, #12]
 80045ca:	1ad3      	subs	r3, r2, r3
 80045cc:	4a2f      	ldr	r2, [pc, #188]	; (800468c <HAL_RCC_ClockConfig+0x1f4>)
 80045ce:	4293      	cmp	r3, r2
 80045d0:	d901      	bls.n	80045d6 <HAL_RCC_ClockConfig+0x13e>
 80045d2:	2303      	movs	r3, #3
 80045d4:	e054      	b.n	8004680 <HAL_RCC_ClockConfig+0x1e8>
 80045d6:	4b2e      	ldr	r3, [pc, #184]	; (8004690 <HAL_RCC_ClockConfig+0x1f8>)
 80045d8:	689b      	ldr	r3, [r3, #8]
 80045da:	2238      	movs	r2, #56	; 0x38
 80045dc:	401a      	ands	r2, r3
 80045de:	687b      	ldr	r3, [r7, #4]
 80045e0:	685b      	ldr	r3, [r3, #4]
 80045e2:	00db      	lsls	r3, r3, #3
 80045e4:	429a      	cmp	r2, r3
 80045e6:	d1ec      	bne.n	80045c2 <HAL_RCC_ClockConfig+0x12a>
 80045e8:	4b27      	ldr	r3, [pc, #156]	; (8004688 <HAL_RCC_ClockConfig+0x1f0>)
 80045ea:	681b      	ldr	r3, [r3, #0]
 80045ec:	2207      	movs	r2, #7
 80045ee:	4013      	ands	r3, r2
 80045f0:	683a      	ldr	r2, [r7, #0]
 80045f2:	429a      	cmp	r2, r3
 80045f4:	d21e      	bcs.n	8004634 <HAL_RCC_ClockConfig+0x19c>
 80045f6:	4b24      	ldr	r3, [pc, #144]	; (8004688 <HAL_RCC_ClockConfig+0x1f0>)
 80045f8:	681b      	ldr	r3, [r3, #0]
 80045fa:	2207      	movs	r2, #7
 80045fc:	4393      	bics	r3, r2
 80045fe:	0019      	movs	r1, r3
 8004600:	4b21      	ldr	r3, [pc, #132]	; (8004688 <HAL_RCC_ClockConfig+0x1f0>)
 8004602:	683a      	ldr	r2, [r7, #0]
 8004604:	430a      	orrs	r2, r1
 8004606:	601a      	str	r2, [r3, #0]
 8004608:	f7fd fd9e 	bl	8002148 <HAL_GetTick>
 800460c:	0003      	movs	r3, r0
 800460e:	60fb      	str	r3, [r7, #12]
 8004610:	e009      	b.n	8004626 <HAL_RCC_ClockConfig+0x18e>
 8004612:	f7fd fd99 	bl	8002148 <HAL_GetTick>
 8004616:	0002      	movs	r2, r0
 8004618:	68fb      	ldr	r3, [r7, #12]
 800461a:	1ad3      	subs	r3, r2, r3
 800461c:	4a1b      	ldr	r2, [pc, #108]	; (800468c <HAL_RCC_ClockConfig+0x1f4>)
 800461e:	4293      	cmp	r3, r2
 8004620:	d901      	bls.n	8004626 <HAL_RCC_ClockConfig+0x18e>
 8004622:	2303      	movs	r3, #3
 8004624:	e02c      	b.n	8004680 <HAL_RCC_ClockConfig+0x1e8>
 8004626:	4b18      	ldr	r3, [pc, #96]	; (8004688 <HAL_RCC_ClockConfig+0x1f0>)
 8004628:	681b      	ldr	r3, [r3, #0]
 800462a:	2207      	movs	r2, #7
 800462c:	4013      	ands	r3, r2
 800462e:	683a      	ldr	r2, [r7, #0]
 8004630:	429a      	cmp	r2, r3
 8004632:	d1ee      	bne.n	8004612 <HAL_RCC_ClockConfig+0x17a>
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	681b      	ldr	r3, [r3, #0]
 8004638:	2204      	movs	r2, #4
 800463a:	4013      	ands	r3, r2
 800463c:	d009      	beq.n	8004652 <HAL_RCC_ClockConfig+0x1ba>
 800463e:	4b14      	ldr	r3, [pc, #80]	; (8004690 <HAL_RCC_ClockConfig+0x1f8>)
 8004640:	689b      	ldr	r3, [r3, #8]
 8004642:	4a15      	ldr	r2, [pc, #84]	; (8004698 <HAL_RCC_ClockConfig+0x200>)
 8004644:	4013      	ands	r3, r2
 8004646:	0019      	movs	r1, r3
 8004648:	687b      	ldr	r3, [r7, #4]
 800464a:	68da      	ldr	r2, [r3, #12]
 800464c:	4b10      	ldr	r3, [pc, #64]	; (8004690 <HAL_RCC_ClockConfig+0x1f8>)
 800464e:	430a      	orrs	r2, r1
 8004650:	609a      	str	r2, [r3, #8]
 8004652:	f000 f829 	bl	80046a8 <HAL_RCC_GetSysClockFreq>
 8004656:	0001      	movs	r1, r0
 8004658:	4b0d      	ldr	r3, [pc, #52]	; (8004690 <HAL_RCC_ClockConfig+0x1f8>)
 800465a:	689b      	ldr	r3, [r3, #8]
 800465c:	0a1b      	lsrs	r3, r3, #8
 800465e:	220f      	movs	r2, #15
 8004660:	401a      	ands	r2, r3
 8004662:	4b0e      	ldr	r3, [pc, #56]	; (800469c <HAL_RCC_ClockConfig+0x204>)
 8004664:	0092      	lsls	r2, r2, #2
 8004666:	58d3      	ldr	r3, [r2, r3]
 8004668:	221f      	movs	r2, #31
 800466a:	4013      	ands	r3, r2
 800466c:	000a      	movs	r2, r1
 800466e:	40da      	lsrs	r2, r3
 8004670:	4b0b      	ldr	r3, [pc, #44]	; (80046a0 <HAL_RCC_ClockConfig+0x208>)
 8004672:	601a      	str	r2, [r3, #0]
 8004674:	4b0b      	ldr	r3, [pc, #44]	; (80046a4 <HAL_RCC_ClockConfig+0x20c>)
 8004676:	681b      	ldr	r3, [r3, #0]
 8004678:	0018      	movs	r0, r3
 800467a:	f7fd fd09 	bl	8002090 <HAL_InitTick>
 800467e:	0003      	movs	r3, r0
 8004680:	0018      	movs	r0, r3
 8004682:	46bd      	mov	sp, r7
 8004684:	b004      	add	sp, #16
 8004686:	bd80      	pop	{r7, pc}
 8004688:	40022000 	.word	0x40022000
 800468c:	00001388 	.word	0x00001388
 8004690:	40021000 	.word	0x40021000
 8004694:	fffff0ff 	.word	0xfffff0ff
 8004698:	ffff8fff 	.word	0xffff8fff
 800469c:	08007314 	.word	0x08007314
 80046a0:	20000000 	.word	0x20000000
 80046a4:	20000004 	.word	0x20000004

080046a8 <HAL_RCC_GetSysClockFreq>:
 80046a8:	b580      	push	{r7, lr}
 80046aa:	b086      	sub	sp, #24
 80046ac:	af00      	add	r7, sp, #0
 80046ae:	4b3c      	ldr	r3, [pc, #240]	; (80047a0 <HAL_RCC_GetSysClockFreq+0xf8>)
 80046b0:	689b      	ldr	r3, [r3, #8]
 80046b2:	2238      	movs	r2, #56	; 0x38
 80046b4:	4013      	ands	r3, r2
 80046b6:	d10f      	bne.n	80046d8 <HAL_RCC_GetSysClockFreq+0x30>
 80046b8:	4b39      	ldr	r3, [pc, #228]	; (80047a0 <HAL_RCC_GetSysClockFreq+0xf8>)
 80046ba:	681b      	ldr	r3, [r3, #0]
 80046bc:	0adb      	lsrs	r3, r3, #11
 80046be:	2207      	movs	r2, #7
 80046c0:	4013      	ands	r3, r2
 80046c2:	2201      	movs	r2, #1
 80046c4:	409a      	lsls	r2, r3
 80046c6:	0013      	movs	r3, r2
 80046c8:	603b      	str	r3, [r7, #0]
 80046ca:	6839      	ldr	r1, [r7, #0]
 80046cc:	4835      	ldr	r0, [pc, #212]	; (80047a4 <HAL_RCC_GetSysClockFreq+0xfc>)
 80046ce:	f7fb fd21 	bl	8000114 <__udivsi3>
 80046d2:	0003      	movs	r3, r0
 80046d4:	613b      	str	r3, [r7, #16]
 80046d6:	e05d      	b.n	8004794 <HAL_RCC_GetSysClockFreq+0xec>
 80046d8:	4b31      	ldr	r3, [pc, #196]	; (80047a0 <HAL_RCC_GetSysClockFreq+0xf8>)
 80046da:	689b      	ldr	r3, [r3, #8]
 80046dc:	2238      	movs	r2, #56	; 0x38
 80046de:	4013      	ands	r3, r2
 80046e0:	2b08      	cmp	r3, #8
 80046e2:	d102      	bne.n	80046ea <HAL_RCC_GetSysClockFreq+0x42>
 80046e4:	4b30      	ldr	r3, [pc, #192]	; (80047a8 <HAL_RCC_GetSysClockFreq+0x100>)
 80046e6:	613b      	str	r3, [r7, #16]
 80046e8:	e054      	b.n	8004794 <HAL_RCC_GetSysClockFreq+0xec>
 80046ea:	4b2d      	ldr	r3, [pc, #180]	; (80047a0 <HAL_RCC_GetSysClockFreq+0xf8>)
 80046ec:	689b      	ldr	r3, [r3, #8]
 80046ee:	2238      	movs	r2, #56	; 0x38
 80046f0:	4013      	ands	r3, r2
 80046f2:	2b10      	cmp	r3, #16
 80046f4:	d138      	bne.n	8004768 <HAL_RCC_GetSysClockFreq+0xc0>
 80046f6:	4b2a      	ldr	r3, [pc, #168]	; (80047a0 <HAL_RCC_GetSysClockFreq+0xf8>)
 80046f8:	68db      	ldr	r3, [r3, #12]
 80046fa:	2203      	movs	r2, #3
 80046fc:	4013      	ands	r3, r2
 80046fe:	60fb      	str	r3, [r7, #12]
 8004700:	4b27      	ldr	r3, [pc, #156]	; (80047a0 <HAL_RCC_GetSysClockFreq+0xf8>)
 8004702:	68db      	ldr	r3, [r3, #12]
 8004704:	091b      	lsrs	r3, r3, #4
 8004706:	2207      	movs	r2, #7
 8004708:	4013      	ands	r3, r2
 800470a:	3301      	adds	r3, #1
 800470c:	60bb      	str	r3, [r7, #8]
 800470e:	68fb      	ldr	r3, [r7, #12]
 8004710:	2b03      	cmp	r3, #3
 8004712:	d10d      	bne.n	8004730 <HAL_RCC_GetSysClockFreq+0x88>
 8004714:	68b9      	ldr	r1, [r7, #8]
 8004716:	4824      	ldr	r0, [pc, #144]	; (80047a8 <HAL_RCC_GetSysClockFreq+0x100>)
 8004718:	f7fb fcfc 	bl	8000114 <__udivsi3>
 800471c:	0003      	movs	r3, r0
 800471e:	0019      	movs	r1, r3
 8004720:	4b1f      	ldr	r3, [pc, #124]	; (80047a0 <HAL_RCC_GetSysClockFreq+0xf8>)
 8004722:	68db      	ldr	r3, [r3, #12]
 8004724:	0a1b      	lsrs	r3, r3, #8
 8004726:	227f      	movs	r2, #127	; 0x7f
 8004728:	4013      	ands	r3, r2
 800472a:	434b      	muls	r3, r1
 800472c:	617b      	str	r3, [r7, #20]
 800472e:	e00d      	b.n	800474c <HAL_RCC_GetSysClockFreq+0xa4>
 8004730:	68b9      	ldr	r1, [r7, #8]
 8004732:	481c      	ldr	r0, [pc, #112]	; (80047a4 <HAL_RCC_GetSysClockFreq+0xfc>)
 8004734:	f7fb fcee 	bl	8000114 <__udivsi3>
 8004738:	0003      	movs	r3, r0
 800473a:	0019      	movs	r1, r3
 800473c:	4b18      	ldr	r3, [pc, #96]	; (80047a0 <HAL_RCC_GetSysClockFreq+0xf8>)
 800473e:	68db      	ldr	r3, [r3, #12]
 8004740:	0a1b      	lsrs	r3, r3, #8
 8004742:	227f      	movs	r2, #127	; 0x7f
 8004744:	4013      	ands	r3, r2
 8004746:	434b      	muls	r3, r1
 8004748:	617b      	str	r3, [r7, #20]
 800474a:	46c0      	nop			; (mov r8, r8)
 800474c:	4b14      	ldr	r3, [pc, #80]	; (80047a0 <HAL_RCC_GetSysClockFreq+0xf8>)
 800474e:	68db      	ldr	r3, [r3, #12]
 8004750:	0f5b      	lsrs	r3, r3, #29
 8004752:	2207      	movs	r2, #7
 8004754:	4013      	ands	r3, r2
 8004756:	3301      	adds	r3, #1
 8004758:	607b      	str	r3, [r7, #4]
 800475a:	6879      	ldr	r1, [r7, #4]
 800475c:	6978      	ldr	r0, [r7, #20]
 800475e:	f7fb fcd9 	bl	8000114 <__udivsi3>
 8004762:	0003      	movs	r3, r0
 8004764:	613b      	str	r3, [r7, #16]
 8004766:	e015      	b.n	8004794 <HAL_RCC_GetSysClockFreq+0xec>
 8004768:	4b0d      	ldr	r3, [pc, #52]	; (80047a0 <HAL_RCC_GetSysClockFreq+0xf8>)
 800476a:	689b      	ldr	r3, [r3, #8]
 800476c:	2238      	movs	r2, #56	; 0x38
 800476e:	4013      	ands	r3, r2
 8004770:	2b20      	cmp	r3, #32
 8004772:	d103      	bne.n	800477c <HAL_RCC_GetSysClockFreq+0xd4>
 8004774:	2380      	movs	r3, #128	; 0x80
 8004776:	021b      	lsls	r3, r3, #8
 8004778:	613b      	str	r3, [r7, #16]
 800477a:	e00b      	b.n	8004794 <HAL_RCC_GetSysClockFreq+0xec>
 800477c:	4b08      	ldr	r3, [pc, #32]	; (80047a0 <HAL_RCC_GetSysClockFreq+0xf8>)
 800477e:	689b      	ldr	r3, [r3, #8]
 8004780:	2238      	movs	r2, #56	; 0x38
 8004782:	4013      	ands	r3, r2
 8004784:	2b18      	cmp	r3, #24
 8004786:	d103      	bne.n	8004790 <HAL_RCC_GetSysClockFreq+0xe8>
 8004788:	23fa      	movs	r3, #250	; 0xfa
 800478a:	01db      	lsls	r3, r3, #7
 800478c:	613b      	str	r3, [r7, #16]
 800478e:	e001      	b.n	8004794 <HAL_RCC_GetSysClockFreq+0xec>
 8004790:	2300      	movs	r3, #0
 8004792:	613b      	str	r3, [r7, #16]
 8004794:	693b      	ldr	r3, [r7, #16]
 8004796:	0018      	movs	r0, r3
 8004798:	46bd      	mov	sp, r7
 800479a:	b006      	add	sp, #24
 800479c:	bd80      	pop	{r7, pc}
 800479e:	46c0      	nop			; (mov r8, r8)
 80047a0:	40021000 	.word	0x40021000
 80047a4:	00f42400 	.word	0x00f42400
 80047a8:	007a1200 	.word	0x007a1200

080047ac <HAL_RCC_GetHCLKFreq>:
 80047ac:	b580      	push	{r7, lr}
 80047ae:	af00      	add	r7, sp, #0
 80047b0:	4b02      	ldr	r3, [pc, #8]	; (80047bc <HAL_RCC_GetHCLKFreq+0x10>)
 80047b2:	681b      	ldr	r3, [r3, #0]
 80047b4:	0018      	movs	r0, r3
 80047b6:	46bd      	mov	sp, r7
 80047b8:	bd80      	pop	{r7, pc}
 80047ba:	46c0      	nop			; (mov r8, r8)
 80047bc:	20000000 	.word	0x20000000

080047c0 <HAL_RCC_GetPCLK1Freq>:
 80047c0:	b5b0      	push	{r4, r5, r7, lr}
 80047c2:	af00      	add	r7, sp, #0
 80047c4:	f7ff fff2 	bl	80047ac <HAL_RCC_GetHCLKFreq>
 80047c8:	0004      	movs	r4, r0
 80047ca:	f7ff fb49 	bl	8003e60 <LL_RCC_GetAPB1Prescaler>
 80047ce:	0003      	movs	r3, r0
 80047d0:	0b1a      	lsrs	r2, r3, #12
 80047d2:	4b05      	ldr	r3, [pc, #20]	; (80047e8 <HAL_RCC_GetPCLK1Freq+0x28>)
 80047d4:	0092      	lsls	r2, r2, #2
 80047d6:	58d3      	ldr	r3, [r2, r3]
 80047d8:	221f      	movs	r2, #31
 80047da:	4013      	ands	r3, r2
 80047dc:	40dc      	lsrs	r4, r3
 80047de:	0023      	movs	r3, r4
 80047e0:	0018      	movs	r0, r3
 80047e2:	46bd      	mov	sp, r7
 80047e4:	bdb0      	pop	{r4, r5, r7, pc}
 80047e6:	46c0      	nop			; (mov r8, r8)
 80047e8:	08007354 	.word	0x08007354

080047ec <HAL_RCCEx_PeriphCLKConfig>:
 80047ec:	b580      	push	{r7, lr}
 80047ee:	b086      	sub	sp, #24
 80047f0:	af00      	add	r7, sp, #0
 80047f2:	6078      	str	r0, [r7, #4]
 80047f4:	2313      	movs	r3, #19
 80047f6:	18fb      	adds	r3, r7, r3
 80047f8:	2200      	movs	r2, #0
 80047fa:	701a      	strb	r2, [r3, #0]
 80047fc:	2312      	movs	r3, #18
 80047fe:	18fb      	adds	r3, r7, r3
 8004800:	2200      	movs	r2, #0
 8004802:	701a      	strb	r2, [r3, #0]
 8004804:	687b      	ldr	r3, [r7, #4]
 8004806:	681a      	ldr	r2, [r3, #0]
 8004808:	2380      	movs	r3, #128	; 0x80
 800480a:	029b      	lsls	r3, r3, #10
 800480c:	4013      	ands	r3, r2
 800480e:	d100      	bne.n	8004812 <HAL_RCCEx_PeriphCLKConfig+0x26>
 8004810:	e0a3      	b.n	800495a <HAL_RCCEx_PeriphCLKConfig+0x16e>
 8004812:	2011      	movs	r0, #17
 8004814:	183b      	adds	r3, r7, r0
 8004816:	2200      	movs	r2, #0
 8004818:	701a      	strb	r2, [r3, #0]
 800481a:	4b7f      	ldr	r3, [pc, #508]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 800481c:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800481e:	2380      	movs	r3, #128	; 0x80
 8004820:	055b      	lsls	r3, r3, #21
 8004822:	4013      	ands	r3, r2
 8004824:	d110      	bne.n	8004848 <HAL_RCCEx_PeriphCLKConfig+0x5c>
 8004826:	4b7c      	ldr	r3, [pc, #496]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 8004828:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800482a:	4b7b      	ldr	r3, [pc, #492]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 800482c:	2180      	movs	r1, #128	; 0x80
 800482e:	0549      	lsls	r1, r1, #21
 8004830:	430a      	orrs	r2, r1
 8004832:	63da      	str	r2, [r3, #60]	; 0x3c
 8004834:	4b78      	ldr	r3, [pc, #480]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 8004836:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8004838:	2380      	movs	r3, #128	; 0x80
 800483a:	055b      	lsls	r3, r3, #21
 800483c:	4013      	ands	r3, r2
 800483e:	60bb      	str	r3, [r7, #8]
 8004840:	68bb      	ldr	r3, [r7, #8]
 8004842:	183b      	adds	r3, r7, r0
 8004844:	2201      	movs	r2, #1
 8004846:	701a      	strb	r2, [r3, #0]
 8004848:	4b74      	ldr	r3, [pc, #464]	; (8004a1c <HAL_RCCEx_PeriphCLKConfig+0x230>)
 800484a:	681a      	ldr	r2, [r3, #0]
 800484c:	4b73      	ldr	r3, [pc, #460]	; (8004a1c <HAL_RCCEx_PeriphCLKConfig+0x230>)
 800484e:	2180      	movs	r1, #128	; 0x80
 8004850:	0049      	lsls	r1, r1, #1
 8004852:	430a      	orrs	r2, r1
 8004854:	601a      	str	r2, [r3, #0]
 8004856:	f7fd fc77 	bl	8002148 <HAL_GetTick>
 800485a:	0003      	movs	r3, r0
 800485c:	60fb      	str	r3, [r7, #12]
 800485e:	e00b      	b.n	8004878 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 8004860:	f7fd fc72 	bl	8002148 <HAL_GetTick>
 8004864:	0002      	movs	r2, r0
 8004866:	68fb      	ldr	r3, [r7, #12]
 8004868:	1ad3      	subs	r3, r2, r3
 800486a:	2b02      	cmp	r3, #2
 800486c:	d904      	bls.n	8004878 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 800486e:	2313      	movs	r3, #19
 8004870:	18fb      	adds	r3, r7, r3
 8004872:	2203      	movs	r2, #3
 8004874:	701a      	strb	r2, [r3, #0]
 8004876:	e005      	b.n	8004884 <HAL_RCCEx_PeriphCLKConfig+0x98>
 8004878:	4b68      	ldr	r3, [pc, #416]	; (8004a1c <HAL_RCCEx_PeriphCLKConfig+0x230>)
 800487a:	681a      	ldr	r2, [r3, #0]
 800487c:	2380      	movs	r3, #128	; 0x80
 800487e:	005b      	lsls	r3, r3, #1
 8004880:	4013      	ands	r3, r2
 8004882:	d0ed      	beq.n	8004860 <HAL_RCCEx_PeriphCLKConfig+0x74>
 8004884:	2313      	movs	r3, #19
 8004886:	18fb      	adds	r3, r7, r3
 8004888:	781b      	ldrb	r3, [r3, #0]
 800488a:	2b00      	cmp	r3, #0
 800488c:	d154      	bne.n	8004938 <HAL_RCCEx_PeriphCLKConfig+0x14c>
 800488e:	4b62      	ldr	r3, [pc, #392]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 8004890:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8004892:	23c0      	movs	r3, #192	; 0xc0
 8004894:	009b      	lsls	r3, r3, #2
 8004896:	4013      	ands	r3, r2
 8004898:	617b      	str	r3, [r7, #20]
 800489a:	697b      	ldr	r3, [r7, #20]
 800489c:	2b00      	cmp	r3, #0
 800489e:	d019      	beq.n	80048d4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 80048a0:	687b      	ldr	r3, [r7, #4]
 80048a2:	695b      	ldr	r3, [r3, #20]
 80048a4:	697a      	ldr	r2, [r7, #20]
 80048a6:	429a      	cmp	r2, r3
 80048a8:	d014      	beq.n	80048d4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 80048aa:	4b5b      	ldr	r3, [pc, #364]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 80048ac:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80048ae:	4a5c      	ldr	r2, [pc, #368]	; (8004a20 <HAL_RCCEx_PeriphCLKConfig+0x234>)
 80048b0:	4013      	ands	r3, r2
 80048b2:	617b      	str	r3, [r7, #20]
 80048b4:	4b58      	ldr	r3, [pc, #352]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 80048b6:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 80048b8:	4b57      	ldr	r3, [pc, #348]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 80048ba:	2180      	movs	r1, #128	; 0x80
 80048bc:	0249      	lsls	r1, r1, #9
 80048be:	430a      	orrs	r2, r1
 80048c0:	65da      	str	r2, [r3, #92]	; 0x5c
 80048c2:	4b55      	ldr	r3, [pc, #340]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 80048c4:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 80048c6:	4b54      	ldr	r3, [pc, #336]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 80048c8:	4956      	ldr	r1, [pc, #344]	; (8004a24 <HAL_RCCEx_PeriphCLKConfig+0x238>)
 80048ca:	400a      	ands	r2, r1
 80048cc:	65da      	str	r2, [r3, #92]	; 0x5c
 80048ce:	4b52      	ldr	r3, [pc, #328]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 80048d0:	697a      	ldr	r2, [r7, #20]
 80048d2:	65da      	str	r2, [r3, #92]	; 0x5c
 80048d4:	697b      	ldr	r3, [r7, #20]
 80048d6:	2201      	movs	r2, #1
 80048d8:	4013      	ands	r3, r2
 80048da:	d016      	beq.n	800490a <HAL_RCCEx_PeriphCLKConfig+0x11e>
 80048dc:	f7fd fc34 	bl	8002148 <HAL_GetTick>
 80048e0:	0003      	movs	r3, r0
 80048e2:	60fb      	str	r3, [r7, #12]
 80048e4:	e00c      	b.n	8004900 <HAL_RCCEx_PeriphCLKConfig+0x114>
 80048e6:	f7fd fc2f 	bl	8002148 <HAL_GetTick>
 80048ea:	0002      	movs	r2, r0
 80048ec:	68fb      	ldr	r3, [r7, #12]
 80048ee:	1ad3      	subs	r3, r2, r3
 80048f0:	4a4d      	ldr	r2, [pc, #308]	; (8004a28 <HAL_RCCEx_PeriphCLKConfig+0x23c>)
 80048f2:	4293      	cmp	r3, r2
 80048f4:	d904      	bls.n	8004900 <HAL_RCCEx_PeriphCLKConfig+0x114>
 80048f6:	2313      	movs	r3, #19
 80048f8:	18fb      	adds	r3, r7, r3
 80048fa:	2203      	movs	r2, #3
 80048fc:	701a      	strb	r2, [r3, #0]
 80048fe:	e004      	b.n	800490a <HAL_RCCEx_PeriphCLKConfig+0x11e>
 8004900:	4b45      	ldr	r3, [pc, #276]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 8004902:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004904:	2202      	movs	r2, #2
 8004906:	4013      	ands	r3, r2
 8004908:	d0ed      	beq.n	80048e6 <HAL_RCCEx_PeriphCLKConfig+0xfa>
 800490a:	2313      	movs	r3, #19
 800490c:	18fb      	adds	r3, r7, r3
 800490e:	781b      	ldrb	r3, [r3, #0]
 8004910:	2b00      	cmp	r3, #0
 8004912:	d10a      	bne.n	800492a <HAL_RCCEx_PeriphCLKConfig+0x13e>
 8004914:	4b40      	ldr	r3, [pc, #256]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 8004916:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004918:	4a41      	ldr	r2, [pc, #260]	; (8004a20 <HAL_RCCEx_PeriphCLKConfig+0x234>)
 800491a:	4013      	ands	r3, r2
 800491c:	0019      	movs	r1, r3
 800491e:	687b      	ldr	r3, [r7, #4]
 8004920:	695a      	ldr	r2, [r3, #20]
 8004922:	4b3d      	ldr	r3, [pc, #244]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 8004924:	430a      	orrs	r2, r1
 8004926:	65da      	str	r2, [r3, #92]	; 0x5c
 8004928:	e00c      	b.n	8004944 <HAL_RCCEx_PeriphCLKConfig+0x158>
 800492a:	2312      	movs	r3, #18
 800492c:	18fb      	adds	r3, r7, r3
 800492e:	2213      	movs	r2, #19
 8004930:	18ba      	adds	r2, r7, r2
 8004932:	7812      	ldrb	r2, [r2, #0]
 8004934:	701a      	strb	r2, [r3, #0]
 8004936:	e005      	b.n	8004944 <HAL_RCCEx_PeriphCLKConfig+0x158>
 8004938:	2312      	movs	r3, #18
 800493a:	18fb      	adds	r3, r7, r3
 800493c:	2213      	movs	r2, #19
 800493e:	18ba      	adds	r2, r7, r2
 8004940:	7812      	ldrb	r2, [r2, #0]
 8004942:	701a      	strb	r2, [r3, #0]
 8004944:	2311      	movs	r3, #17
 8004946:	18fb      	adds	r3, r7, r3
 8004948:	781b      	ldrb	r3, [r3, #0]
 800494a:	2b01      	cmp	r3, #1
 800494c:	d105      	bne.n	800495a <HAL_RCCEx_PeriphCLKConfig+0x16e>
 800494e:	4b32      	ldr	r3, [pc, #200]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 8004950:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8004952:	4b31      	ldr	r3, [pc, #196]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 8004954:	4935      	ldr	r1, [pc, #212]	; (8004a2c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004956:	400a      	ands	r2, r1
 8004958:	63da      	str	r2, [r3, #60]	; 0x3c
 800495a:	687b      	ldr	r3, [r7, #4]
 800495c:	681b      	ldr	r3, [r3, #0]
 800495e:	2201      	movs	r2, #1
 8004960:	4013      	ands	r3, r2
 8004962:	d009      	beq.n	8004978 <HAL_RCCEx_PeriphCLKConfig+0x18c>
 8004964:	4b2c      	ldr	r3, [pc, #176]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 8004966:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004968:	2203      	movs	r2, #3
 800496a:	4393      	bics	r3, r2
 800496c:	0019      	movs	r1, r3
 800496e:	687b      	ldr	r3, [r7, #4]
 8004970:	685a      	ldr	r2, [r3, #4]
 8004972:	4b29      	ldr	r3, [pc, #164]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 8004974:	430a      	orrs	r2, r1
 8004976:	655a      	str	r2, [r3, #84]	; 0x54
 8004978:	687b      	ldr	r3, [r7, #4]
 800497a:	681b      	ldr	r3, [r3, #0]
 800497c:	2220      	movs	r2, #32
 800497e:	4013      	ands	r3, r2
 8004980:	d009      	beq.n	8004996 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8004982:	4b25      	ldr	r3, [pc, #148]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 8004984:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004986:	4a2a      	ldr	r2, [pc, #168]	; (8004a30 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8004988:	4013      	ands	r3, r2
 800498a:	0019      	movs	r1, r3
 800498c:	687b      	ldr	r3, [r7, #4]
 800498e:	689a      	ldr	r2, [r3, #8]
 8004990:	4b21      	ldr	r3, [pc, #132]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 8004992:	430a      	orrs	r2, r1
 8004994:	655a      	str	r2, [r3, #84]	; 0x54
 8004996:	687b      	ldr	r3, [r7, #4]
 8004998:	681a      	ldr	r2, [r3, #0]
 800499a:	2380      	movs	r3, #128	; 0x80
 800499c:	01db      	lsls	r3, r3, #7
 800499e:	4013      	ands	r3, r2
 80049a0:	d015      	beq.n	80049ce <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 80049a2:	4b1d      	ldr	r3, [pc, #116]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 80049a4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80049a6:	009b      	lsls	r3, r3, #2
 80049a8:	0899      	lsrs	r1, r3, #2
 80049aa:	687b      	ldr	r3, [r7, #4]
 80049ac:	691a      	ldr	r2, [r3, #16]
 80049ae:	4b1a      	ldr	r3, [pc, #104]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 80049b0:	430a      	orrs	r2, r1
 80049b2:	655a      	str	r2, [r3, #84]	; 0x54
 80049b4:	687b      	ldr	r3, [r7, #4]
 80049b6:	691a      	ldr	r2, [r3, #16]
 80049b8:	2380      	movs	r3, #128	; 0x80
 80049ba:	05db      	lsls	r3, r3, #23
 80049bc:	429a      	cmp	r2, r3
 80049be:	d106      	bne.n	80049ce <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 80049c0:	4b15      	ldr	r3, [pc, #84]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 80049c2:	68da      	ldr	r2, [r3, #12]
 80049c4:	4b14      	ldr	r3, [pc, #80]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 80049c6:	2180      	movs	r1, #128	; 0x80
 80049c8:	0249      	lsls	r1, r1, #9
 80049ca:	430a      	orrs	r2, r1
 80049cc:	60da      	str	r2, [r3, #12]
 80049ce:	687b      	ldr	r3, [r7, #4]
 80049d0:	681a      	ldr	r2, [r3, #0]
 80049d2:	2380      	movs	r3, #128	; 0x80
 80049d4:	011b      	lsls	r3, r3, #4
 80049d6:	4013      	ands	r3, r2
 80049d8:	d016      	beq.n	8004a08 <HAL_RCCEx_PeriphCLKConfig+0x21c>
 80049da:	4b0f      	ldr	r3, [pc, #60]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 80049dc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80049de:	4a15      	ldr	r2, [pc, #84]	; (8004a34 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80049e0:	4013      	ands	r3, r2
 80049e2:	0019      	movs	r1, r3
 80049e4:	687b      	ldr	r3, [r7, #4]
 80049e6:	68da      	ldr	r2, [r3, #12]
 80049e8:	4b0b      	ldr	r3, [pc, #44]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 80049ea:	430a      	orrs	r2, r1
 80049ec:	655a      	str	r2, [r3, #84]	; 0x54
 80049ee:	687b      	ldr	r3, [r7, #4]
 80049f0:	68da      	ldr	r2, [r3, #12]
 80049f2:	2380      	movs	r3, #128	; 0x80
 80049f4:	01db      	lsls	r3, r3, #7
 80049f6:	429a      	cmp	r2, r3
 80049f8:	d106      	bne.n	8004a08 <HAL_RCCEx_PeriphCLKConfig+0x21c>
 80049fa:	4b07      	ldr	r3, [pc, #28]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 80049fc:	68da      	ldr	r2, [r3, #12]
 80049fe:	4b06      	ldr	r3, [pc, #24]	; (8004a18 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 8004a00:	2180      	movs	r1, #128	; 0x80
 8004a02:	0249      	lsls	r1, r1, #9
 8004a04:	430a      	orrs	r2, r1
 8004a06:	60da      	str	r2, [r3, #12]
 8004a08:	2312      	movs	r3, #18
 8004a0a:	18fb      	adds	r3, r7, r3
 8004a0c:	781b      	ldrb	r3, [r3, #0]
 8004a0e:	0018      	movs	r0, r3
 8004a10:	46bd      	mov	sp, r7
 8004a12:	b006      	add	sp, #24
 8004a14:	bd80      	pop	{r7, pc}
 8004a16:	46c0      	nop			; (mov r8, r8)
 8004a18:	40021000 	.word	0x40021000
 8004a1c:	40007000 	.word	0x40007000
 8004a20:	fffffcff 	.word	0xfffffcff
 8004a24:	fffeffff 	.word	0xfffeffff
 8004a28:	00001388 	.word	0x00001388
 8004a2c:	efffffff 	.word	0xefffffff
 8004a30:	ffffcfff 	.word	0xffffcfff
 8004a34:	ffff3fff 	.word	0xffff3fff

08004a38 <HAL_UART_Init>:
 8004a38:	b580      	push	{r7, lr}
 8004a3a:	b082      	sub	sp, #8
 8004a3c:	af00      	add	r7, sp, #0
 8004a3e:	6078      	str	r0, [r7, #4]
 8004a40:	687b      	ldr	r3, [r7, #4]
 8004a42:	2b00      	cmp	r3, #0
 8004a44:	d101      	bne.n	8004a4a <HAL_UART_Init+0x12>
 8004a46:	2301      	movs	r3, #1
 8004a48:	e046      	b.n	8004ad8 <HAL_UART_Init+0xa0>
 8004a4a:	687b      	ldr	r3, [r7, #4]
 8004a4c:	2288      	movs	r2, #136	; 0x88
 8004a4e:	589b      	ldr	r3, [r3, r2]
 8004a50:	2b00      	cmp	r3, #0
 8004a52:	d107      	bne.n	8004a64 <HAL_UART_Init+0x2c>
 8004a54:	687b      	ldr	r3, [r7, #4]
 8004a56:	2284      	movs	r2, #132	; 0x84
 8004a58:	2100      	movs	r1, #0
 8004a5a:	5499      	strb	r1, [r3, r2]
 8004a5c:	687b      	ldr	r3, [r7, #4]
 8004a5e:	0018      	movs	r0, r3
 8004a60:	f7fd f942 	bl	8001ce8 <HAL_UART_MspInit>
 8004a64:	687b      	ldr	r3, [r7, #4]
 8004a66:	2288      	movs	r2, #136	; 0x88
 8004a68:	2124      	movs	r1, #36	; 0x24
 8004a6a:	5099      	str	r1, [r3, r2]
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	681b      	ldr	r3, [r3, #0]
 8004a70:	681a      	ldr	r2, [r3, #0]
 8004a72:	687b      	ldr	r3, [r7, #4]
 8004a74:	681b      	ldr	r3, [r3, #0]
 8004a76:	2101      	movs	r1, #1
 8004a78:	438a      	bics	r2, r1
 8004a7a:	601a      	str	r2, [r3, #0]
 8004a7c:	687b      	ldr	r3, [r7, #4]
 8004a7e:	0018      	movs	r0, r3
 8004a80:	f000 fc66 	bl	8005350 <UART_SetConfig>
 8004a84:	0003      	movs	r3, r0
 8004a86:	2b01      	cmp	r3, #1
 8004a88:	d101      	bne.n	8004a8e <HAL_UART_Init+0x56>
 8004a8a:	2301      	movs	r3, #1
 8004a8c:	e024      	b.n	8004ad8 <HAL_UART_Init+0xa0>
 8004a8e:	687b      	ldr	r3, [r7, #4]
 8004a90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004a92:	2b00      	cmp	r3, #0
 8004a94:	d003      	beq.n	8004a9e <HAL_UART_Init+0x66>
 8004a96:	687b      	ldr	r3, [r7, #4]
 8004a98:	0018      	movs	r0, r3
 8004a9a:	f000 fdc3 	bl	8005624 <UART_AdvFeatureConfig>
 8004a9e:	687b      	ldr	r3, [r7, #4]
 8004aa0:	681b      	ldr	r3, [r3, #0]
 8004aa2:	685a      	ldr	r2, [r3, #4]
 8004aa4:	687b      	ldr	r3, [r7, #4]
 8004aa6:	681b      	ldr	r3, [r3, #0]
 8004aa8:	490d      	ldr	r1, [pc, #52]	; (8004ae0 <HAL_UART_Init+0xa8>)
 8004aaa:	400a      	ands	r2, r1
 8004aac:	605a      	str	r2, [r3, #4]
 8004aae:	687b      	ldr	r3, [r7, #4]
 8004ab0:	681b      	ldr	r3, [r3, #0]
 8004ab2:	689a      	ldr	r2, [r3, #8]
 8004ab4:	687b      	ldr	r3, [r7, #4]
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	212a      	movs	r1, #42	; 0x2a
 8004aba:	438a      	bics	r2, r1
 8004abc:	609a      	str	r2, [r3, #8]
 8004abe:	687b      	ldr	r3, [r7, #4]
 8004ac0:	681b      	ldr	r3, [r3, #0]
 8004ac2:	681a      	ldr	r2, [r3, #0]
 8004ac4:	687b      	ldr	r3, [r7, #4]
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	2101      	movs	r1, #1
 8004aca:	430a      	orrs	r2, r1
 8004acc:	601a      	str	r2, [r3, #0]
 8004ace:	687b      	ldr	r3, [r7, #4]
 8004ad0:	0018      	movs	r0, r3
 8004ad2:	f000 fe5b 	bl	800578c <UART_CheckIdleState>
 8004ad6:	0003      	movs	r3, r0
 8004ad8:	0018      	movs	r0, r3
 8004ada:	46bd      	mov	sp, r7
 8004adc:	b002      	add	sp, #8
 8004ade:	bd80      	pop	{r7, pc}
 8004ae0:	ffffb7ff 	.word	0xffffb7ff

08004ae4 <HAL_UART_Transmit>:
 8004ae4:	b580      	push	{r7, lr}
 8004ae6:	b08a      	sub	sp, #40	; 0x28
 8004ae8:	af02      	add	r7, sp, #8
 8004aea:	60f8      	str	r0, [r7, #12]
 8004aec:	60b9      	str	r1, [r7, #8]
 8004aee:	603b      	str	r3, [r7, #0]
 8004af0:	1dbb      	adds	r3, r7, #6
 8004af2:	801a      	strh	r2, [r3, #0]
 8004af4:	68fb      	ldr	r3, [r7, #12]
 8004af6:	2288      	movs	r2, #136	; 0x88
 8004af8:	589b      	ldr	r3, [r3, r2]
 8004afa:	2b20      	cmp	r3, #32
 8004afc:	d000      	beq.n	8004b00 <HAL_UART_Transmit+0x1c>
 8004afe:	e088      	b.n	8004c12 <HAL_UART_Transmit+0x12e>
 8004b00:	68bb      	ldr	r3, [r7, #8]
 8004b02:	2b00      	cmp	r3, #0
 8004b04:	d003      	beq.n	8004b0e <HAL_UART_Transmit+0x2a>
 8004b06:	1dbb      	adds	r3, r7, #6
 8004b08:	881b      	ldrh	r3, [r3, #0]
 8004b0a:	2b00      	cmp	r3, #0
 8004b0c:	d101      	bne.n	8004b12 <HAL_UART_Transmit+0x2e>
 8004b0e:	2301      	movs	r3, #1
 8004b10:	e080      	b.n	8004c14 <HAL_UART_Transmit+0x130>
 8004b12:	68fb      	ldr	r3, [r7, #12]
 8004b14:	689a      	ldr	r2, [r3, #8]
 8004b16:	2380      	movs	r3, #128	; 0x80
 8004b18:	015b      	lsls	r3, r3, #5
 8004b1a:	429a      	cmp	r2, r3
 8004b1c:	d109      	bne.n	8004b32 <HAL_UART_Transmit+0x4e>
 8004b1e:	68fb      	ldr	r3, [r7, #12]
 8004b20:	691b      	ldr	r3, [r3, #16]
 8004b22:	2b00      	cmp	r3, #0
 8004b24:	d105      	bne.n	8004b32 <HAL_UART_Transmit+0x4e>
 8004b26:	68bb      	ldr	r3, [r7, #8]
 8004b28:	2201      	movs	r2, #1
 8004b2a:	4013      	ands	r3, r2
 8004b2c:	d001      	beq.n	8004b32 <HAL_UART_Transmit+0x4e>
 8004b2e:	2301      	movs	r3, #1
 8004b30:	e070      	b.n	8004c14 <HAL_UART_Transmit+0x130>
 8004b32:	68fb      	ldr	r3, [r7, #12]
 8004b34:	2290      	movs	r2, #144	; 0x90
 8004b36:	2100      	movs	r1, #0
 8004b38:	5099      	str	r1, [r3, r2]
 8004b3a:	68fb      	ldr	r3, [r7, #12]
 8004b3c:	2288      	movs	r2, #136	; 0x88
 8004b3e:	2121      	movs	r1, #33	; 0x21
 8004b40:	5099      	str	r1, [r3, r2]
 8004b42:	f7fd fb01 	bl	8002148 <HAL_GetTick>
 8004b46:	0003      	movs	r3, r0
 8004b48:	617b      	str	r3, [r7, #20]
 8004b4a:	68fb      	ldr	r3, [r7, #12]
 8004b4c:	1dba      	adds	r2, r7, #6
 8004b4e:	2154      	movs	r1, #84	; 0x54
 8004b50:	8812      	ldrh	r2, [r2, #0]
 8004b52:	525a      	strh	r2, [r3, r1]
 8004b54:	68fb      	ldr	r3, [r7, #12]
 8004b56:	1dba      	adds	r2, r7, #6
 8004b58:	2156      	movs	r1, #86	; 0x56
 8004b5a:	8812      	ldrh	r2, [r2, #0]
 8004b5c:	525a      	strh	r2, [r3, r1]
 8004b5e:	68fb      	ldr	r3, [r7, #12]
 8004b60:	689a      	ldr	r2, [r3, #8]
 8004b62:	2380      	movs	r3, #128	; 0x80
 8004b64:	015b      	lsls	r3, r3, #5
 8004b66:	429a      	cmp	r2, r3
 8004b68:	d108      	bne.n	8004b7c <HAL_UART_Transmit+0x98>
 8004b6a:	68fb      	ldr	r3, [r7, #12]
 8004b6c:	691b      	ldr	r3, [r3, #16]
 8004b6e:	2b00      	cmp	r3, #0
 8004b70:	d104      	bne.n	8004b7c <HAL_UART_Transmit+0x98>
 8004b72:	2300      	movs	r3, #0
 8004b74:	61fb      	str	r3, [r7, #28]
 8004b76:	68bb      	ldr	r3, [r7, #8]
 8004b78:	61bb      	str	r3, [r7, #24]
 8004b7a:	e003      	b.n	8004b84 <HAL_UART_Transmit+0xa0>
 8004b7c:	68bb      	ldr	r3, [r7, #8]
 8004b7e:	61fb      	str	r3, [r7, #28]
 8004b80:	2300      	movs	r3, #0
 8004b82:	61bb      	str	r3, [r7, #24]
 8004b84:	e02c      	b.n	8004be0 <HAL_UART_Transmit+0xfc>
 8004b86:	697a      	ldr	r2, [r7, #20]
 8004b88:	68f8      	ldr	r0, [r7, #12]
 8004b8a:	683b      	ldr	r3, [r7, #0]
 8004b8c:	9300      	str	r3, [sp, #0]
 8004b8e:	0013      	movs	r3, r2
 8004b90:	2200      	movs	r2, #0
 8004b92:	2180      	movs	r1, #128	; 0x80
 8004b94:	f000 fe48 	bl	8005828 <UART_WaitOnFlagUntilTimeout>
 8004b98:	1e03      	subs	r3, r0, #0
 8004b9a:	d001      	beq.n	8004ba0 <HAL_UART_Transmit+0xbc>
 8004b9c:	2303      	movs	r3, #3
 8004b9e:	e039      	b.n	8004c14 <HAL_UART_Transmit+0x130>
 8004ba0:	69fb      	ldr	r3, [r7, #28]
 8004ba2:	2b00      	cmp	r3, #0
 8004ba4:	d10b      	bne.n	8004bbe <HAL_UART_Transmit+0xda>
 8004ba6:	69bb      	ldr	r3, [r7, #24]
 8004ba8:	881b      	ldrh	r3, [r3, #0]
 8004baa:	001a      	movs	r2, r3
 8004bac:	68fb      	ldr	r3, [r7, #12]
 8004bae:	681b      	ldr	r3, [r3, #0]
 8004bb0:	05d2      	lsls	r2, r2, #23
 8004bb2:	0dd2      	lsrs	r2, r2, #23
 8004bb4:	629a      	str	r2, [r3, #40]	; 0x28
 8004bb6:	69bb      	ldr	r3, [r7, #24]
 8004bb8:	3302      	adds	r3, #2
 8004bba:	61bb      	str	r3, [r7, #24]
 8004bbc:	e007      	b.n	8004bce <HAL_UART_Transmit+0xea>
 8004bbe:	69fb      	ldr	r3, [r7, #28]
 8004bc0:	781a      	ldrb	r2, [r3, #0]
 8004bc2:	68fb      	ldr	r3, [r7, #12]
 8004bc4:	681b      	ldr	r3, [r3, #0]
 8004bc6:	629a      	str	r2, [r3, #40]	; 0x28
 8004bc8:	69fb      	ldr	r3, [r7, #28]
 8004bca:	3301      	adds	r3, #1
 8004bcc:	61fb      	str	r3, [r7, #28]
 8004bce:	68fb      	ldr	r3, [r7, #12]
 8004bd0:	2256      	movs	r2, #86	; 0x56
 8004bd2:	5a9b      	ldrh	r3, [r3, r2]
 8004bd4:	b29b      	uxth	r3, r3
 8004bd6:	3b01      	subs	r3, #1
 8004bd8:	b299      	uxth	r1, r3
 8004bda:	68fb      	ldr	r3, [r7, #12]
 8004bdc:	2256      	movs	r2, #86	; 0x56
 8004bde:	5299      	strh	r1, [r3, r2]
 8004be0:	68fb      	ldr	r3, [r7, #12]
 8004be2:	2256      	movs	r2, #86	; 0x56
 8004be4:	5a9b      	ldrh	r3, [r3, r2]
 8004be6:	b29b      	uxth	r3, r3
 8004be8:	2b00      	cmp	r3, #0
 8004bea:	d1cc      	bne.n	8004b86 <HAL_UART_Transmit+0xa2>
 8004bec:	697a      	ldr	r2, [r7, #20]
 8004bee:	68f8      	ldr	r0, [r7, #12]
 8004bf0:	683b      	ldr	r3, [r7, #0]
 8004bf2:	9300      	str	r3, [sp, #0]
 8004bf4:	0013      	movs	r3, r2
 8004bf6:	2200      	movs	r2, #0
 8004bf8:	2140      	movs	r1, #64	; 0x40
 8004bfa:	f000 fe15 	bl	8005828 <UART_WaitOnFlagUntilTimeout>
 8004bfe:	1e03      	subs	r3, r0, #0
 8004c00:	d001      	beq.n	8004c06 <HAL_UART_Transmit+0x122>
 8004c02:	2303      	movs	r3, #3
 8004c04:	e006      	b.n	8004c14 <HAL_UART_Transmit+0x130>
 8004c06:	68fb      	ldr	r3, [r7, #12]
 8004c08:	2288      	movs	r2, #136	; 0x88
 8004c0a:	2120      	movs	r1, #32
 8004c0c:	5099      	str	r1, [r3, r2]
 8004c0e:	2300      	movs	r3, #0
 8004c10:	e000      	b.n	8004c14 <HAL_UART_Transmit+0x130>
 8004c12:	2302      	movs	r3, #2
 8004c14:	0018      	movs	r0, r3
 8004c16:	46bd      	mov	sp, r7
 8004c18:	b008      	add	sp, #32
 8004c1a:	bd80      	pop	{r7, pc}

08004c1c <HAL_UART_Receive_IT>:
 8004c1c:	b580      	push	{r7, lr}
 8004c1e:	b088      	sub	sp, #32
 8004c20:	af00      	add	r7, sp, #0
 8004c22:	60f8      	str	r0, [r7, #12]
 8004c24:	60b9      	str	r1, [r7, #8]
 8004c26:	1dbb      	adds	r3, r7, #6
 8004c28:	801a      	strh	r2, [r3, #0]
 8004c2a:	68fb      	ldr	r3, [r7, #12]
 8004c2c:	228c      	movs	r2, #140	; 0x8c
 8004c2e:	589b      	ldr	r3, [r3, r2]
 8004c30:	2b20      	cmp	r3, #32
 8004c32:	d145      	bne.n	8004cc0 <HAL_UART_Receive_IT+0xa4>
 8004c34:	68bb      	ldr	r3, [r7, #8]
 8004c36:	2b00      	cmp	r3, #0
 8004c38:	d003      	beq.n	8004c42 <HAL_UART_Receive_IT+0x26>
 8004c3a:	1dbb      	adds	r3, r7, #6
 8004c3c:	881b      	ldrh	r3, [r3, #0]
 8004c3e:	2b00      	cmp	r3, #0
 8004c40:	d101      	bne.n	8004c46 <HAL_UART_Receive_IT+0x2a>
 8004c42:	2301      	movs	r3, #1
 8004c44:	e03d      	b.n	8004cc2 <HAL_UART_Receive_IT+0xa6>
 8004c46:	68fb      	ldr	r3, [r7, #12]
 8004c48:	689a      	ldr	r2, [r3, #8]
 8004c4a:	2380      	movs	r3, #128	; 0x80
 8004c4c:	015b      	lsls	r3, r3, #5
 8004c4e:	429a      	cmp	r2, r3
 8004c50:	d109      	bne.n	8004c66 <HAL_UART_Receive_IT+0x4a>
 8004c52:	68fb      	ldr	r3, [r7, #12]
 8004c54:	691b      	ldr	r3, [r3, #16]
 8004c56:	2b00      	cmp	r3, #0
 8004c58:	d105      	bne.n	8004c66 <HAL_UART_Receive_IT+0x4a>
 8004c5a:	68bb      	ldr	r3, [r7, #8]
 8004c5c:	2201      	movs	r2, #1
 8004c5e:	4013      	ands	r3, r2
 8004c60:	d001      	beq.n	8004c66 <HAL_UART_Receive_IT+0x4a>
 8004c62:	2301      	movs	r3, #1
 8004c64:	e02d      	b.n	8004cc2 <HAL_UART_Receive_IT+0xa6>
 8004c66:	68fb      	ldr	r3, [r7, #12]
 8004c68:	2200      	movs	r2, #0
 8004c6a:	66da      	str	r2, [r3, #108]	; 0x6c
 8004c6c:	68fb      	ldr	r3, [r7, #12]
 8004c6e:	681b      	ldr	r3, [r3, #0]
 8004c70:	685a      	ldr	r2, [r3, #4]
 8004c72:	2380      	movs	r3, #128	; 0x80
 8004c74:	041b      	lsls	r3, r3, #16
 8004c76:	4013      	ands	r3, r2
 8004c78:	d019      	beq.n	8004cae <HAL_UART_Receive_IT+0x92>
 8004c7a:	f3ef 8310 	mrs	r3, PRIMASK
 8004c7e:	613b      	str	r3, [r7, #16]
 8004c80:	693b      	ldr	r3, [r7, #16]
 8004c82:	61fb      	str	r3, [r7, #28]
 8004c84:	2301      	movs	r3, #1
 8004c86:	617b      	str	r3, [r7, #20]
 8004c88:	697b      	ldr	r3, [r7, #20]
 8004c8a:	f383 8810 	msr	PRIMASK, r3
 8004c8e:	46c0      	nop			; (mov r8, r8)
 8004c90:	68fb      	ldr	r3, [r7, #12]
 8004c92:	681b      	ldr	r3, [r3, #0]
 8004c94:	681a      	ldr	r2, [r3, #0]
 8004c96:	68fb      	ldr	r3, [r7, #12]
 8004c98:	681b      	ldr	r3, [r3, #0]
 8004c9a:	2180      	movs	r1, #128	; 0x80
 8004c9c:	04c9      	lsls	r1, r1, #19
 8004c9e:	430a      	orrs	r2, r1
 8004ca0:	601a      	str	r2, [r3, #0]
 8004ca2:	69fb      	ldr	r3, [r7, #28]
 8004ca4:	61bb      	str	r3, [r7, #24]
 8004ca6:	69bb      	ldr	r3, [r7, #24]
 8004ca8:	f383 8810 	msr	PRIMASK, r3
 8004cac:	46c0      	nop			; (mov r8, r8)
 8004cae:	1dbb      	adds	r3, r7, #6
 8004cb0:	881a      	ldrh	r2, [r3, #0]
 8004cb2:	68b9      	ldr	r1, [r7, #8]
 8004cb4:	68fb      	ldr	r3, [r7, #12]
 8004cb6:	0018      	movs	r0, r3
 8004cb8:	f000 fe7e 	bl	80059b8 <UART_Start_Receive_IT>
 8004cbc:	0003      	movs	r3, r0
 8004cbe:	e000      	b.n	8004cc2 <HAL_UART_Receive_IT+0xa6>
 8004cc0:	2302      	movs	r3, #2
 8004cc2:	0018      	movs	r0, r3
 8004cc4:	46bd      	mov	sp, r7
 8004cc6:	b008      	add	sp, #32
 8004cc8:	bd80      	pop	{r7, pc}
	...

08004ccc <HAL_UART_IRQHandler>:
 8004ccc:	b5b0      	push	{r4, r5, r7, lr}
 8004cce:	b0aa      	sub	sp, #168	; 0xa8
 8004cd0:	af00      	add	r7, sp, #0
 8004cd2:	6078      	str	r0, [r7, #4]
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	681b      	ldr	r3, [r3, #0]
 8004cd8:	69db      	ldr	r3, [r3, #28]
 8004cda:	22a4      	movs	r2, #164	; 0xa4
 8004cdc:	18b9      	adds	r1, r7, r2
 8004cde:	600b      	str	r3, [r1, #0]
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	681b      	ldr	r3, [r3, #0]
 8004ce4:	681b      	ldr	r3, [r3, #0]
 8004ce6:	20a0      	movs	r0, #160	; 0xa0
 8004ce8:	1839      	adds	r1, r7, r0
 8004cea:	600b      	str	r3, [r1, #0]
 8004cec:	687b      	ldr	r3, [r7, #4]
 8004cee:	681b      	ldr	r3, [r3, #0]
 8004cf0:	689b      	ldr	r3, [r3, #8]
 8004cf2:	249c      	movs	r4, #156	; 0x9c
 8004cf4:	1939      	adds	r1, r7, r4
 8004cf6:	600b      	str	r3, [r1, #0]
 8004cf8:	0011      	movs	r1, r2
 8004cfa:	18bb      	adds	r3, r7, r2
 8004cfc:	681b      	ldr	r3, [r3, #0]
 8004cfe:	4aa2      	ldr	r2, [pc, #648]	; (8004f88 <HAL_UART_IRQHandler+0x2bc>)
 8004d00:	4013      	ands	r3, r2
 8004d02:	2298      	movs	r2, #152	; 0x98
 8004d04:	18bd      	adds	r5, r7, r2
 8004d06:	602b      	str	r3, [r5, #0]
 8004d08:	18bb      	adds	r3, r7, r2
 8004d0a:	681b      	ldr	r3, [r3, #0]
 8004d0c:	2b00      	cmp	r3, #0
 8004d0e:	d11a      	bne.n	8004d46 <HAL_UART_IRQHandler+0x7a>
 8004d10:	187b      	adds	r3, r7, r1
 8004d12:	681b      	ldr	r3, [r3, #0]
 8004d14:	2220      	movs	r2, #32
 8004d16:	4013      	ands	r3, r2
 8004d18:	d015      	beq.n	8004d46 <HAL_UART_IRQHandler+0x7a>
 8004d1a:	183b      	adds	r3, r7, r0
 8004d1c:	681b      	ldr	r3, [r3, #0]
 8004d1e:	2220      	movs	r2, #32
 8004d20:	4013      	ands	r3, r2
 8004d22:	d105      	bne.n	8004d30 <HAL_UART_IRQHandler+0x64>
 8004d24:	193b      	adds	r3, r7, r4
 8004d26:	681a      	ldr	r2, [r3, #0]
 8004d28:	2380      	movs	r3, #128	; 0x80
 8004d2a:	055b      	lsls	r3, r3, #21
 8004d2c:	4013      	ands	r3, r2
 8004d2e:	d00a      	beq.n	8004d46 <HAL_UART_IRQHandler+0x7a>
 8004d30:	687b      	ldr	r3, [r7, #4]
 8004d32:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004d34:	2b00      	cmp	r3, #0
 8004d36:	d100      	bne.n	8004d3a <HAL_UART_IRQHandler+0x6e>
 8004d38:	e2dc      	b.n	80052f4 <HAL_UART_IRQHandler+0x628>
 8004d3a:	687b      	ldr	r3, [r7, #4]
 8004d3c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004d3e:	687a      	ldr	r2, [r7, #4]
 8004d40:	0010      	movs	r0, r2
 8004d42:	4798      	blx	r3
 8004d44:	e2d6      	b.n	80052f4 <HAL_UART_IRQHandler+0x628>
 8004d46:	2398      	movs	r3, #152	; 0x98
 8004d48:	18fb      	adds	r3, r7, r3
 8004d4a:	681b      	ldr	r3, [r3, #0]
 8004d4c:	2b00      	cmp	r3, #0
 8004d4e:	d100      	bne.n	8004d52 <HAL_UART_IRQHandler+0x86>
 8004d50:	e122      	b.n	8004f98 <HAL_UART_IRQHandler+0x2cc>
 8004d52:	239c      	movs	r3, #156	; 0x9c
 8004d54:	18fb      	adds	r3, r7, r3
 8004d56:	681b      	ldr	r3, [r3, #0]
 8004d58:	4a8c      	ldr	r2, [pc, #560]	; (8004f8c <HAL_UART_IRQHandler+0x2c0>)
 8004d5a:	4013      	ands	r3, r2
 8004d5c:	d106      	bne.n	8004d6c <HAL_UART_IRQHandler+0xa0>
 8004d5e:	23a0      	movs	r3, #160	; 0xa0
 8004d60:	18fb      	adds	r3, r7, r3
 8004d62:	681b      	ldr	r3, [r3, #0]
 8004d64:	4a8a      	ldr	r2, [pc, #552]	; (8004f90 <HAL_UART_IRQHandler+0x2c4>)
 8004d66:	4013      	ands	r3, r2
 8004d68:	d100      	bne.n	8004d6c <HAL_UART_IRQHandler+0xa0>
 8004d6a:	e115      	b.n	8004f98 <HAL_UART_IRQHandler+0x2cc>
 8004d6c:	23a4      	movs	r3, #164	; 0xa4
 8004d6e:	18fb      	adds	r3, r7, r3
 8004d70:	681b      	ldr	r3, [r3, #0]
 8004d72:	2201      	movs	r2, #1
 8004d74:	4013      	ands	r3, r2
 8004d76:	d012      	beq.n	8004d9e <HAL_UART_IRQHandler+0xd2>
 8004d78:	23a0      	movs	r3, #160	; 0xa0
 8004d7a:	18fb      	adds	r3, r7, r3
 8004d7c:	681a      	ldr	r2, [r3, #0]
 8004d7e:	2380      	movs	r3, #128	; 0x80
 8004d80:	005b      	lsls	r3, r3, #1
 8004d82:	4013      	ands	r3, r2
 8004d84:	d00b      	beq.n	8004d9e <HAL_UART_IRQHandler+0xd2>
 8004d86:	687b      	ldr	r3, [r7, #4]
 8004d88:	681b      	ldr	r3, [r3, #0]
 8004d8a:	2201      	movs	r2, #1
 8004d8c:	621a      	str	r2, [r3, #32]
 8004d8e:	687b      	ldr	r3, [r7, #4]
 8004d90:	2290      	movs	r2, #144	; 0x90
 8004d92:	589b      	ldr	r3, [r3, r2]
 8004d94:	2201      	movs	r2, #1
 8004d96:	431a      	orrs	r2, r3
 8004d98:	687b      	ldr	r3, [r7, #4]
 8004d9a:	2190      	movs	r1, #144	; 0x90
 8004d9c:	505a      	str	r2, [r3, r1]
 8004d9e:	23a4      	movs	r3, #164	; 0xa4
 8004da0:	18fb      	adds	r3, r7, r3
 8004da2:	681b      	ldr	r3, [r3, #0]
 8004da4:	2202      	movs	r2, #2
 8004da6:	4013      	ands	r3, r2
 8004da8:	d011      	beq.n	8004dce <HAL_UART_IRQHandler+0x102>
 8004daa:	239c      	movs	r3, #156	; 0x9c
 8004dac:	18fb      	adds	r3, r7, r3
 8004dae:	681b      	ldr	r3, [r3, #0]
 8004db0:	2201      	movs	r2, #1
 8004db2:	4013      	ands	r3, r2
 8004db4:	d00b      	beq.n	8004dce <HAL_UART_IRQHandler+0x102>
 8004db6:	687b      	ldr	r3, [r7, #4]
 8004db8:	681b      	ldr	r3, [r3, #0]
 8004dba:	2202      	movs	r2, #2
 8004dbc:	621a      	str	r2, [r3, #32]
 8004dbe:	687b      	ldr	r3, [r7, #4]
 8004dc0:	2290      	movs	r2, #144	; 0x90
 8004dc2:	589b      	ldr	r3, [r3, r2]
 8004dc4:	2204      	movs	r2, #4
 8004dc6:	431a      	orrs	r2, r3
 8004dc8:	687b      	ldr	r3, [r7, #4]
 8004dca:	2190      	movs	r1, #144	; 0x90
 8004dcc:	505a      	str	r2, [r3, r1]
 8004dce:	23a4      	movs	r3, #164	; 0xa4
 8004dd0:	18fb      	adds	r3, r7, r3
 8004dd2:	681b      	ldr	r3, [r3, #0]
 8004dd4:	2204      	movs	r2, #4
 8004dd6:	4013      	ands	r3, r2
 8004dd8:	d011      	beq.n	8004dfe <HAL_UART_IRQHandler+0x132>
 8004dda:	239c      	movs	r3, #156	; 0x9c
 8004ddc:	18fb      	adds	r3, r7, r3
 8004dde:	681b      	ldr	r3, [r3, #0]
 8004de0:	2201      	movs	r2, #1
 8004de2:	4013      	ands	r3, r2
 8004de4:	d00b      	beq.n	8004dfe <HAL_UART_IRQHandler+0x132>
 8004de6:	687b      	ldr	r3, [r7, #4]
 8004de8:	681b      	ldr	r3, [r3, #0]
 8004dea:	2204      	movs	r2, #4
 8004dec:	621a      	str	r2, [r3, #32]
 8004dee:	687b      	ldr	r3, [r7, #4]
 8004df0:	2290      	movs	r2, #144	; 0x90
 8004df2:	589b      	ldr	r3, [r3, r2]
 8004df4:	2202      	movs	r2, #2
 8004df6:	431a      	orrs	r2, r3
 8004df8:	687b      	ldr	r3, [r7, #4]
 8004dfa:	2190      	movs	r1, #144	; 0x90
 8004dfc:	505a      	str	r2, [r3, r1]
 8004dfe:	23a4      	movs	r3, #164	; 0xa4
 8004e00:	18fb      	adds	r3, r7, r3
 8004e02:	681b      	ldr	r3, [r3, #0]
 8004e04:	2208      	movs	r2, #8
 8004e06:	4013      	ands	r3, r2
 8004e08:	d017      	beq.n	8004e3a <HAL_UART_IRQHandler+0x16e>
 8004e0a:	23a0      	movs	r3, #160	; 0xa0
 8004e0c:	18fb      	adds	r3, r7, r3
 8004e0e:	681b      	ldr	r3, [r3, #0]
 8004e10:	2220      	movs	r2, #32
 8004e12:	4013      	ands	r3, r2
 8004e14:	d105      	bne.n	8004e22 <HAL_UART_IRQHandler+0x156>
 8004e16:	239c      	movs	r3, #156	; 0x9c
 8004e18:	18fb      	adds	r3, r7, r3
 8004e1a:	681b      	ldr	r3, [r3, #0]
 8004e1c:	4a5b      	ldr	r2, [pc, #364]	; (8004f8c <HAL_UART_IRQHandler+0x2c0>)
 8004e1e:	4013      	ands	r3, r2
 8004e20:	d00b      	beq.n	8004e3a <HAL_UART_IRQHandler+0x16e>
 8004e22:	687b      	ldr	r3, [r7, #4]
 8004e24:	681b      	ldr	r3, [r3, #0]
 8004e26:	2208      	movs	r2, #8
 8004e28:	621a      	str	r2, [r3, #32]
 8004e2a:	687b      	ldr	r3, [r7, #4]
 8004e2c:	2290      	movs	r2, #144	; 0x90
 8004e2e:	589b      	ldr	r3, [r3, r2]
 8004e30:	2208      	movs	r2, #8
 8004e32:	431a      	orrs	r2, r3
 8004e34:	687b      	ldr	r3, [r7, #4]
 8004e36:	2190      	movs	r1, #144	; 0x90
 8004e38:	505a      	str	r2, [r3, r1]
 8004e3a:	23a4      	movs	r3, #164	; 0xa4
 8004e3c:	18fb      	adds	r3, r7, r3
 8004e3e:	681a      	ldr	r2, [r3, #0]
 8004e40:	2380      	movs	r3, #128	; 0x80
 8004e42:	011b      	lsls	r3, r3, #4
 8004e44:	4013      	ands	r3, r2
 8004e46:	d013      	beq.n	8004e70 <HAL_UART_IRQHandler+0x1a4>
 8004e48:	23a0      	movs	r3, #160	; 0xa0
 8004e4a:	18fb      	adds	r3, r7, r3
 8004e4c:	681a      	ldr	r2, [r3, #0]
 8004e4e:	2380      	movs	r3, #128	; 0x80
 8004e50:	04db      	lsls	r3, r3, #19
 8004e52:	4013      	ands	r3, r2
 8004e54:	d00c      	beq.n	8004e70 <HAL_UART_IRQHandler+0x1a4>
 8004e56:	687b      	ldr	r3, [r7, #4]
 8004e58:	681b      	ldr	r3, [r3, #0]
 8004e5a:	2280      	movs	r2, #128	; 0x80
 8004e5c:	0112      	lsls	r2, r2, #4
 8004e5e:	621a      	str	r2, [r3, #32]
 8004e60:	687b      	ldr	r3, [r7, #4]
 8004e62:	2290      	movs	r2, #144	; 0x90
 8004e64:	589b      	ldr	r3, [r3, r2]
 8004e66:	2220      	movs	r2, #32
 8004e68:	431a      	orrs	r2, r3
 8004e6a:	687b      	ldr	r3, [r7, #4]
 8004e6c:	2190      	movs	r1, #144	; 0x90
 8004e6e:	505a      	str	r2, [r3, r1]
 8004e70:	687b      	ldr	r3, [r7, #4]
 8004e72:	2290      	movs	r2, #144	; 0x90
 8004e74:	589b      	ldr	r3, [r3, r2]
 8004e76:	2b00      	cmp	r3, #0
 8004e78:	d100      	bne.n	8004e7c <HAL_UART_IRQHandler+0x1b0>
 8004e7a:	e23d      	b.n	80052f8 <HAL_UART_IRQHandler+0x62c>
 8004e7c:	23a4      	movs	r3, #164	; 0xa4
 8004e7e:	18fb      	adds	r3, r7, r3
 8004e80:	681b      	ldr	r3, [r3, #0]
 8004e82:	2220      	movs	r2, #32
 8004e84:	4013      	ands	r3, r2
 8004e86:	d015      	beq.n	8004eb4 <HAL_UART_IRQHandler+0x1e8>
 8004e88:	23a0      	movs	r3, #160	; 0xa0
 8004e8a:	18fb      	adds	r3, r7, r3
 8004e8c:	681b      	ldr	r3, [r3, #0]
 8004e8e:	2220      	movs	r2, #32
 8004e90:	4013      	ands	r3, r2
 8004e92:	d106      	bne.n	8004ea2 <HAL_UART_IRQHandler+0x1d6>
 8004e94:	239c      	movs	r3, #156	; 0x9c
 8004e96:	18fb      	adds	r3, r7, r3
 8004e98:	681a      	ldr	r2, [r3, #0]
 8004e9a:	2380      	movs	r3, #128	; 0x80
 8004e9c:	055b      	lsls	r3, r3, #21
 8004e9e:	4013      	ands	r3, r2
 8004ea0:	d008      	beq.n	8004eb4 <HAL_UART_IRQHandler+0x1e8>
 8004ea2:	687b      	ldr	r3, [r7, #4]
 8004ea4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004ea6:	2b00      	cmp	r3, #0
 8004ea8:	d004      	beq.n	8004eb4 <HAL_UART_IRQHandler+0x1e8>
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004eae:	687a      	ldr	r2, [r7, #4]
 8004eb0:	0010      	movs	r0, r2
 8004eb2:	4798      	blx	r3
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	2290      	movs	r2, #144	; 0x90
 8004eb8:	589b      	ldr	r3, [r3, r2]
 8004eba:	2194      	movs	r1, #148	; 0x94
 8004ebc:	187a      	adds	r2, r7, r1
 8004ebe:	6013      	str	r3, [r2, #0]
 8004ec0:	687b      	ldr	r3, [r7, #4]
 8004ec2:	681b      	ldr	r3, [r3, #0]
 8004ec4:	689b      	ldr	r3, [r3, #8]
 8004ec6:	2240      	movs	r2, #64	; 0x40
 8004ec8:	4013      	ands	r3, r2
 8004eca:	2b40      	cmp	r3, #64	; 0x40
 8004ecc:	d004      	beq.n	8004ed8 <HAL_UART_IRQHandler+0x20c>
 8004ece:	187b      	adds	r3, r7, r1
 8004ed0:	681b      	ldr	r3, [r3, #0]
 8004ed2:	2228      	movs	r2, #40	; 0x28
 8004ed4:	4013      	ands	r3, r2
 8004ed6:	d04c      	beq.n	8004f72 <HAL_UART_IRQHandler+0x2a6>
 8004ed8:	687b      	ldr	r3, [r7, #4]
 8004eda:	0018      	movs	r0, r3
 8004edc:	f000 fe90 	bl	8005c00 <UART_EndRxTransfer>
 8004ee0:	687b      	ldr	r3, [r7, #4]
 8004ee2:	681b      	ldr	r3, [r3, #0]
 8004ee4:	689b      	ldr	r3, [r3, #8]
 8004ee6:	2240      	movs	r2, #64	; 0x40
 8004ee8:	4013      	ands	r3, r2
 8004eea:	2b40      	cmp	r3, #64	; 0x40
 8004eec:	d13c      	bne.n	8004f68 <HAL_UART_IRQHandler+0x29c>
 8004eee:	f3ef 8310 	mrs	r3, PRIMASK
 8004ef2:	663b      	str	r3, [r7, #96]	; 0x60
 8004ef4:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8004ef6:	2090      	movs	r0, #144	; 0x90
 8004ef8:	183a      	adds	r2, r7, r0
 8004efa:	6013      	str	r3, [r2, #0]
 8004efc:	2301      	movs	r3, #1
 8004efe:	667b      	str	r3, [r7, #100]	; 0x64
 8004f00:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8004f02:	f383 8810 	msr	PRIMASK, r3
 8004f06:	46c0      	nop			; (mov r8, r8)
 8004f08:	687b      	ldr	r3, [r7, #4]
 8004f0a:	681b      	ldr	r3, [r3, #0]
 8004f0c:	689a      	ldr	r2, [r3, #8]
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	681b      	ldr	r3, [r3, #0]
 8004f12:	2140      	movs	r1, #64	; 0x40
 8004f14:	438a      	bics	r2, r1
 8004f16:	609a      	str	r2, [r3, #8]
 8004f18:	183b      	adds	r3, r7, r0
 8004f1a:	681b      	ldr	r3, [r3, #0]
 8004f1c:	66bb      	str	r3, [r7, #104]	; 0x68
 8004f1e:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8004f20:	f383 8810 	msr	PRIMASK, r3
 8004f24:	46c0      	nop			; (mov r8, r8)
 8004f26:	687b      	ldr	r3, [r7, #4]
 8004f28:	2280      	movs	r2, #128	; 0x80
 8004f2a:	589b      	ldr	r3, [r3, r2]
 8004f2c:	2b00      	cmp	r3, #0
 8004f2e:	d016      	beq.n	8004f5e <HAL_UART_IRQHandler+0x292>
 8004f30:	687b      	ldr	r3, [r7, #4]
 8004f32:	2280      	movs	r2, #128	; 0x80
 8004f34:	589b      	ldr	r3, [r3, r2]
 8004f36:	4a17      	ldr	r2, [pc, #92]	; (8004f94 <HAL_UART_IRQHandler+0x2c8>)
 8004f38:	639a      	str	r2, [r3, #56]	; 0x38
 8004f3a:	687b      	ldr	r3, [r7, #4]
 8004f3c:	2280      	movs	r2, #128	; 0x80
 8004f3e:	589b      	ldr	r3, [r3, r2]
 8004f40:	0018      	movs	r0, r3
 8004f42:	f7fe fbbd 	bl	80036c0 <HAL_DMA_Abort_IT>
 8004f46:	1e03      	subs	r3, r0, #0
 8004f48:	d01c      	beq.n	8004f84 <HAL_UART_IRQHandler+0x2b8>
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	2280      	movs	r2, #128	; 0x80
 8004f4e:	589b      	ldr	r3, [r3, r2]
 8004f50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f52:	687a      	ldr	r2, [r7, #4]
 8004f54:	2180      	movs	r1, #128	; 0x80
 8004f56:	5852      	ldr	r2, [r2, r1]
 8004f58:	0010      	movs	r0, r2
 8004f5a:	4798      	blx	r3
 8004f5c:	e012      	b.n	8004f84 <HAL_UART_IRQHandler+0x2b8>
 8004f5e:	687b      	ldr	r3, [r7, #4]
 8004f60:	0018      	movs	r0, r3
 8004f62:	f000 f9e1 	bl	8005328 <HAL_UART_ErrorCallback>
 8004f66:	e00d      	b.n	8004f84 <HAL_UART_IRQHandler+0x2b8>
 8004f68:	687b      	ldr	r3, [r7, #4]
 8004f6a:	0018      	movs	r0, r3
 8004f6c:	f000 f9dc 	bl	8005328 <HAL_UART_ErrorCallback>
 8004f70:	e008      	b.n	8004f84 <HAL_UART_IRQHandler+0x2b8>
 8004f72:	687b      	ldr	r3, [r7, #4]
 8004f74:	0018      	movs	r0, r3
 8004f76:	f000 f9d7 	bl	8005328 <HAL_UART_ErrorCallback>
 8004f7a:	687b      	ldr	r3, [r7, #4]
 8004f7c:	2290      	movs	r2, #144	; 0x90
 8004f7e:	2100      	movs	r1, #0
 8004f80:	5099      	str	r1, [r3, r2]
 8004f82:	e1b9      	b.n	80052f8 <HAL_UART_IRQHandler+0x62c>
 8004f84:	46c0      	nop			; (mov r8, r8)
 8004f86:	e1b7      	b.n	80052f8 <HAL_UART_IRQHandler+0x62c>
 8004f88:	0000080f 	.word	0x0000080f
 8004f8c:	10000001 	.word	0x10000001
 8004f90:	04000120 	.word	0x04000120
 8004f94:	08005ccd 	.word	0x08005ccd
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004f9c:	2b01      	cmp	r3, #1
 8004f9e:	d000      	beq.n	8004fa2 <HAL_UART_IRQHandler+0x2d6>
 8004fa0:	e13e      	b.n	8005220 <HAL_UART_IRQHandler+0x554>
 8004fa2:	23a4      	movs	r3, #164	; 0xa4
 8004fa4:	18fb      	adds	r3, r7, r3
 8004fa6:	681b      	ldr	r3, [r3, #0]
 8004fa8:	2210      	movs	r2, #16
 8004faa:	4013      	ands	r3, r2
 8004fac:	d100      	bne.n	8004fb0 <HAL_UART_IRQHandler+0x2e4>
 8004fae:	e137      	b.n	8005220 <HAL_UART_IRQHandler+0x554>
 8004fb0:	23a0      	movs	r3, #160	; 0xa0
 8004fb2:	18fb      	adds	r3, r7, r3
 8004fb4:	681b      	ldr	r3, [r3, #0]
 8004fb6:	2210      	movs	r2, #16
 8004fb8:	4013      	ands	r3, r2
 8004fba:	d100      	bne.n	8004fbe <HAL_UART_IRQHandler+0x2f2>
 8004fbc:	e130      	b.n	8005220 <HAL_UART_IRQHandler+0x554>
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	681b      	ldr	r3, [r3, #0]
 8004fc2:	2210      	movs	r2, #16
 8004fc4:	621a      	str	r2, [r3, #32]
 8004fc6:	687b      	ldr	r3, [r7, #4]
 8004fc8:	681b      	ldr	r3, [r3, #0]
 8004fca:	689b      	ldr	r3, [r3, #8]
 8004fcc:	2240      	movs	r2, #64	; 0x40
 8004fce:	4013      	ands	r3, r2
 8004fd0:	2b40      	cmp	r3, #64	; 0x40
 8004fd2:	d000      	beq.n	8004fd6 <HAL_UART_IRQHandler+0x30a>
 8004fd4:	e0a4      	b.n	8005120 <HAL_UART_IRQHandler+0x454>
 8004fd6:	687b      	ldr	r3, [r7, #4]
 8004fd8:	2280      	movs	r2, #128	; 0x80
 8004fda:	589b      	ldr	r3, [r3, r2]
 8004fdc:	681b      	ldr	r3, [r3, #0]
 8004fde:	685a      	ldr	r2, [r3, #4]
 8004fe0:	217e      	movs	r1, #126	; 0x7e
 8004fe2:	187b      	adds	r3, r7, r1
 8004fe4:	801a      	strh	r2, [r3, #0]
 8004fe6:	187b      	adds	r3, r7, r1
 8004fe8:	881b      	ldrh	r3, [r3, #0]
 8004fea:	2b00      	cmp	r3, #0
 8004fec:	d100      	bne.n	8004ff0 <HAL_UART_IRQHandler+0x324>
 8004fee:	e185      	b.n	80052fc <HAL_UART_IRQHandler+0x630>
 8004ff0:	687b      	ldr	r3, [r7, #4]
 8004ff2:	225c      	movs	r2, #92	; 0x5c
 8004ff4:	5a9b      	ldrh	r3, [r3, r2]
 8004ff6:	187a      	adds	r2, r7, r1
 8004ff8:	8812      	ldrh	r2, [r2, #0]
 8004ffa:	429a      	cmp	r2, r3
 8004ffc:	d300      	bcc.n	8005000 <HAL_UART_IRQHandler+0x334>
 8004ffe:	e17d      	b.n	80052fc <HAL_UART_IRQHandler+0x630>
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	187a      	adds	r2, r7, r1
 8005004:	215e      	movs	r1, #94	; 0x5e
 8005006:	8812      	ldrh	r2, [r2, #0]
 8005008:	525a      	strh	r2, [r3, r1]
 800500a:	687b      	ldr	r3, [r7, #4]
 800500c:	2280      	movs	r2, #128	; 0x80
 800500e:	589b      	ldr	r3, [r3, r2]
 8005010:	681b      	ldr	r3, [r3, #0]
 8005012:	681b      	ldr	r3, [r3, #0]
 8005014:	2220      	movs	r2, #32
 8005016:	4013      	ands	r3, r2
 8005018:	d170      	bne.n	80050fc <HAL_UART_IRQHandler+0x430>
 800501a:	f3ef 8310 	mrs	r3, PRIMASK
 800501e:	633b      	str	r3, [r7, #48]	; 0x30
 8005020:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005022:	67bb      	str	r3, [r7, #120]	; 0x78
 8005024:	2301      	movs	r3, #1
 8005026:	637b      	str	r3, [r7, #52]	; 0x34
 8005028:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800502a:	f383 8810 	msr	PRIMASK, r3
 800502e:	46c0      	nop			; (mov r8, r8)
 8005030:	687b      	ldr	r3, [r7, #4]
 8005032:	681b      	ldr	r3, [r3, #0]
 8005034:	681a      	ldr	r2, [r3, #0]
 8005036:	687b      	ldr	r3, [r7, #4]
 8005038:	681b      	ldr	r3, [r3, #0]
 800503a:	49b4      	ldr	r1, [pc, #720]	; (800530c <HAL_UART_IRQHandler+0x640>)
 800503c:	400a      	ands	r2, r1
 800503e:	601a      	str	r2, [r3, #0]
 8005040:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8005042:	63bb      	str	r3, [r7, #56]	; 0x38
 8005044:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005046:	f383 8810 	msr	PRIMASK, r3
 800504a:	46c0      	nop			; (mov r8, r8)
 800504c:	f3ef 8310 	mrs	r3, PRIMASK
 8005050:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005052:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8005054:	677b      	str	r3, [r7, #116]	; 0x74
 8005056:	2301      	movs	r3, #1
 8005058:	643b      	str	r3, [r7, #64]	; 0x40
 800505a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800505c:	f383 8810 	msr	PRIMASK, r3
 8005060:	46c0      	nop			; (mov r8, r8)
 8005062:	687b      	ldr	r3, [r7, #4]
 8005064:	681b      	ldr	r3, [r3, #0]
 8005066:	689a      	ldr	r2, [r3, #8]
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	681b      	ldr	r3, [r3, #0]
 800506c:	2101      	movs	r1, #1
 800506e:	438a      	bics	r2, r1
 8005070:	609a      	str	r2, [r3, #8]
 8005072:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8005074:	647b      	str	r3, [r7, #68]	; 0x44
 8005076:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8005078:	f383 8810 	msr	PRIMASK, r3
 800507c:	46c0      	nop			; (mov r8, r8)
 800507e:	f3ef 8310 	mrs	r3, PRIMASK
 8005082:	64bb      	str	r3, [r7, #72]	; 0x48
 8005084:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005086:	673b      	str	r3, [r7, #112]	; 0x70
 8005088:	2301      	movs	r3, #1
 800508a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800508c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800508e:	f383 8810 	msr	PRIMASK, r3
 8005092:	46c0      	nop			; (mov r8, r8)
 8005094:	687b      	ldr	r3, [r7, #4]
 8005096:	681b      	ldr	r3, [r3, #0]
 8005098:	689a      	ldr	r2, [r3, #8]
 800509a:	687b      	ldr	r3, [r7, #4]
 800509c:	681b      	ldr	r3, [r3, #0]
 800509e:	2140      	movs	r1, #64	; 0x40
 80050a0:	438a      	bics	r2, r1
 80050a2:	609a      	str	r2, [r3, #8]
 80050a4:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80050a6:	653b      	str	r3, [r7, #80]	; 0x50
 80050a8:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80050aa:	f383 8810 	msr	PRIMASK, r3
 80050ae:	46c0      	nop			; (mov r8, r8)
 80050b0:	687b      	ldr	r3, [r7, #4]
 80050b2:	228c      	movs	r2, #140	; 0x8c
 80050b4:	2120      	movs	r1, #32
 80050b6:	5099      	str	r1, [r3, r2]
 80050b8:	687b      	ldr	r3, [r7, #4]
 80050ba:	2200      	movs	r2, #0
 80050bc:	66da      	str	r2, [r3, #108]	; 0x6c
 80050be:	f3ef 8310 	mrs	r3, PRIMASK
 80050c2:	657b      	str	r3, [r7, #84]	; 0x54
 80050c4:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80050c6:	66fb      	str	r3, [r7, #108]	; 0x6c
 80050c8:	2301      	movs	r3, #1
 80050ca:	65bb      	str	r3, [r7, #88]	; 0x58
 80050cc:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80050ce:	f383 8810 	msr	PRIMASK, r3
 80050d2:	46c0      	nop			; (mov r8, r8)
 80050d4:	687b      	ldr	r3, [r7, #4]
 80050d6:	681b      	ldr	r3, [r3, #0]
 80050d8:	681a      	ldr	r2, [r3, #0]
 80050da:	687b      	ldr	r3, [r7, #4]
 80050dc:	681b      	ldr	r3, [r3, #0]
 80050de:	2110      	movs	r1, #16
 80050e0:	438a      	bics	r2, r1
 80050e2:	601a      	str	r2, [r3, #0]
 80050e4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80050e6:	65fb      	str	r3, [r7, #92]	; 0x5c
 80050e8:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80050ea:	f383 8810 	msr	PRIMASK, r3
 80050ee:	46c0      	nop			; (mov r8, r8)
 80050f0:	687b      	ldr	r3, [r7, #4]
 80050f2:	2280      	movs	r2, #128	; 0x80
 80050f4:	589b      	ldr	r3, [r3, r2]
 80050f6:	0018      	movs	r0, r3
 80050f8:	f7fe fa80 	bl	80035fc <HAL_DMA_Abort>
 80050fc:	687b      	ldr	r3, [r7, #4]
 80050fe:	2202      	movs	r2, #2
 8005100:	671a      	str	r2, [r3, #112]	; 0x70
 8005102:	687b      	ldr	r3, [r7, #4]
 8005104:	225c      	movs	r2, #92	; 0x5c
 8005106:	5a9a      	ldrh	r2, [r3, r2]
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	215e      	movs	r1, #94	; 0x5e
 800510c:	5a5b      	ldrh	r3, [r3, r1]
 800510e:	b29b      	uxth	r3, r3
 8005110:	1ad3      	subs	r3, r2, r3
 8005112:	b29a      	uxth	r2, r3
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	0011      	movs	r1, r2
 8005118:	0018      	movs	r0, r3
 800511a:	f000 f90d 	bl	8005338 <HAL_UARTEx_RxEventCallback>
 800511e:	e0ed      	b.n	80052fc <HAL_UART_IRQHandler+0x630>
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	225c      	movs	r2, #92	; 0x5c
 8005124:	5a99      	ldrh	r1, [r3, r2]
 8005126:	687b      	ldr	r3, [r7, #4]
 8005128:	225e      	movs	r2, #94	; 0x5e
 800512a:	5a9b      	ldrh	r3, [r3, r2]
 800512c:	b29a      	uxth	r2, r3
 800512e:	208e      	movs	r0, #142	; 0x8e
 8005130:	183b      	adds	r3, r7, r0
 8005132:	1a8a      	subs	r2, r1, r2
 8005134:	801a      	strh	r2, [r3, #0]
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	225e      	movs	r2, #94	; 0x5e
 800513a:	5a9b      	ldrh	r3, [r3, r2]
 800513c:	b29b      	uxth	r3, r3
 800513e:	2b00      	cmp	r3, #0
 8005140:	d100      	bne.n	8005144 <HAL_UART_IRQHandler+0x478>
 8005142:	e0dd      	b.n	8005300 <HAL_UART_IRQHandler+0x634>
 8005144:	183b      	adds	r3, r7, r0
 8005146:	881b      	ldrh	r3, [r3, #0]
 8005148:	2b00      	cmp	r3, #0
 800514a:	d100      	bne.n	800514e <HAL_UART_IRQHandler+0x482>
 800514c:	e0d8      	b.n	8005300 <HAL_UART_IRQHandler+0x634>
 800514e:	f3ef 8310 	mrs	r3, PRIMASK
 8005152:	60fb      	str	r3, [r7, #12]
 8005154:	68fb      	ldr	r3, [r7, #12]
 8005156:	2488      	movs	r4, #136	; 0x88
 8005158:	193a      	adds	r2, r7, r4
 800515a:	6013      	str	r3, [r2, #0]
 800515c:	2301      	movs	r3, #1
 800515e:	613b      	str	r3, [r7, #16]
 8005160:	693b      	ldr	r3, [r7, #16]
 8005162:	f383 8810 	msr	PRIMASK, r3
 8005166:	46c0      	nop			; (mov r8, r8)
 8005168:	687b      	ldr	r3, [r7, #4]
 800516a:	681b      	ldr	r3, [r3, #0]
 800516c:	681a      	ldr	r2, [r3, #0]
 800516e:	687b      	ldr	r3, [r7, #4]
 8005170:	681b      	ldr	r3, [r3, #0]
 8005172:	4967      	ldr	r1, [pc, #412]	; (8005310 <HAL_UART_IRQHandler+0x644>)
 8005174:	400a      	ands	r2, r1
 8005176:	601a      	str	r2, [r3, #0]
 8005178:	193b      	adds	r3, r7, r4
 800517a:	681b      	ldr	r3, [r3, #0]
 800517c:	617b      	str	r3, [r7, #20]
 800517e:	697b      	ldr	r3, [r7, #20]
 8005180:	f383 8810 	msr	PRIMASK, r3
 8005184:	46c0      	nop			; (mov r8, r8)
 8005186:	f3ef 8310 	mrs	r3, PRIMASK
 800518a:	61bb      	str	r3, [r7, #24]
 800518c:	69bb      	ldr	r3, [r7, #24]
 800518e:	2484      	movs	r4, #132	; 0x84
 8005190:	193a      	adds	r2, r7, r4
 8005192:	6013      	str	r3, [r2, #0]
 8005194:	2301      	movs	r3, #1
 8005196:	61fb      	str	r3, [r7, #28]
 8005198:	69fb      	ldr	r3, [r7, #28]
 800519a:	f383 8810 	msr	PRIMASK, r3
 800519e:	46c0      	nop			; (mov r8, r8)
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	681b      	ldr	r3, [r3, #0]
 80051a4:	689a      	ldr	r2, [r3, #8]
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	681b      	ldr	r3, [r3, #0]
 80051aa:	495a      	ldr	r1, [pc, #360]	; (8005314 <HAL_UART_IRQHandler+0x648>)
 80051ac:	400a      	ands	r2, r1
 80051ae:	609a      	str	r2, [r3, #8]
 80051b0:	193b      	adds	r3, r7, r4
 80051b2:	681b      	ldr	r3, [r3, #0]
 80051b4:	623b      	str	r3, [r7, #32]
 80051b6:	6a3b      	ldr	r3, [r7, #32]
 80051b8:	f383 8810 	msr	PRIMASK, r3
 80051bc:	46c0      	nop			; (mov r8, r8)
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	228c      	movs	r2, #140	; 0x8c
 80051c2:	2120      	movs	r1, #32
 80051c4:	5099      	str	r1, [r3, r2]
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	2200      	movs	r2, #0
 80051ca:	66da      	str	r2, [r3, #108]	; 0x6c
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	2200      	movs	r2, #0
 80051d0:	675a      	str	r2, [r3, #116]	; 0x74
 80051d2:	f3ef 8310 	mrs	r3, PRIMASK
 80051d6:	627b      	str	r3, [r7, #36]	; 0x24
 80051d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80051da:	2480      	movs	r4, #128	; 0x80
 80051dc:	193a      	adds	r2, r7, r4
 80051de:	6013      	str	r3, [r2, #0]
 80051e0:	2301      	movs	r3, #1
 80051e2:	62bb      	str	r3, [r7, #40]	; 0x28
 80051e4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80051e6:	f383 8810 	msr	PRIMASK, r3
 80051ea:	46c0      	nop			; (mov r8, r8)
 80051ec:	687b      	ldr	r3, [r7, #4]
 80051ee:	681b      	ldr	r3, [r3, #0]
 80051f0:	681a      	ldr	r2, [r3, #0]
 80051f2:	687b      	ldr	r3, [r7, #4]
 80051f4:	681b      	ldr	r3, [r3, #0]
 80051f6:	2110      	movs	r1, #16
 80051f8:	438a      	bics	r2, r1
 80051fa:	601a      	str	r2, [r3, #0]
 80051fc:	193b      	adds	r3, r7, r4
 80051fe:	681b      	ldr	r3, [r3, #0]
 8005200:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005202:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005204:	f383 8810 	msr	PRIMASK, r3
 8005208:	46c0      	nop			; (mov r8, r8)
 800520a:	687b      	ldr	r3, [r7, #4]
 800520c:	2202      	movs	r2, #2
 800520e:	671a      	str	r2, [r3, #112]	; 0x70
 8005210:	183b      	adds	r3, r7, r0
 8005212:	881a      	ldrh	r2, [r3, #0]
 8005214:	687b      	ldr	r3, [r7, #4]
 8005216:	0011      	movs	r1, r2
 8005218:	0018      	movs	r0, r3
 800521a:	f000 f88d 	bl	8005338 <HAL_UARTEx_RxEventCallback>
 800521e:	e06f      	b.n	8005300 <HAL_UART_IRQHandler+0x634>
 8005220:	23a4      	movs	r3, #164	; 0xa4
 8005222:	18fb      	adds	r3, r7, r3
 8005224:	681a      	ldr	r2, [r3, #0]
 8005226:	2380      	movs	r3, #128	; 0x80
 8005228:	035b      	lsls	r3, r3, #13
 800522a:	4013      	ands	r3, r2
 800522c:	d010      	beq.n	8005250 <HAL_UART_IRQHandler+0x584>
 800522e:	239c      	movs	r3, #156	; 0x9c
 8005230:	18fb      	adds	r3, r7, r3
 8005232:	681a      	ldr	r2, [r3, #0]
 8005234:	2380      	movs	r3, #128	; 0x80
 8005236:	03db      	lsls	r3, r3, #15
 8005238:	4013      	ands	r3, r2
 800523a:	d009      	beq.n	8005250 <HAL_UART_IRQHandler+0x584>
 800523c:	687b      	ldr	r3, [r7, #4]
 800523e:	681b      	ldr	r3, [r3, #0]
 8005240:	2280      	movs	r2, #128	; 0x80
 8005242:	0352      	lsls	r2, r2, #13
 8005244:	621a      	str	r2, [r3, #32]
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	0018      	movs	r0, r3
 800524a:	f001 f9e3 	bl	8006614 <HAL_UARTEx_WakeupCallback>
 800524e:	e05a      	b.n	8005306 <HAL_UART_IRQHandler+0x63a>
 8005250:	23a4      	movs	r3, #164	; 0xa4
 8005252:	18fb      	adds	r3, r7, r3
 8005254:	681b      	ldr	r3, [r3, #0]
 8005256:	2280      	movs	r2, #128	; 0x80
 8005258:	4013      	ands	r3, r2
 800525a:	d016      	beq.n	800528a <HAL_UART_IRQHandler+0x5be>
 800525c:	23a0      	movs	r3, #160	; 0xa0
 800525e:	18fb      	adds	r3, r7, r3
 8005260:	681b      	ldr	r3, [r3, #0]
 8005262:	2280      	movs	r2, #128	; 0x80
 8005264:	4013      	ands	r3, r2
 8005266:	d106      	bne.n	8005276 <HAL_UART_IRQHandler+0x5aa>
 8005268:	239c      	movs	r3, #156	; 0x9c
 800526a:	18fb      	adds	r3, r7, r3
 800526c:	681a      	ldr	r2, [r3, #0]
 800526e:	2380      	movs	r3, #128	; 0x80
 8005270:	041b      	lsls	r3, r3, #16
 8005272:	4013      	ands	r3, r2
 8005274:	d009      	beq.n	800528a <HAL_UART_IRQHandler+0x5be>
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800527a:	2b00      	cmp	r3, #0
 800527c:	d042      	beq.n	8005304 <HAL_UART_IRQHandler+0x638>
 800527e:	687b      	ldr	r3, [r7, #4]
 8005280:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8005282:	687a      	ldr	r2, [r7, #4]
 8005284:	0010      	movs	r0, r2
 8005286:	4798      	blx	r3
 8005288:	e03c      	b.n	8005304 <HAL_UART_IRQHandler+0x638>
 800528a:	23a4      	movs	r3, #164	; 0xa4
 800528c:	18fb      	adds	r3, r7, r3
 800528e:	681b      	ldr	r3, [r3, #0]
 8005290:	2240      	movs	r2, #64	; 0x40
 8005292:	4013      	ands	r3, r2
 8005294:	d00a      	beq.n	80052ac <HAL_UART_IRQHandler+0x5e0>
 8005296:	23a0      	movs	r3, #160	; 0xa0
 8005298:	18fb      	adds	r3, r7, r3
 800529a:	681b      	ldr	r3, [r3, #0]
 800529c:	2240      	movs	r2, #64	; 0x40
 800529e:	4013      	ands	r3, r2
 80052a0:	d004      	beq.n	80052ac <HAL_UART_IRQHandler+0x5e0>
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	0018      	movs	r0, r3
 80052a6:	f000 fd28 	bl	8005cfa <UART_EndTransmit_IT>
 80052aa:	e02c      	b.n	8005306 <HAL_UART_IRQHandler+0x63a>
 80052ac:	23a4      	movs	r3, #164	; 0xa4
 80052ae:	18fb      	adds	r3, r7, r3
 80052b0:	681a      	ldr	r2, [r3, #0]
 80052b2:	2380      	movs	r3, #128	; 0x80
 80052b4:	041b      	lsls	r3, r3, #16
 80052b6:	4013      	ands	r3, r2
 80052b8:	d00b      	beq.n	80052d2 <HAL_UART_IRQHandler+0x606>
 80052ba:	23a0      	movs	r3, #160	; 0xa0
 80052bc:	18fb      	adds	r3, r7, r3
 80052be:	681a      	ldr	r2, [r3, #0]
 80052c0:	2380      	movs	r3, #128	; 0x80
 80052c2:	05db      	lsls	r3, r3, #23
 80052c4:	4013      	ands	r3, r2
 80052c6:	d004      	beq.n	80052d2 <HAL_UART_IRQHandler+0x606>
 80052c8:	687b      	ldr	r3, [r7, #4]
 80052ca:	0018      	movs	r0, r3
 80052cc:	f001 f9b2 	bl	8006634 <HAL_UARTEx_TxFifoEmptyCallback>
 80052d0:	e019      	b.n	8005306 <HAL_UART_IRQHandler+0x63a>
 80052d2:	23a4      	movs	r3, #164	; 0xa4
 80052d4:	18fb      	adds	r3, r7, r3
 80052d6:	681a      	ldr	r2, [r3, #0]
 80052d8:	2380      	movs	r3, #128	; 0x80
 80052da:	045b      	lsls	r3, r3, #17
 80052dc:	4013      	ands	r3, r2
 80052de:	d012      	beq.n	8005306 <HAL_UART_IRQHandler+0x63a>
 80052e0:	23a0      	movs	r3, #160	; 0xa0
 80052e2:	18fb      	adds	r3, r7, r3
 80052e4:	681b      	ldr	r3, [r3, #0]
 80052e6:	2b00      	cmp	r3, #0
 80052e8:	da0d      	bge.n	8005306 <HAL_UART_IRQHandler+0x63a>
 80052ea:	687b      	ldr	r3, [r7, #4]
 80052ec:	0018      	movs	r0, r3
 80052ee:	f001 f999 	bl	8006624 <HAL_UARTEx_RxFifoFullCallback>
 80052f2:	e008      	b.n	8005306 <HAL_UART_IRQHandler+0x63a>
 80052f4:	46c0      	nop			; (mov r8, r8)
 80052f6:	e006      	b.n	8005306 <HAL_UART_IRQHandler+0x63a>
 80052f8:	46c0      	nop			; (mov r8, r8)
 80052fa:	e004      	b.n	8005306 <HAL_UART_IRQHandler+0x63a>
 80052fc:	46c0      	nop			; (mov r8, r8)
 80052fe:	e002      	b.n	8005306 <HAL_UART_IRQHandler+0x63a>
 8005300:	46c0      	nop			; (mov r8, r8)
 8005302:	e000      	b.n	8005306 <HAL_UART_IRQHandler+0x63a>
 8005304:	46c0      	nop			; (mov r8, r8)
 8005306:	46bd      	mov	sp, r7
 8005308:	b02a      	add	sp, #168	; 0xa8
 800530a:	bdb0      	pop	{r4, r5, r7, pc}
 800530c:	fffffeff 	.word	0xfffffeff
 8005310:	fffffedf 	.word	0xfffffedf
 8005314:	effffffe 	.word	0xeffffffe

08005318 <HAL_UART_TxCpltCallback>:
 8005318:	b580      	push	{r7, lr}
 800531a:	b082      	sub	sp, #8
 800531c:	af00      	add	r7, sp, #0
 800531e:	6078      	str	r0, [r7, #4]
 8005320:	46c0      	nop			; (mov r8, r8)
 8005322:	46bd      	mov	sp, r7
 8005324:	b002      	add	sp, #8
 8005326:	bd80      	pop	{r7, pc}

08005328 <HAL_UART_ErrorCallback>:
 8005328:	b580      	push	{r7, lr}
 800532a:	b082      	sub	sp, #8
 800532c:	af00      	add	r7, sp, #0
 800532e:	6078      	str	r0, [r7, #4]
 8005330:	46c0      	nop			; (mov r8, r8)
 8005332:	46bd      	mov	sp, r7
 8005334:	b002      	add	sp, #8
 8005336:	bd80      	pop	{r7, pc}

08005338 <HAL_UARTEx_RxEventCallback>:
 8005338:	b580      	push	{r7, lr}
 800533a:	b082      	sub	sp, #8
 800533c:	af00      	add	r7, sp, #0
 800533e:	6078      	str	r0, [r7, #4]
 8005340:	000a      	movs	r2, r1
 8005342:	1cbb      	adds	r3, r7, #2
 8005344:	801a      	strh	r2, [r3, #0]
 8005346:	46c0      	nop			; (mov r8, r8)
 8005348:	46bd      	mov	sp, r7
 800534a:	b002      	add	sp, #8
 800534c:	bd80      	pop	{r7, pc}
	...

08005350 <UART_SetConfig>:
 8005350:	b580      	push	{r7, lr}
 8005352:	b088      	sub	sp, #32
 8005354:	af00      	add	r7, sp, #0
 8005356:	6078      	str	r0, [r7, #4]
 8005358:	231a      	movs	r3, #26
 800535a:	18fb      	adds	r3, r7, r3
 800535c:	2200      	movs	r2, #0
 800535e:	701a      	strb	r2, [r3, #0]
 8005360:	687b      	ldr	r3, [r7, #4]
 8005362:	689a      	ldr	r2, [r3, #8]
 8005364:	687b      	ldr	r3, [r7, #4]
 8005366:	691b      	ldr	r3, [r3, #16]
 8005368:	431a      	orrs	r2, r3
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	695b      	ldr	r3, [r3, #20]
 800536e:	431a      	orrs	r2, r3
 8005370:	687b      	ldr	r3, [r7, #4]
 8005372:	69db      	ldr	r3, [r3, #28]
 8005374:	4313      	orrs	r3, r2
 8005376:	61fb      	str	r3, [r7, #28]
 8005378:	687b      	ldr	r3, [r7, #4]
 800537a:	681b      	ldr	r3, [r3, #0]
 800537c:	681b      	ldr	r3, [r3, #0]
 800537e:	4aa1      	ldr	r2, [pc, #644]	; (8005604 <UART_SetConfig+0x2b4>)
 8005380:	4013      	ands	r3, r2
 8005382:	0019      	movs	r1, r3
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	681b      	ldr	r3, [r3, #0]
 8005388:	69fa      	ldr	r2, [r7, #28]
 800538a:	430a      	orrs	r2, r1
 800538c:	601a      	str	r2, [r3, #0]
 800538e:	687b      	ldr	r3, [r7, #4]
 8005390:	681b      	ldr	r3, [r3, #0]
 8005392:	685b      	ldr	r3, [r3, #4]
 8005394:	4a9c      	ldr	r2, [pc, #624]	; (8005608 <UART_SetConfig+0x2b8>)
 8005396:	4013      	ands	r3, r2
 8005398:	0019      	movs	r1, r3
 800539a:	687b      	ldr	r3, [r7, #4]
 800539c:	68da      	ldr	r2, [r3, #12]
 800539e:	687b      	ldr	r3, [r7, #4]
 80053a0:	681b      	ldr	r3, [r3, #0]
 80053a2:	430a      	orrs	r2, r1
 80053a4:	605a      	str	r2, [r3, #4]
 80053a6:	687b      	ldr	r3, [r7, #4]
 80053a8:	699b      	ldr	r3, [r3, #24]
 80053aa:	61fb      	str	r3, [r7, #28]
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	6a1b      	ldr	r3, [r3, #32]
 80053b0:	69fa      	ldr	r2, [r7, #28]
 80053b2:	4313      	orrs	r3, r2
 80053b4:	61fb      	str	r3, [r7, #28]
 80053b6:	687b      	ldr	r3, [r7, #4]
 80053b8:	681b      	ldr	r3, [r3, #0]
 80053ba:	689b      	ldr	r3, [r3, #8]
 80053bc:	4a93      	ldr	r2, [pc, #588]	; (800560c <UART_SetConfig+0x2bc>)
 80053be:	4013      	ands	r3, r2
 80053c0:	0019      	movs	r1, r3
 80053c2:	687b      	ldr	r3, [r7, #4]
 80053c4:	681b      	ldr	r3, [r3, #0]
 80053c6:	69fa      	ldr	r2, [r7, #28]
 80053c8:	430a      	orrs	r2, r1
 80053ca:	609a      	str	r2, [r3, #8]
 80053cc:	687b      	ldr	r3, [r7, #4]
 80053ce:	681b      	ldr	r3, [r3, #0]
 80053d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80053d2:	220f      	movs	r2, #15
 80053d4:	4393      	bics	r3, r2
 80053d6:	0019      	movs	r1, r3
 80053d8:	687b      	ldr	r3, [r7, #4]
 80053da:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80053dc:	687b      	ldr	r3, [r7, #4]
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	430a      	orrs	r2, r1
 80053e2:	62da      	str	r2, [r3, #44]	; 0x2c
 80053e4:	687b      	ldr	r3, [r7, #4]
 80053e6:	681b      	ldr	r3, [r3, #0]
 80053e8:	4a89      	ldr	r2, [pc, #548]	; (8005610 <UART_SetConfig+0x2c0>)
 80053ea:	4293      	cmp	r3, r2
 80053ec:	d127      	bne.n	800543e <UART_SetConfig+0xee>
 80053ee:	4b89      	ldr	r3, [pc, #548]	; (8005614 <UART_SetConfig+0x2c4>)
 80053f0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80053f2:	2203      	movs	r2, #3
 80053f4:	4013      	ands	r3, r2
 80053f6:	2b03      	cmp	r3, #3
 80053f8:	d017      	beq.n	800542a <UART_SetConfig+0xda>
 80053fa:	d81b      	bhi.n	8005434 <UART_SetConfig+0xe4>
 80053fc:	2b02      	cmp	r3, #2
 80053fe:	d00a      	beq.n	8005416 <UART_SetConfig+0xc6>
 8005400:	d818      	bhi.n	8005434 <UART_SetConfig+0xe4>
 8005402:	2b00      	cmp	r3, #0
 8005404:	d002      	beq.n	800540c <UART_SetConfig+0xbc>
 8005406:	2b01      	cmp	r3, #1
 8005408:	d00a      	beq.n	8005420 <UART_SetConfig+0xd0>
 800540a:	e013      	b.n	8005434 <UART_SetConfig+0xe4>
 800540c:	231b      	movs	r3, #27
 800540e:	18fb      	adds	r3, r7, r3
 8005410:	2200      	movs	r2, #0
 8005412:	701a      	strb	r2, [r3, #0]
 8005414:	e021      	b.n	800545a <UART_SetConfig+0x10a>
 8005416:	231b      	movs	r3, #27
 8005418:	18fb      	adds	r3, r7, r3
 800541a:	2202      	movs	r2, #2
 800541c:	701a      	strb	r2, [r3, #0]
 800541e:	e01c      	b.n	800545a <UART_SetConfig+0x10a>
 8005420:	231b      	movs	r3, #27
 8005422:	18fb      	adds	r3, r7, r3
 8005424:	2204      	movs	r2, #4
 8005426:	701a      	strb	r2, [r3, #0]
 8005428:	e017      	b.n	800545a <UART_SetConfig+0x10a>
 800542a:	231b      	movs	r3, #27
 800542c:	18fb      	adds	r3, r7, r3
 800542e:	2208      	movs	r2, #8
 8005430:	701a      	strb	r2, [r3, #0]
 8005432:	e012      	b.n	800545a <UART_SetConfig+0x10a>
 8005434:	231b      	movs	r3, #27
 8005436:	18fb      	adds	r3, r7, r3
 8005438:	2210      	movs	r2, #16
 800543a:	701a      	strb	r2, [r3, #0]
 800543c:	e00d      	b.n	800545a <UART_SetConfig+0x10a>
 800543e:	687b      	ldr	r3, [r7, #4]
 8005440:	681b      	ldr	r3, [r3, #0]
 8005442:	4a75      	ldr	r2, [pc, #468]	; (8005618 <UART_SetConfig+0x2c8>)
 8005444:	4293      	cmp	r3, r2
 8005446:	d104      	bne.n	8005452 <UART_SetConfig+0x102>
 8005448:	231b      	movs	r3, #27
 800544a:	18fb      	adds	r3, r7, r3
 800544c:	2200      	movs	r2, #0
 800544e:	701a      	strb	r2, [r3, #0]
 8005450:	e003      	b.n	800545a <UART_SetConfig+0x10a>
 8005452:	231b      	movs	r3, #27
 8005454:	18fb      	adds	r3, r7, r3
 8005456:	2210      	movs	r2, #16
 8005458:	701a      	strb	r2, [r3, #0]
 800545a:	687b      	ldr	r3, [r7, #4]
 800545c:	69da      	ldr	r2, [r3, #28]
 800545e:	2380      	movs	r3, #128	; 0x80
 8005460:	021b      	lsls	r3, r3, #8
 8005462:	429a      	cmp	r2, r3
 8005464:	d000      	beq.n	8005468 <UART_SetConfig+0x118>
 8005466:	e065      	b.n	8005534 <UART_SetConfig+0x1e4>
 8005468:	231b      	movs	r3, #27
 800546a:	18fb      	adds	r3, r7, r3
 800546c:	781b      	ldrb	r3, [r3, #0]
 800546e:	2b08      	cmp	r3, #8
 8005470:	d015      	beq.n	800549e <UART_SetConfig+0x14e>
 8005472:	dc18      	bgt.n	80054a6 <UART_SetConfig+0x156>
 8005474:	2b04      	cmp	r3, #4
 8005476:	d00d      	beq.n	8005494 <UART_SetConfig+0x144>
 8005478:	dc15      	bgt.n	80054a6 <UART_SetConfig+0x156>
 800547a:	2b00      	cmp	r3, #0
 800547c:	d002      	beq.n	8005484 <UART_SetConfig+0x134>
 800547e:	2b02      	cmp	r3, #2
 8005480:	d005      	beq.n	800548e <UART_SetConfig+0x13e>
 8005482:	e010      	b.n	80054a6 <UART_SetConfig+0x156>
 8005484:	f7ff f99c 	bl	80047c0 <HAL_RCC_GetPCLK1Freq>
 8005488:	0003      	movs	r3, r0
 800548a:	617b      	str	r3, [r7, #20]
 800548c:	e012      	b.n	80054b4 <UART_SetConfig+0x164>
 800548e:	4b63      	ldr	r3, [pc, #396]	; (800561c <UART_SetConfig+0x2cc>)
 8005490:	617b      	str	r3, [r7, #20]
 8005492:	e00f      	b.n	80054b4 <UART_SetConfig+0x164>
 8005494:	f7ff f908 	bl	80046a8 <HAL_RCC_GetSysClockFreq>
 8005498:	0003      	movs	r3, r0
 800549a:	617b      	str	r3, [r7, #20]
 800549c:	e00a      	b.n	80054b4 <UART_SetConfig+0x164>
 800549e:	2380      	movs	r3, #128	; 0x80
 80054a0:	021b      	lsls	r3, r3, #8
 80054a2:	617b      	str	r3, [r7, #20]
 80054a4:	e006      	b.n	80054b4 <UART_SetConfig+0x164>
 80054a6:	2300      	movs	r3, #0
 80054a8:	617b      	str	r3, [r7, #20]
 80054aa:	231a      	movs	r3, #26
 80054ac:	18fb      	adds	r3, r7, r3
 80054ae:	2201      	movs	r2, #1
 80054b0:	701a      	strb	r2, [r3, #0]
 80054b2:	46c0      	nop			; (mov r8, r8)
 80054b4:	697b      	ldr	r3, [r7, #20]
 80054b6:	2b00      	cmp	r3, #0
 80054b8:	d100      	bne.n	80054bc <UART_SetConfig+0x16c>
 80054ba:	e08d      	b.n	80055d8 <UART_SetConfig+0x288>
 80054bc:	687b      	ldr	r3, [r7, #4]
 80054be:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80054c0:	4b57      	ldr	r3, [pc, #348]	; (8005620 <UART_SetConfig+0x2d0>)
 80054c2:	0052      	lsls	r2, r2, #1
 80054c4:	5ad3      	ldrh	r3, [r2, r3]
 80054c6:	0019      	movs	r1, r3
 80054c8:	6978      	ldr	r0, [r7, #20]
 80054ca:	f7fa fe23 	bl	8000114 <__udivsi3>
 80054ce:	0003      	movs	r3, r0
 80054d0:	005a      	lsls	r2, r3, #1
 80054d2:	687b      	ldr	r3, [r7, #4]
 80054d4:	685b      	ldr	r3, [r3, #4]
 80054d6:	085b      	lsrs	r3, r3, #1
 80054d8:	18d2      	adds	r2, r2, r3
 80054da:	687b      	ldr	r3, [r7, #4]
 80054dc:	685b      	ldr	r3, [r3, #4]
 80054de:	0019      	movs	r1, r3
 80054e0:	0010      	movs	r0, r2
 80054e2:	f7fa fe17 	bl	8000114 <__udivsi3>
 80054e6:	0003      	movs	r3, r0
 80054e8:	613b      	str	r3, [r7, #16]
 80054ea:	693b      	ldr	r3, [r7, #16]
 80054ec:	2b0f      	cmp	r3, #15
 80054ee:	d91c      	bls.n	800552a <UART_SetConfig+0x1da>
 80054f0:	693a      	ldr	r2, [r7, #16]
 80054f2:	2380      	movs	r3, #128	; 0x80
 80054f4:	025b      	lsls	r3, r3, #9
 80054f6:	429a      	cmp	r2, r3
 80054f8:	d217      	bcs.n	800552a <UART_SetConfig+0x1da>
 80054fa:	693b      	ldr	r3, [r7, #16]
 80054fc:	b29a      	uxth	r2, r3
 80054fe:	200e      	movs	r0, #14
 8005500:	183b      	adds	r3, r7, r0
 8005502:	210f      	movs	r1, #15
 8005504:	438a      	bics	r2, r1
 8005506:	801a      	strh	r2, [r3, #0]
 8005508:	693b      	ldr	r3, [r7, #16]
 800550a:	085b      	lsrs	r3, r3, #1
 800550c:	b29b      	uxth	r3, r3
 800550e:	2207      	movs	r2, #7
 8005510:	4013      	ands	r3, r2
 8005512:	b299      	uxth	r1, r3
 8005514:	183b      	adds	r3, r7, r0
 8005516:	183a      	adds	r2, r7, r0
 8005518:	8812      	ldrh	r2, [r2, #0]
 800551a:	430a      	orrs	r2, r1
 800551c:	801a      	strh	r2, [r3, #0]
 800551e:	687b      	ldr	r3, [r7, #4]
 8005520:	681b      	ldr	r3, [r3, #0]
 8005522:	183a      	adds	r2, r7, r0
 8005524:	8812      	ldrh	r2, [r2, #0]
 8005526:	60da      	str	r2, [r3, #12]
 8005528:	e056      	b.n	80055d8 <UART_SetConfig+0x288>
 800552a:	231a      	movs	r3, #26
 800552c:	18fb      	adds	r3, r7, r3
 800552e:	2201      	movs	r2, #1
 8005530:	701a      	strb	r2, [r3, #0]
 8005532:	e051      	b.n	80055d8 <UART_SetConfig+0x288>
 8005534:	231b      	movs	r3, #27
 8005536:	18fb      	adds	r3, r7, r3
 8005538:	781b      	ldrb	r3, [r3, #0]
 800553a:	2b08      	cmp	r3, #8
 800553c:	d015      	beq.n	800556a <UART_SetConfig+0x21a>
 800553e:	dc18      	bgt.n	8005572 <UART_SetConfig+0x222>
 8005540:	2b04      	cmp	r3, #4
 8005542:	d00d      	beq.n	8005560 <UART_SetConfig+0x210>
 8005544:	dc15      	bgt.n	8005572 <UART_SetConfig+0x222>
 8005546:	2b00      	cmp	r3, #0
 8005548:	d002      	beq.n	8005550 <UART_SetConfig+0x200>
 800554a:	2b02      	cmp	r3, #2
 800554c:	d005      	beq.n	800555a <UART_SetConfig+0x20a>
 800554e:	e010      	b.n	8005572 <UART_SetConfig+0x222>
 8005550:	f7ff f936 	bl	80047c0 <HAL_RCC_GetPCLK1Freq>
 8005554:	0003      	movs	r3, r0
 8005556:	617b      	str	r3, [r7, #20]
 8005558:	e012      	b.n	8005580 <UART_SetConfig+0x230>
 800555a:	4b30      	ldr	r3, [pc, #192]	; (800561c <UART_SetConfig+0x2cc>)
 800555c:	617b      	str	r3, [r7, #20]
 800555e:	e00f      	b.n	8005580 <UART_SetConfig+0x230>
 8005560:	f7ff f8a2 	bl	80046a8 <HAL_RCC_GetSysClockFreq>
 8005564:	0003      	movs	r3, r0
 8005566:	617b      	str	r3, [r7, #20]
 8005568:	e00a      	b.n	8005580 <UART_SetConfig+0x230>
 800556a:	2380      	movs	r3, #128	; 0x80
 800556c:	021b      	lsls	r3, r3, #8
 800556e:	617b      	str	r3, [r7, #20]
 8005570:	e006      	b.n	8005580 <UART_SetConfig+0x230>
 8005572:	2300      	movs	r3, #0
 8005574:	617b      	str	r3, [r7, #20]
 8005576:	231a      	movs	r3, #26
 8005578:	18fb      	adds	r3, r7, r3
 800557a:	2201      	movs	r2, #1
 800557c:	701a      	strb	r2, [r3, #0]
 800557e:	46c0      	nop			; (mov r8, r8)
 8005580:	697b      	ldr	r3, [r7, #20]
 8005582:	2b00      	cmp	r3, #0
 8005584:	d028      	beq.n	80055d8 <UART_SetConfig+0x288>
 8005586:	687b      	ldr	r3, [r7, #4]
 8005588:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800558a:	4b25      	ldr	r3, [pc, #148]	; (8005620 <UART_SetConfig+0x2d0>)
 800558c:	0052      	lsls	r2, r2, #1
 800558e:	5ad3      	ldrh	r3, [r2, r3]
 8005590:	0019      	movs	r1, r3
 8005592:	6978      	ldr	r0, [r7, #20]
 8005594:	f7fa fdbe 	bl	8000114 <__udivsi3>
 8005598:	0003      	movs	r3, r0
 800559a:	001a      	movs	r2, r3
 800559c:	687b      	ldr	r3, [r7, #4]
 800559e:	685b      	ldr	r3, [r3, #4]
 80055a0:	085b      	lsrs	r3, r3, #1
 80055a2:	18d2      	adds	r2, r2, r3
 80055a4:	687b      	ldr	r3, [r7, #4]
 80055a6:	685b      	ldr	r3, [r3, #4]
 80055a8:	0019      	movs	r1, r3
 80055aa:	0010      	movs	r0, r2
 80055ac:	f7fa fdb2 	bl	8000114 <__udivsi3>
 80055b0:	0003      	movs	r3, r0
 80055b2:	613b      	str	r3, [r7, #16]
 80055b4:	693b      	ldr	r3, [r7, #16]
 80055b6:	2b0f      	cmp	r3, #15
 80055b8:	d90a      	bls.n	80055d0 <UART_SetConfig+0x280>
 80055ba:	693a      	ldr	r2, [r7, #16]
 80055bc:	2380      	movs	r3, #128	; 0x80
 80055be:	025b      	lsls	r3, r3, #9
 80055c0:	429a      	cmp	r2, r3
 80055c2:	d205      	bcs.n	80055d0 <UART_SetConfig+0x280>
 80055c4:	693b      	ldr	r3, [r7, #16]
 80055c6:	b29a      	uxth	r2, r3
 80055c8:	687b      	ldr	r3, [r7, #4]
 80055ca:	681b      	ldr	r3, [r3, #0]
 80055cc:	60da      	str	r2, [r3, #12]
 80055ce:	e003      	b.n	80055d8 <UART_SetConfig+0x288>
 80055d0:	231a      	movs	r3, #26
 80055d2:	18fb      	adds	r3, r7, r3
 80055d4:	2201      	movs	r2, #1
 80055d6:	701a      	strb	r2, [r3, #0]
 80055d8:	687b      	ldr	r3, [r7, #4]
 80055da:	226a      	movs	r2, #106	; 0x6a
 80055dc:	2101      	movs	r1, #1
 80055de:	5299      	strh	r1, [r3, r2]
 80055e0:	687b      	ldr	r3, [r7, #4]
 80055e2:	2268      	movs	r2, #104	; 0x68
 80055e4:	2101      	movs	r1, #1
 80055e6:	5299      	strh	r1, [r3, r2]
 80055e8:	687b      	ldr	r3, [r7, #4]
 80055ea:	2200      	movs	r2, #0
 80055ec:	675a      	str	r2, [r3, #116]	; 0x74
 80055ee:	687b      	ldr	r3, [r7, #4]
 80055f0:	2200      	movs	r2, #0
 80055f2:	679a      	str	r2, [r3, #120]	; 0x78
 80055f4:	231a      	movs	r3, #26
 80055f6:	18fb      	adds	r3, r7, r3
 80055f8:	781b      	ldrb	r3, [r3, #0]
 80055fa:	0018      	movs	r0, r3
 80055fc:	46bd      	mov	sp, r7
 80055fe:	b008      	add	sp, #32
 8005600:	bd80      	pop	{r7, pc}
 8005602:	46c0      	nop			; (mov r8, r8)
 8005604:	cfff69f3 	.word	0xcfff69f3
 8005608:	ffffcfff 	.word	0xffffcfff
 800560c:	11fff4ff 	.word	0x11fff4ff
 8005610:	40013800 	.word	0x40013800
 8005614:	40021000 	.word	0x40021000
 8005618:	40004400 	.word	0x40004400
 800561c:	00f42400 	.word	0x00f42400
 8005620:	08007374 	.word	0x08007374

08005624 <UART_AdvFeatureConfig>:
 8005624:	b580      	push	{r7, lr}
 8005626:	b082      	sub	sp, #8
 8005628:	af00      	add	r7, sp, #0
 800562a:	6078      	str	r0, [r7, #4]
 800562c:	687b      	ldr	r3, [r7, #4]
 800562e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005630:	2201      	movs	r2, #1
 8005632:	4013      	ands	r3, r2
 8005634:	d00b      	beq.n	800564e <UART_AdvFeatureConfig+0x2a>
 8005636:	687b      	ldr	r3, [r7, #4]
 8005638:	681b      	ldr	r3, [r3, #0]
 800563a:	685b      	ldr	r3, [r3, #4]
 800563c:	4a4a      	ldr	r2, [pc, #296]	; (8005768 <UART_AdvFeatureConfig+0x144>)
 800563e:	4013      	ands	r3, r2
 8005640:	0019      	movs	r1, r3
 8005642:	687b      	ldr	r3, [r7, #4]
 8005644:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005646:	687b      	ldr	r3, [r7, #4]
 8005648:	681b      	ldr	r3, [r3, #0]
 800564a:	430a      	orrs	r2, r1
 800564c:	605a      	str	r2, [r3, #4]
 800564e:	687b      	ldr	r3, [r7, #4]
 8005650:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005652:	2202      	movs	r2, #2
 8005654:	4013      	ands	r3, r2
 8005656:	d00b      	beq.n	8005670 <UART_AdvFeatureConfig+0x4c>
 8005658:	687b      	ldr	r3, [r7, #4]
 800565a:	681b      	ldr	r3, [r3, #0]
 800565c:	685b      	ldr	r3, [r3, #4]
 800565e:	4a43      	ldr	r2, [pc, #268]	; (800576c <UART_AdvFeatureConfig+0x148>)
 8005660:	4013      	ands	r3, r2
 8005662:	0019      	movs	r1, r3
 8005664:	687b      	ldr	r3, [r7, #4]
 8005666:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005668:	687b      	ldr	r3, [r7, #4]
 800566a:	681b      	ldr	r3, [r3, #0]
 800566c:	430a      	orrs	r2, r1
 800566e:	605a      	str	r2, [r3, #4]
 8005670:	687b      	ldr	r3, [r7, #4]
 8005672:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005674:	2204      	movs	r2, #4
 8005676:	4013      	ands	r3, r2
 8005678:	d00b      	beq.n	8005692 <UART_AdvFeatureConfig+0x6e>
 800567a:	687b      	ldr	r3, [r7, #4]
 800567c:	681b      	ldr	r3, [r3, #0]
 800567e:	685b      	ldr	r3, [r3, #4]
 8005680:	4a3b      	ldr	r2, [pc, #236]	; (8005770 <UART_AdvFeatureConfig+0x14c>)
 8005682:	4013      	ands	r3, r2
 8005684:	0019      	movs	r1, r3
 8005686:	687b      	ldr	r3, [r7, #4]
 8005688:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800568a:	687b      	ldr	r3, [r7, #4]
 800568c:	681b      	ldr	r3, [r3, #0]
 800568e:	430a      	orrs	r2, r1
 8005690:	605a      	str	r2, [r3, #4]
 8005692:	687b      	ldr	r3, [r7, #4]
 8005694:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005696:	2208      	movs	r2, #8
 8005698:	4013      	ands	r3, r2
 800569a:	d00b      	beq.n	80056b4 <UART_AdvFeatureConfig+0x90>
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	681b      	ldr	r3, [r3, #0]
 80056a0:	685b      	ldr	r3, [r3, #4]
 80056a2:	4a34      	ldr	r2, [pc, #208]	; (8005774 <UART_AdvFeatureConfig+0x150>)
 80056a4:	4013      	ands	r3, r2
 80056a6:	0019      	movs	r1, r3
 80056a8:	687b      	ldr	r3, [r7, #4]
 80056aa:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80056ac:	687b      	ldr	r3, [r7, #4]
 80056ae:	681b      	ldr	r3, [r3, #0]
 80056b0:	430a      	orrs	r2, r1
 80056b2:	605a      	str	r2, [r3, #4]
 80056b4:	687b      	ldr	r3, [r7, #4]
 80056b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80056b8:	2210      	movs	r2, #16
 80056ba:	4013      	ands	r3, r2
 80056bc:	d00b      	beq.n	80056d6 <UART_AdvFeatureConfig+0xb2>
 80056be:	687b      	ldr	r3, [r7, #4]
 80056c0:	681b      	ldr	r3, [r3, #0]
 80056c2:	689b      	ldr	r3, [r3, #8]
 80056c4:	4a2c      	ldr	r2, [pc, #176]	; (8005778 <UART_AdvFeatureConfig+0x154>)
 80056c6:	4013      	ands	r3, r2
 80056c8:	0019      	movs	r1, r3
 80056ca:	687b      	ldr	r3, [r7, #4]
 80056cc:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80056ce:	687b      	ldr	r3, [r7, #4]
 80056d0:	681b      	ldr	r3, [r3, #0]
 80056d2:	430a      	orrs	r2, r1
 80056d4:	609a      	str	r2, [r3, #8]
 80056d6:	687b      	ldr	r3, [r7, #4]
 80056d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80056da:	2220      	movs	r2, #32
 80056dc:	4013      	ands	r3, r2
 80056de:	d00b      	beq.n	80056f8 <UART_AdvFeatureConfig+0xd4>
 80056e0:	687b      	ldr	r3, [r7, #4]
 80056e2:	681b      	ldr	r3, [r3, #0]
 80056e4:	689b      	ldr	r3, [r3, #8]
 80056e6:	4a25      	ldr	r2, [pc, #148]	; (800577c <UART_AdvFeatureConfig+0x158>)
 80056e8:	4013      	ands	r3, r2
 80056ea:	0019      	movs	r1, r3
 80056ec:	687b      	ldr	r3, [r7, #4]
 80056ee:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80056f0:	687b      	ldr	r3, [r7, #4]
 80056f2:	681b      	ldr	r3, [r3, #0]
 80056f4:	430a      	orrs	r2, r1
 80056f6:	609a      	str	r2, [r3, #8]
 80056f8:	687b      	ldr	r3, [r7, #4]
 80056fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80056fc:	2240      	movs	r2, #64	; 0x40
 80056fe:	4013      	ands	r3, r2
 8005700:	d01d      	beq.n	800573e <UART_AdvFeatureConfig+0x11a>
 8005702:	687b      	ldr	r3, [r7, #4]
 8005704:	681b      	ldr	r3, [r3, #0]
 8005706:	685b      	ldr	r3, [r3, #4]
 8005708:	4a1d      	ldr	r2, [pc, #116]	; (8005780 <UART_AdvFeatureConfig+0x15c>)
 800570a:	4013      	ands	r3, r2
 800570c:	0019      	movs	r1, r3
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005712:	687b      	ldr	r3, [r7, #4]
 8005714:	681b      	ldr	r3, [r3, #0]
 8005716:	430a      	orrs	r2, r1
 8005718:	605a      	str	r2, [r3, #4]
 800571a:	687b      	ldr	r3, [r7, #4]
 800571c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800571e:	2380      	movs	r3, #128	; 0x80
 8005720:	035b      	lsls	r3, r3, #13
 8005722:	429a      	cmp	r2, r3
 8005724:	d10b      	bne.n	800573e <UART_AdvFeatureConfig+0x11a>
 8005726:	687b      	ldr	r3, [r7, #4]
 8005728:	681b      	ldr	r3, [r3, #0]
 800572a:	685b      	ldr	r3, [r3, #4]
 800572c:	4a15      	ldr	r2, [pc, #84]	; (8005784 <UART_AdvFeatureConfig+0x160>)
 800572e:	4013      	ands	r3, r2
 8005730:	0019      	movs	r1, r3
 8005732:	687b      	ldr	r3, [r7, #4]
 8005734:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8005736:	687b      	ldr	r3, [r7, #4]
 8005738:	681b      	ldr	r3, [r3, #0]
 800573a:	430a      	orrs	r2, r1
 800573c:	605a      	str	r2, [r3, #4]
 800573e:	687b      	ldr	r3, [r7, #4]
 8005740:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005742:	2280      	movs	r2, #128	; 0x80
 8005744:	4013      	ands	r3, r2
 8005746:	d00b      	beq.n	8005760 <UART_AdvFeatureConfig+0x13c>
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	681b      	ldr	r3, [r3, #0]
 800574c:	685b      	ldr	r3, [r3, #4]
 800574e:	4a0e      	ldr	r2, [pc, #56]	; (8005788 <UART_AdvFeatureConfig+0x164>)
 8005750:	4013      	ands	r3, r2
 8005752:	0019      	movs	r1, r3
 8005754:	687b      	ldr	r3, [r7, #4]
 8005756:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8005758:	687b      	ldr	r3, [r7, #4]
 800575a:	681b      	ldr	r3, [r3, #0]
 800575c:	430a      	orrs	r2, r1
 800575e:	605a      	str	r2, [r3, #4]
 8005760:	46c0      	nop			; (mov r8, r8)
 8005762:	46bd      	mov	sp, r7
 8005764:	b002      	add	sp, #8
 8005766:	bd80      	pop	{r7, pc}
 8005768:	fffdffff 	.word	0xfffdffff
 800576c:	fffeffff 	.word	0xfffeffff
 8005770:	fffbffff 	.word	0xfffbffff
 8005774:	ffff7fff 	.word	0xffff7fff
 8005778:	ffffefff 	.word	0xffffefff
 800577c:	ffffdfff 	.word	0xffffdfff
 8005780:	ffefffff 	.word	0xffefffff
 8005784:	ff9fffff 	.word	0xff9fffff
 8005788:	fff7ffff 	.word	0xfff7ffff

0800578c <UART_CheckIdleState>:
 800578c:	b580      	push	{r7, lr}
 800578e:	b086      	sub	sp, #24
 8005790:	af02      	add	r7, sp, #8
 8005792:	6078      	str	r0, [r7, #4]
 8005794:	687b      	ldr	r3, [r7, #4]
 8005796:	2290      	movs	r2, #144	; 0x90
 8005798:	2100      	movs	r1, #0
 800579a:	5099      	str	r1, [r3, r2]
 800579c:	f7fc fcd4 	bl	8002148 <HAL_GetTick>
 80057a0:	0003      	movs	r3, r0
 80057a2:	60fb      	str	r3, [r7, #12]
 80057a4:	687b      	ldr	r3, [r7, #4]
 80057a6:	681b      	ldr	r3, [r3, #0]
 80057a8:	681b      	ldr	r3, [r3, #0]
 80057aa:	2208      	movs	r2, #8
 80057ac:	4013      	ands	r3, r2
 80057ae:	2b08      	cmp	r3, #8
 80057b0:	d10c      	bne.n	80057cc <UART_CheckIdleState+0x40>
 80057b2:	68fb      	ldr	r3, [r7, #12]
 80057b4:	2280      	movs	r2, #128	; 0x80
 80057b6:	0391      	lsls	r1, r2, #14
 80057b8:	6878      	ldr	r0, [r7, #4]
 80057ba:	4a1a      	ldr	r2, [pc, #104]	; (8005824 <UART_CheckIdleState+0x98>)
 80057bc:	9200      	str	r2, [sp, #0]
 80057be:	2200      	movs	r2, #0
 80057c0:	f000 f832 	bl	8005828 <UART_WaitOnFlagUntilTimeout>
 80057c4:	1e03      	subs	r3, r0, #0
 80057c6:	d001      	beq.n	80057cc <UART_CheckIdleState+0x40>
 80057c8:	2303      	movs	r3, #3
 80057ca:	e026      	b.n	800581a <UART_CheckIdleState+0x8e>
 80057cc:	687b      	ldr	r3, [r7, #4]
 80057ce:	681b      	ldr	r3, [r3, #0]
 80057d0:	681b      	ldr	r3, [r3, #0]
 80057d2:	2204      	movs	r2, #4
 80057d4:	4013      	ands	r3, r2
 80057d6:	2b04      	cmp	r3, #4
 80057d8:	d10c      	bne.n	80057f4 <UART_CheckIdleState+0x68>
 80057da:	68fb      	ldr	r3, [r7, #12]
 80057dc:	2280      	movs	r2, #128	; 0x80
 80057de:	03d1      	lsls	r1, r2, #15
 80057e0:	6878      	ldr	r0, [r7, #4]
 80057e2:	4a10      	ldr	r2, [pc, #64]	; (8005824 <UART_CheckIdleState+0x98>)
 80057e4:	9200      	str	r2, [sp, #0]
 80057e6:	2200      	movs	r2, #0
 80057e8:	f000 f81e 	bl	8005828 <UART_WaitOnFlagUntilTimeout>
 80057ec:	1e03      	subs	r3, r0, #0
 80057ee:	d001      	beq.n	80057f4 <UART_CheckIdleState+0x68>
 80057f0:	2303      	movs	r3, #3
 80057f2:	e012      	b.n	800581a <UART_CheckIdleState+0x8e>
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	2288      	movs	r2, #136	; 0x88
 80057f8:	2120      	movs	r1, #32
 80057fa:	5099      	str	r1, [r3, r2]
 80057fc:	687b      	ldr	r3, [r7, #4]
 80057fe:	228c      	movs	r2, #140	; 0x8c
 8005800:	2120      	movs	r1, #32
 8005802:	5099      	str	r1, [r3, r2]
 8005804:	687b      	ldr	r3, [r7, #4]
 8005806:	2200      	movs	r2, #0
 8005808:	66da      	str	r2, [r3, #108]	; 0x6c
 800580a:	687b      	ldr	r3, [r7, #4]
 800580c:	2200      	movs	r2, #0
 800580e:	671a      	str	r2, [r3, #112]	; 0x70
 8005810:	687b      	ldr	r3, [r7, #4]
 8005812:	2284      	movs	r2, #132	; 0x84
 8005814:	2100      	movs	r1, #0
 8005816:	5499      	strb	r1, [r3, r2]
 8005818:	2300      	movs	r3, #0
 800581a:	0018      	movs	r0, r3
 800581c:	46bd      	mov	sp, r7
 800581e:	b004      	add	sp, #16
 8005820:	bd80      	pop	{r7, pc}
 8005822:	46c0      	nop			; (mov r8, r8)
 8005824:	01ffffff 	.word	0x01ffffff

08005828 <UART_WaitOnFlagUntilTimeout>:
 8005828:	b580      	push	{r7, lr}
 800582a:	b094      	sub	sp, #80	; 0x50
 800582c:	af00      	add	r7, sp, #0
 800582e:	60f8      	str	r0, [r7, #12]
 8005830:	60b9      	str	r1, [r7, #8]
 8005832:	603b      	str	r3, [r7, #0]
 8005834:	1dfb      	adds	r3, r7, #7
 8005836:	701a      	strb	r2, [r3, #0]
 8005838:	e0a7      	b.n	800598a <UART_WaitOnFlagUntilTimeout+0x162>
 800583a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800583c:	3301      	adds	r3, #1
 800583e:	d100      	bne.n	8005842 <UART_WaitOnFlagUntilTimeout+0x1a>
 8005840:	e0a3      	b.n	800598a <UART_WaitOnFlagUntilTimeout+0x162>
 8005842:	f7fc fc81 	bl	8002148 <HAL_GetTick>
 8005846:	0002      	movs	r2, r0
 8005848:	683b      	ldr	r3, [r7, #0]
 800584a:	1ad3      	subs	r3, r2, r3
 800584c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800584e:	429a      	cmp	r2, r3
 8005850:	d302      	bcc.n	8005858 <UART_WaitOnFlagUntilTimeout+0x30>
 8005852:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8005854:	2b00      	cmp	r3, #0
 8005856:	d13f      	bne.n	80058d8 <UART_WaitOnFlagUntilTimeout+0xb0>
 8005858:	f3ef 8310 	mrs	r3, PRIMASK
 800585c:	62bb      	str	r3, [r7, #40]	; 0x28
 800585e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005860:	647b      	str	r3, [r7, #68]	; 0x44
 8005862:	2301      	movs	r3, #1
 8005864:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005866:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005868:	f383 8810 	msr	PRIMASK, r3
 800586c:	46c0      	nop			; (mov r8, r8)
 800586e:	68fb      	ldr	r3, [r7, #12]
 8005870:	681b      	ldr	r3, [r3, #0]
 8005872:	681a      	ldr	r2, [r3, #0]
 8005874:	68fb      	ldr	r3, [r7, #12]
 8005876:	681b      	ldr	r3, [r3, #0]
 8005878:	494e      	ldr	r1, [pc, #312]	; (80059b4 <UART_WaitOnFlagUntilTimeout+0x18c>)
 800587a:	400a      	ands	r2, r1
 800587c:	601a      	str	r2, [r3, #0]
 800587e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8005880:	633b      	str	r3, [r7, #48]	; 0x30
 8005882:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005884:	f383 8810 	msr	PRIMASK, r3
 8005888:	46c0      	nop			; (mov r8, r8)
 800588a:	f3ef 8310 	mrs	r3, PRIMASK
 800588e:	637b      	str	r3, [r7, #52]	; 0x34
 8005890:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005892:	643b      	str	r3, [r7, #64]	; 0x40
 8005894:	2301      	movs	r3, #1
 8005896:	63bb      	str	r3, [r7, #56]	; 0x38
 8005898:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800589a:	f383 8810 	msr	PRIMASK, r3
 800589e:	46c0      	nop			; (mov r8, r8)
 80058a0:	68fb      	ldr	r3, [r7, #12]
 80058a2:	681b      	ldr	r3, [r3, #0]
 80058a4:	689a      	ldr	r2, [r3, #8]
 80058a6:	68fb      	ldr	r3, [r7, #12]
 80058a8:	681b      	ldr	r3, [r3, #0]
 80058aa:	2101      	movs	r1, #1
 80058ac:	438a      	bics	r2, r1
 80058ae:	609a      	str	r2, [r3, #8]
 80058b0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80058b2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80058b4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80058b6:	f383 8810 	msr	PRIMASK, r3
 80058ba:	46c0      	nop			; (mov r8, r8)
 80058bc:	68fb      	ldr	r3, [r7, #12]
 80058be:	2288      	movs	r2, #136	; 0x88
 80058c0:	2120      	movs	r1, #32
 80058c2:	5099      	str	r1, [r3, r2]
 80058c4:	68fb      	ldr	r3, [r7, #12]
 80058c6:	228c      	movs	r2, #140	; 0x8c
 80058c8:	2120      	movs	r1, #32
 80058ca:	5099      	str	r1, [r3, r2]
 80058cc:	68fb      	ldr	r3, [r7, #12]
 80058ce:	2284      	movs	r2, #132	; 0x84
 80058d0:	2100      	movs	r1, #0
 80058d2:	5499      	strb	r1, [r3, r2]
 80058d4:	2303      	movs	r3, #3
 80058d6:	e069      	b.n	80059ac <UART_WaitOnFlagUntilTimeout+0x184>
 80058d8:	68fb      	ldr	r3, [r7, #12]
 80058da:	681b      	ldr	r3, [r3, #0]
 80058dc:	681b      	ldr	r3, [r3, #0]
 80058de:	2204      	movs	r2, #4
 80058e0:	4013      	ands	r3, r2
 80058e2:	d052      	beq.n	800598a <UART_WaitOnFlagUntilTimeout+0x162>
 80058e4:	68fb      	ldr	r3, [r7, #12]
 80058e6:	681b      	ldr	r3, [r3, #0]
 80058e8:	69da      	ldr	r2, [r3, #28]
 80058ea:	2380      	movs	r3, #128	; 0x80
 80058ec:	011b      	lsls	r3, r3, #4
 80058ee:	401a      	ands	r2, r3
 80058f0:	2380      	movs	r3, #128	; 0x80
 80058f2:	011b      	lsls	r3, r3, #4
 80058f4:	429a      	cmp	r2, r3
 80058f6:	d148      	bne.n	800598a <UART_WaitOnFlagUntilTimeout+0x162>
 80058f8:	68fb      	ldr	r3, [r7, #12]
 80058fa:	681b      	ldr	r3, [r3, #0]
 80058fc:	2280      	movs	r2, #128	; 0x80
 80058fe:	0112      	lsls	r2, r2, #4
 8005900:	621a      	str	r2, [r3, #32]
 8005902:	f3ef 8310 	mrs	r3, PRIMASK
 8005906:	613b      	str	r3, [r7, #16]
 8005908:	693b      	ldr	r3, [r7, #16]
 800590a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800590c:	2301      	movs	r3, #1
 800590e:	617b      	str	r3, [r7, #20]
 8005910:	697b      	ldr	r3, [r7, #20]
 8005912:	f383 8810 	msr	PRIMASK, r3
 8005916:	46c0      	nop			; (mov r8, r8)
 8005918:	68fb      	ldr	r3, [r7, #12]
 800591a:	681b      	ldr	r3, [r3, #0]
 800591c:	681a      	ldr	r2, [r3, #0]
 800591e:	68fb      	ldr	r3, [r7, #12]
 8005920:	681b      	ldr	r3, [r3, #0]
 8005922:	4924      	ldr	r1, [pc, #144]	; (80059b4 <UART_WaitOnFlagUntilTimeout+0x18c>)
 8005924:	400a      	ands	r2, r1
 8005926:	601a      	str	r2, [r3, #0]
 8005928:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800592a:	61bb      	str	r3, [r7, #24]
 800592c:	69bb      	ldr	r3, [r7, #24]
 800592e:	f383 8810 	msr	PRIMASK, r3
 8005932:	46c0      	nop			; (mov r8, r8)
 8005934:	f3ef 8310 	mrs	r3, PRIMASK
 8005938:	61fb      	str	r3, [r7, #28]
 800593a:	69fb      	ldr	r3, [r7, #28]
 800593c:	64bb      	str	r3, [r7, #72]	; 0x48
 800593e:	2301      	movs	r3, #1
 8005940:	623b      	str	r3, [r7, #32]
 8005942:	6a3b      	ldr	r3, [r7, #32]
 8005944:	f383 8810 	msr	PRIMASK, r3
 8005948:	46c0      	nop			; (mov r8, r8)
 800594a:	68fb      	ldr	r3, [r7, #12]
 800594c:	681b      	ldr	r3, [r3, #0]
 800594e:	689a      	ldr	r2, [r3, #8]
 8005950:	68fb      	ldr	r3, [r7, #12]
 8005952:	681b      	ldr	r3, [r3, #0]
 8005954:	2101      	movs	r1, #1
 8005956:	438a      	bics	r2, r1
 8005958:	609a      	str	r2, [r3, #8]
 800595a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800595c:	627b      	str	r3, [r7, #36]	; 0x24
 800595e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005960:	f383 8810 	msr	PRIMASK, r3
 8005964:	46c0      	nop			; (mov r8, r8)
 8005966:	68fb      	ldr	r3, [r7, #12]
 8005968:	2288      	movs	r2, #136	; 0x88
 800596a:	2120      	movs	r1, #32
 800596c:	5099      	str	r1, [r3, r2]
 800596e:	68fb      	ldr	r3, [r7, #12]
 8005970:	228c      	movs	r2, #140	; 0x8c
 8005972:	2120      	movs	r1, #32
 8005974:	5099      	str	r1, [r3, r2]
 8005976:	68fb      	ldr	r3, [r7, #12]
 8005978:	2290      	movs	r2, #144	; 0x90
 800597a:	2120      	movs	r1, #32
 800597c:	5099      	str	r1, [r3, r2]
 800597e:	68fb      	ldr	r3, [r7, #12]
 8005980:	2284      	movs	r2, #132	; 0x84
 8005982:	2100      	movs	r1, #0
 8005984:	5499      	strb	r1, [r3, r2]
 8005986:	2303      	movs	r3, #3
 8005988:	e010      	b.n	80059ac <UART_WaitOnFlagUntilTimeout+0x184>
 800598a:	68fb      	ldr	r3, [r7, #12]
 800598c:	681b      	ldr	r3, [r3, #0]
 800598e:	69db      	ldr	r3, [r3, #28]
 8005990:	68ba      	ldr	r2, [r7, #8]
 8005992:	4013      	ands	r3, r2
 8005994:	68ba      	ldr	r2, [r7, #8]
 8005996:	1ad3      	subs	r3, r2, r3
 8005998:	425a      	negs	r2, r3
 800599a:	4153      	adcs	r3, r2
 800599c:	b2db      	uxtb	r3, r3
 800599e:	001a      	movs	r2, r3
 80059a0:	1dfb      	adds	r3, r7, #7
 80059a2:	781b      	ldrb	r3, [r3, #0]
 80059a4:	429a      	cmp	r2, r3
 80059a6:	d100      	bne.n	80059aa <UART_WaitOnFlagUntilTimeout+0x182>
 80059a8:	e747      	b.n	800583a <UART_WaitOnFlagUntilTimeout+0x12>
 80059aa:	2300      	movs	r3, #0
 80059ac:	0018      	movs	r0, r3
 80059ae:	46bd      	mov	sp, r7
 80059b0:	b014      	add	sp, #80	; 0x50
 80059b2:	bd80      	pop	{r7, pc}
 80059b4:	fffffe5f 	.word	0xfffffe5f

080059b8 <UART_Start_Receive_IT>:
 80059b8:	b580      	push	{r7, lr}
 80059ba:	b098      	sub	sp, #96	; 0x60
 80059bc:	af00      	add	r7, sp, #0
 80059be:	60f8      	str	r0, [r7, #12]
 80059c0:	60b9      	str	r1, [r7, #8]
 80059c2:	1dbb      	adds	r3, r7, #6
 80059c4:	801a      	strh	r2, [r3, #0]
 80059c6:	68fb      	ldr	r3, [r7, #12]
 80059c8:	68ba      	ldr	r2, [r7, #8]
 80059ca:	659a      	str	r2, [r3, #88]	; 0x58
 80059cc:	68fb      	ldr	r3, [r7, #12]
 80059ce:	1dba      	adds	r2, r7, #6
 80059d0:	215c      	movs	r1, #92	; 0x5c
 80059d2:	8812      	ldrh	r2, [r2, #0]
 80059d4:	525a      	strh	r2, [r3, r1]
 80059d6:	68fb      	ldr	r3, [r7, #12]
 80059d8:	1dba      	adds	r2, r7, #6
 80059da:	215e      	movs	r1, #94	; 0x5e
 80059dc:	8812      	ldrh	r2, [r2, #0]
 80059de:	525a      	strh	r2, [r3, r1]
 80059e0:	68fb      	ldr	r3, [r7, #12]
 80059e2:	2200      	movs	r2, #0
 80059e4:	675a      	str	r2, [r3, #116]	; 0x74
 80059e6:	68fb      	ldr	r3, [r7, #12]
 80059e8:	689a      	ldr	r2, [r3, #8]
 80059ea:	2380      	movs	r3, #128	; 0x80
 80059ec:	015b      	lsls	r3, r3, #5
 80059ee:	429a      	cmp	r2, r3
 80059f0:	d10d      	bne.n	8005a0e <UART_Start_Receive_IT+0x56>
 80059f2:	68fb      	ldr	r3, [r7, #12]
 80059f4:	691b      	ldr	r3, [r3, #16]
 80059f6:	2b00      	cmp	r3, #0
 80059f8:	d104      	bne.n	8005a04 <UART_Start_Receive_IT+0x4c>
 80059fa:	68fb      	ldr	r3, [r7, #12]
 80059fc:	2260      	movs	r2, #96	; 0x60
 80059fe:	497b      	ldr	r1, [pc, #492]	; (8005bec <UART_Start_Receive_IT+0x234>)
 8005a00:	5299      	strh	r1, [r3, r2]
 8005a02:	e02e      	b.n	8005a62 <UART_Start_Receive_IT+0xaa>
 8005a04:	68fb      	ldr	r3, [r7, #12]
 8005a06:	2260      	movs	r2, #96	; 0x60
 8005a08:	21ff      	movs	r1, #255	; 0xff
 8005a0a:	5299      	strh	r1, [r3, r2]
 8005a0c:	e029      	b.n	8005a62 <UART_Start_Receive_IT+0xaa>
 8005a0e:	68fb      	ldr	r3, [r7, #12]
 8005a10:	689b      	ldr	r3, [r3, #8]
 8005a12:	2b00      	cmp	r3, #0
 8005a14:	d10d      	bne.n	8005a32 <UART_Start_Receive_IT+0x7a>
 8005a16:	68fb      	ldr	r3, [r7, #12]
 8005a18:	691b      	ldr	r3, [r3, #16]
 8005a1a:	2b00      	cmp	r3, #0
 8005a1c:	d104      	bne.n	8005a28 <UART_Start_Receive_IT+0x70>
 8005a1e:	68fb      	ldr	r3, [r7, #12]
 8005a20:	2260      	movs	r2, #96	; 0x60
 8005a22:	21ff      	movs	r1, #255	; 0xff
 8005a24:	5299      	strh	r1, [r3, r2]
 8005a26:	e01c      	b.n	8005a62 <UART_Start_Receive_IT+0xaa>
 8005a28:	68fb      	ldr	r3, [r7, #12]
 8005a2a:	2260      	movs	r2, #96	; 0x60
 8005a2c:	217f      	movs	r1, #127	; 0x7f
 8005a2e:	5299      	strh	r1, [r3, r2]
 8005a30:	e017      	b.n	8005a62 <UART_Start_Receive_IT+0xaa>
 8005a32:	68fb      	ldr	r3, [r7, #12]
 8005a34:	689a      	ldr	r2, [r3, #8]
 8005a36:	2380      	movs	r3, #128	; 0x80
 8005a38:	055b      	lsls	r3, r3, #21
 8005a3a:	429a      	cmp	r2, r3
 8005a3c:	d10d      	bne.n	8005a5a <UART_Start_Receive_IT+0xa2>
 8005a3e:	68fb      	ldr	r3, [r7, #12]
 8005a40:	691b      	ldr	r3, [r3, #16]
 8005a42:	2b00      	cmp	r3, #0
 8005a44:	d104      	bne.n	8005a50 <UART_Start_Receive_IT+0x98>
 8005a46:	68fb      	ldr	r3, [r7, #12]
 8005a48:	2260      	movs	r2, #96	; 0x60
 8005a4a:	217f      	movs	r1, #127	; 0x7f
 8005a4c:	5299      	strh	r1, [r3, r2]
 8005a4e:	e008      	b.n	8005a62 <UART_Start_Receive_IT+0xaa>
 8005a50:	68fb      	ldr	r3, [r7, #12]
 8005a52:	2260      	movs	r2, #96	; 0x60
 8005a54:	213f      	movs	r1, #63	; 0x3f
 8005a56:	5299      	strh	r1, [r3, r2]
 8005a58:	e003      	b.n	8005a62 <UART_Start_Receive_IT+0xaa>
 8005a5a:	68fb      	ldr	r3, [r7, #12]
 8005a5c:	2260      	movs	r2, #96	; 0x60
 8005a5e:	2100      	movs	r1, #0
 8005a60:	5299      	strh	r1, [r3, r2]
 8005a62:	68fb      	ldr	r3, [r7, #12]
 8005a64:	2290      	movs	r2, #144	; 0x90
 8005a66:	2100      	movs	r1, #0
 8005a68:	5099      	str	r1, [r3, r2]
 8005a6a:	68fb      	ldr	r3, [r7, #12]
 8005a6c:	228c      	movs	r2, #140	; 0x8c
 8005a6e:	2122      	movs	r1, #34	; 0x22
 8005a70:	5099      	str	r1, [r3, r2]
 8005a72:	f3ef 8310 	mrs	r3, PRIMASK
 8005a76:	643b      	str	r3, [r7, #64]	; 0x40
 8005a78:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8005a7a:	65fb      	str	r3, [r7, #92]	; 0x5c
 8005a7c:	2301      	movs	r3, #1
 8005a7e:	647b      	str	r3, [r7, #68]	; 0x44
 8005a80:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8005a82:	f383 8810 	msr	PRIMASK, r3
 8005a86:	46c0      	nop			; (mov r8, r8)
 8005a88:	68fb      	ldr	r3, [r7, #12]
 8005a8a:	681b      	ldr	r3, [r3, #0]
 8005a8c:	689a      	ldr	r2, [r3, #8]
 8005a8e:	68fb      	ldr	r3, [r7, #12]
 8005a90:	681b      	ldr	r3, [r3, #0]
 8005a92:	2101      	movs	r1, #1
 8005a94:	430a      	orrs	r2, r1
 8005a96:	609a      	str	r2, [r3, #8]
 8005a98:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8005a9a:	64bb      	str	r3, [r7, #72]	; 0x48
 8005a9c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005a9e:	f383 8810 	msr	PRIMASK, r3
 8005aa2:	46c0      	nop			; (mov r8, r8)
 8005aa4:	68fb      	ldr	r3, [r7, #12]
 8005aa6:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8005aa8:	2380      	movs	r3, #128	; 0x80
 8005aaa:	059b      	lsls	r3, r3, #22
 8005aac:	429a      	cmp	r2, r3
 8005aae:	d150      	bne.n	8005b52 <UART_Start_Receive_IT+0x19a>
 8005ab0:	68fb      	ldr	r3, [r7, #12]
 8005ab2:	2268      	movs	r2, #104	; 0x68
 8005ab4:	5a9b      	ldrh	r3, [r3, r2]
 8005ab6:	1dba      	adds	r2, r7, #6
 8005ab8:	8812      	ldrh	r2, [r2, #0]
 8005aba:	429a      	cmp	r2, r3
 8005abc:	d349      	bcc.n	8005b52 <UART_Start_Receive_IT+0x19a>
 8005abe:	68fb      	ldr	r3, [r7, #12]
 8005ac0:	689a      	ldr	r2, [r3, #8]
 8005ac2:	2380      	movs	r3, #128	; 0x80
 8005ac4:	015b      	lsls	r3, r3, #5
 8005ac6:	429a      	cmp	r2, r3
 8005ac8:	d107      	bne.n	8005ada <UART_Start_Receive_IT+0x122>
 8005aca:	68fb      	ldr	r3, [r7, #12]
 8005acc:	691b      	ldr	r3, [r3, #16]
 8005ace:	2b00      	cmp	r3, #0
 8005ad0:	d103      	bne.n	8005ada <UART_Start_Receive_IT+0x122>
 8005ad2:	68fb      	ldr	r3, [r7, #12]
 8005ad4:	4a46      	ldr	r2, [pc, #280]	; (8005bf0 <UART_Start_Receive_IT+0x238>)
 8005ad6:	675a      	str	r2, [r3, #116]	; 0x74
 8005ad8:	e002      	b.n	8005ae0 <UART_Start_Receive_IT+0x128>
 8005ada:	68fb      	ldr	r3, [r7, #12]
 8005adc:	4a45      	ldr	r2, [pc, #276]	; (8005bf4 <UART_Start_Receive_IT+0x23c>)
 8005ade:	675a      	str	r2, [r3, #116]	; 0x74
 8005ae0:	68fb      	ldr	r3, [r7, #12]
 8005ae2:	691b      	ldr	r3, [r3, #16]
 8005ae4:	2b00      	cmp	r3, #0
 8005ae6:	d019      	beq.n	8005b1c <UART_Start_Receive_IT+0x164>
 8005ae8:	f3ef 8310 	mrs	r3, PRIMASK
 8005aec:	637b      	str	r3, [r7, #52]	; 0x34
 8005aee:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005af0:	65bb      	str	r3, [r7, #88]	; 0x58
 8005af2:	2301      	movs	r3, #1
 8005af4:	63bb      	str	r3, [r7, #56]	; 0x38
 8005af6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005af8:	f383 8810 	msr	PRIMASK, r3
 8005afc:	46c0      	nop			; (mov r8, r8)
 8005afe:	68fb      	ldr	r3, [r7, #12]
 8005b00:	681b      	ldr	r3, [r3, #0]
 8005b02:	681a      	ldr	r2, [r3, #0]
 8005b04:	68fb      	ldr	r3, [r7, #12]
 8005b06:	681b      	ldr	r3, [r3, #0]
 8005b08:	2180      	movs	r1, #128	; 0x80
 8005b0a:	0049      	lsls	r1, r1, #1
 8005b0c:	430a      	orrs	r2, r1
 8005b0e:	601a      	str	r2, [r3, #0]
 8005b10:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8005b12:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005b14:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8005b16:	f383 8810 	msr	PRIMASK, r3
 8005b1a:	46c0      	nop			; (mov r8, r8)
 8005b1c:	f3ef 8310 	mrs	r3, PRIMASK
 8005b20:	62bb      	str	r3, [r7, #40]	; 0x28
 8005b22:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005b24:	657b      	str	r3, [r7, #84]	; 0x54
 8005b26:	2301      	movs	r3, #1
 8005b28:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005b2a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005b2c:	f383 8810 	msr	PRIMASK, r3
 8005b30:	46c0      	nop			; (mov r8, r8)
 8005b32:	68fb      	ldr	r3, [r7, #12]
 8005b34:	681b      	ldr	r3, [r3, #0]
 8005b36:	689a      	ldr	r2, [r3, #8]
 8005b38:	68fb      	ldr	r3, [r7, #12]
 8005b3a:	681b      	ldr	r3, [r3, #0]
 8005b3c:	2180      	movs	r1, #128	; 0x80
 8005b3e:	0549      	lsls	r1, r1, #21
 8005b40:	430a      	orrs	r2, r1
 8005b42:	609a      	str	r2, [r3, #8]
 8005b44:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8005b46:	633b      	str	r3, [r7, #48]	; 0x30
 8005b48:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005b4a:	f383 8810 	msr	PRIMASK, r3
 8005b4e:	46c0      	nop			; (mov r8, r8)
 8005b50:	e047      	b.n	8005be2 <UART_Start_Receive_IT+0x22a>
 8005b52:	68fb      	ldr	r3, [r7, #12]
 8005b54:	689a      	ldr	r2, [r3, #8]
 8005b56:	2380      	movs	r3, #128	; 0x80
 8005b58:	015b      	lsls	r3, r3, #5
 8005b5a:	429a      	cmp	r2, r3
 8005b5c:	d107      	bne.n	8005b6e <UART_Start_Receive_IT+0x1b6>
 8005b5e:	68fb      	ldr	r3, [r7, #12]
 8005b60:	691b      	ldr	r3, [r3, #16]
 8005b62:	2b00      	cmp	r3, #0
 8005b64:	d103      	bne.n	8005b6e <UART_Start_Receive_IT+0x1b6>
 8005b66:	68fb      	ldr	r3, [r7, #12]
 8005b68:	4a23      	ldr	r2, [pc, #140]	; (8005bf8 <UART_Start_Receive_IT+0x240>)
 8005b6a:	675a      	str	r2, [r3, #116]	; 0x74
 8005b6c:	e002      	b.n	8005b74 <UART_Start_Receive_IT+0x1bc>
 8005b6e:	68fb      	ldr	r3, [r7, #12]
 8005b70:	4a22      	ldr	r2, [pc, #136]	; (8005bfc <UART_Start_Receive_IT+0x244>)
 8005b72:	675a      	str	r2, [r3, #116]	; 0x74
 8005b74:	68fb      	ldr	r3, [r7, #12]
 8005b76:	691b      	ldr	r3, [r3, #16]
 8005b78:	2b00      	cmp	r3, #0
 8005b7a:	d019      	beq.n	8005bb0 <UART_Start_Receive_IT+0x1f8>
 8005b7c:	f3ef 8310 	mrs	r3, PRIMASK
 8005b80:	61fb      	str	r3, [r7, #28]
 8005b82:	69fb      	ldr	r3, [r7, #28]
 8005b84:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005b86:	2301      	movs	r3, #1
 8005b88:	623b      	str	r3, [r7, #32]
 8005b8a:	6a3b      	ldr	r3, [r7, #32]
 8005b8c:	f383 8810 	msr	PRIMASK, r3
 8005b90:	46c0      	nop			; (mov r8, r8)
 8005b92:	68fb      	ldr	r3, [r7, #12]
 8005b94:	681b      	ldr	r3, [r3, #0]
 8005b96:	681a      	ldr	r2, [r3, #0]
 8005b98:	68fb      	ldr	r3, [r7, #12]
 8005b9a:	681b      	ldr	r3, [r3, #0]
 8005b9c:	2190      	movs	r1, #144	; 0x90
 8005b9e:	0049      	lsls	r1, r1, #1
 8005ba0:	430a      	orrs	r2, r1
 8005ba2:	601a      	str	r2, [r3, #0]
 8005ba4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8005ba6:	627b      	str	r3, [r7, #36]	; 0x24
 8005ba8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005baa:	f383 8810 	msr	PRIMASK, r3
 8005bae:	e018      	b.n	8005be2 <UART_Start_Receive_IT+0x22a>
 8005bb0:	f3ef 8310 	mrs	r3, PRIMASK
 8005bb4:	613b      	str	r3, [r7, #16]
 8005bb6:	693b      	ldr	r3, [r7, #16]
 8005bb8:	653b      	str	r3, [r7, #80]	; 0x50
 8005bba:	2301      	movs	r3, #1
 8005bbc:	617b      	str	r3, [r7, #20]
 8005bbe:	697b      	ldr	r3, [r7, #20]
 8005bc0:	f383 8810 	msr	PRIMASK, r3
 8005bc4:	46c0      	nop			; (mov r8, r8)
 8005bc6:	68fb      	ldr	r3, [r7, #12]
 8005bc8:	681b      	ldr	r3, [r3, #0]
 8005bca:	681a      	ldr	r2, [r3, #0]
 8005bcc:	68fb      	ldr	r3, [r7, #12]
 8005bce:	681b      	ldr	r3, [r3, #0]
 8005bd0:	2120      	movs	r1, #32
 8005bd2:	430a      	orrs	r2, r1
 8005bd4:	601a      	str	r2, [r3, #0]
 8005bd6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8005bd8:	61bb      	str	r3, [r7, #24]
 8005bda:	69bb      	ldr	r3, [r7, #24]
 8005bdc:	f383 8810 	msr	PRIMASK, r3
 8005be0:	46c0      	nop			; (mov r8, r8)
 8005be2:	2300      	movs	r3, #0
 8005be4:	0018      	movs	r0, r3
 8005be6:	46bd      	mov	sp, r7
 8005be8:	b018      	add	sp, #96	; 0x60
 8005bea:	bd80      	pop	{r7, pc}
 8005bec:	000001ff 	.word	0x000001ff
 8005bf0:	08006329 	.word	0x08006329
 8005bf4:	0800603d 	.word	0x0800603d
 8005bf8:	08005ec9 	.word	0x08005ec9
 8005bfc:	08005d55 	.word	0x08005d55

08005c00 <UART_EndRxTransfer>:
 8005c00:	b580      	push	{r7, lr}
 8005c02:	b08e      	sub	sp, #56	; 0x38
 8005c04:	af00      	add	r7, sp, #0
 8005c06:	6078      	str	r0, [r7, #4]
 8005c08:	f3ef 8310 	mrs	r3, PRIMASK
 8005c0c:	617b      	str	r3, [r7, #20]
 8005c0e:	697b      	ldr	r3, [r7, #20]
 8005c10:	637b      	str	r3, [r7, #52]	; 0x34
 8005c12:	2301      	movs	r3, #1
 8005c14:	61bb      	str	r3, [r7, #24]
 8005c16:	69bb      	ldr	r3, [r7, #24]
 8005c18:	f383 8810 	msr	PRIMASK, r3
 8005c1c:	46c0      	nop			; (mov r8, r8)
 8005c1e:	687b      	ldr	r3, [r7, #4]
 8005c20:	681b      	ldr	r3, [r3, #0]
 8005c22:	681a      	ldr	r2, [r3, #0]
 8005c24:	687b      	ldr	r3, [r7, #4]
 8005c26:	681b      	ldr	r3, [r3, #0]
 8005c28:	4926      	ldr	r1, [pc, #152]	; (8005cc4 <UART_EndRxTransfer+0xc4>)
 8005c2a:	400a      	ands	r2, r1
 8005c2c:	601a      	str	r2, [r3, #0]
 8005c2e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005c30:	61fb      	str	r3, [r7, #28]
 8005c32:	69fb      	ldr	r3, [r7, #28]
 8005c34:	f383 8810 	msr	PRIMASK, r3
 8005c38:	46c0      	nop			; (mov r8, r8)
 8005c3a:	f3ef 8310 	mrs	r3, PRIMASK
 8005c3e:	623b      	str	r3, [r7, #32]
 8005c40:	6a3b      	ldr	r3, [r7, #32]
 8005c42:	633b      	str	r3, [r7, #48]	; 0x30
 8005c44:	2301      	movs	r3, #1
 8005c46:	627b      	str	r3, [r7, #36]	; 0x24
 8005c48:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005c4a:	f383 8810 	msr	PRIMASK, r3
 8005c4e:	46c0      	nop			; (mov r8, r8)
 8005c50:	687b      	ldr	r3, [r7, #4]
 8005c52:	681b      	ldr	r3, [r3, #0]
 8005c54:	689a      	ldr	r2, [r3, #8]
 8005c56:	687b      	ldr	r3, [r7, #4]
 8005c58:	681b      	ldr	r3, [r3, #0]
 8005c5a:	491b      	ldr	r1, [pc, #108]	; (8005cc8 <UART_EndRxTransfer+0xc8>)
 8005c5c:	400a      	ands	r2, r1
 8005c5e:	609a      	str	r2, [r3, #8]
 8005c60:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005c62:	62bb      	str	r3, [r7, #40]	; 0x28
 8005c64:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005c66:	f383 8810 	msr	PRIMASK, r3
 8005c6a:	46c0      	nop			; (mov r8, r8)
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005c70:	2b01      	cmp	r3, #1
 8005c72:	d118      	bne.n	8005ca6 <UART_EndRxTransfer+0xa6>
 8005c74:	f3ef 8310 	mrs	r3, PRIMASK
 8005c78:	60bb      	str	r3, [r7, #8]
 8005c7a:	68bb      	ldr	r3, [r7, #8]
 8005c7c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005c7e:	2301      	movs	r3, #1
 8005c80:	60fb      	str	r3, [r7, #12]
 8005c82:	68fb      	ldr	r3, [r7, #12]
 8005c84:	f383 8810 	msr	PRIMASK, r3
 8005c88:	46c0      	nop			; (mov r8, r8)
 8005c8a:	687b      	ldr	r3, [r7, #4]
 8005c8c:	681b      	ldr	r3, [r3, #0]
 8005c8e:	681a      	ldr	r2, [r3, #0]
 8005c90:	687b      	ldr	r3, [r7, #4]
 8005c92:	681b      	ldr	r3, [r3, #0]
 8005c94:	2110      	movs	r1, #16
 8005c96:	438a      	bics	r2, r1
 8005c98:	601a      	str	r2, [r3, #0]
 8005c9a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005c9c:	613b      	str	r3, [r7, #16]
 8005c9e:	693b      	ldr	r3, [r7, #16]
 8005ca0:	f383 8810 	msr	PRIMASK, r3
 8005ca4:	46c0      	nop			; (mov r8, r8)
 8005ca6:	687b      	ldr	r3, [r7, #4]
 8005ca8:	228c      	movs	r2, #140	; 0x8c
 8005caa:	2120      	movs	r1, #32
 8005cac:	5099      	str	r1, [r3, r2]
 8005cae:	687b      	ldr	r3, [r7, #4]
 8005cb0:	2200      	movs	r2, #0
 8005cb2:	66da      	str	r2, [r3, #108]	; 0x6c
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	2200      	movs	r2, #0
 8005cb8:	675a      	str	r2, [r3, #116]	; 0x74
 8005cba:	46c0      	nop			; (mov r8, r8)
 8005cbc:	46bd      	mov	sp, r7
 8005cbe:	b00e      	add	sp, #56	; 0x38
 8005cc0:	bd80      	pop	{r7, pc}
 8005cc2:	46c0      	nop			; (mov r8, r8)
 8005cc4:	fffffedf 	.word	0xfffffedf
 8005cc8:	effffffe 	.word	0xeffffffe

08005ccc <UART_DMAAbortOnError>:
 8005ccc:	b580      	push	{r7, lr}
 8005cce:	b084      	sub	sp, #16
 8005cd0:	af00      	add	r7, sp, #0
 8005cd2:	6078      	str	r0, [r7, #4]
 8005cd4:	687b      	ldr	r3, [r7, #4]
 8005cd6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005cd8:	60fb      	str	r3, [r7, #12]
 8005cda:	68fb      	ldr	r3, [r7, #12]
 8005cdc:	225e      	movs	r2, #94	; 0x5e
 8005cde:	2100      	movs	r1, #0
 8005ce0:	5299      	strh	r1, [r3, r2]
 8005ce2:	68fb      	ldr	r3, [r7, #12]
 8005ce4:	2256      	movs	r2, #86	; 0x56
 8005ce6:	2100      	movs	r1, #0
 8005ce8:	5299      	strh	r1, [r3, r2]
 8005cea:	68fb      	ldr	r3, [r7, #12]
 8005cec:	0018      	movs	r0, r3
 8005cee:	f7ff fb1b 	bl	8005328 <HAL_UART_ErrorCallback>
 8005cf2:	46c0      	nop			; (mov r8, r8)
 8005cf4:	46bd      	mov	sp, r7
 8005cf6:	b004      	add	sp, #16
 8005cf8:	bd80      	pop	{r7, pc}

08005cfa <UART_EndTransmit_IT>:
 8005cfa:	b580      	push	{r7, lr}
 8005cfc:	b086      	sub	sp, #24
 8005cfe:	af00      	add	r7, sp, #0
 8005d00:	6078      	str	r0, [r7, #4]
 8005d02:	f3ef 8310 	mrs	r3, PRIMASK
 8005d06:	60bb      	str	r3, [r7, #8]
 8005d08:	68bb      	ldr	r3, [r7, #8]
 8005d0a:	617b      	str	r3, [r7, #20]
 8005d0c:	2301      	movs	r3, #1
 8005d0e:	60fb      	str	r3, [r7, #12]
 8005d10:	68fb      	ldr	r3, [r7, #12]
 8005d12:	f383 8810 	msr	PRIMASK, r3
 8005d16:	46c0      	nop			; (mov r8, r8)
 8005d18:	687b      	ldr	r3, [r7, #4]
 8005d1a:	681b      	ldr	r3, [r3, #0]
 8005d1c:	681a      	ldr	r2, [r3, #0]
 8005d1e:	687b      	ldr	r3, [r7, #4]
 8005d20:	681b      	ldr	r3, [r3, #0]
 8005d22:	2140      	movs	r1, #64	; 0x40
 8005d24:	438a      	bics	r2, r1
 8005d26:	601a      	str	r2, [r3, #0]
 8005d28:	697b      	ldr	r3, [r7, #20]
 8005d2a:	613b      	str	r3, [r7, #16]
 8005d2c:	693b      	ldr	r3, [r7, #16]
 8005d2e:	f383 8810 	msr	PRIMASK, r3
 8005d32:	46c0      	nop			; (mov r8, r8)
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	2288      	movs	r2, #136	; 0x88
 8005d38:	2120      	movs	r1, #32
 8005d3a:	5099      	str	r1, [r3, r2]
 8005d3c:	687b      	ldr	r3, [r7, #4]
 8005d3e:	2200      	movs	r2, #0
 8005d40:	679a      	str	r2, [r3, #120]	; 0x78
 8005d42:	687b      	ldr	r3, [r7, #4]
 8005d44:	0018      	movs	r0, r3
 8005d46:	f7ff fae7 	bl	8005318 <HAL_UART_TxCpltCallback>
 8005d4a:	46c0      	nop			; (mov r8, r8)
 8005d4c:	46bd      	mov	sp, r7
 8005d4e:	b006      	add	sp, #24
 8005d50:	bd80      	pop	{r7, pc}
	...

08005d54 <UART_RxISR_8BIT>:
 8005d54:	b580      	push	{r7, lr}
 8005d56:	b090      	sub	sp, #64	; 0x40
 8005d58:	af00      	add	r7, sp, #0
 8005d5a:	6078      	str	r0, [r7, #4]
 8005d5c:	203e      	movs	r0, #62	; 0x3e
 8005d5e:	183b      	adds	r3, r7, r0
 8005d60:	687a      	ldr	r2, [r7, #4]
 8005d62:	2160      	movs	r1, #96	; 0x60
 8005d64:	5a52      	ldrh	r2, [r2, r1]
 8005d66:	801a      	strh	r2, [r3, #0]
 8005d68:	687b      	ldr	r3, [r7, #4]
 8005d6a:	228c      	movs	r2, #140	; 0x8c
 8005d6c:	589b      	ldr	r3, [r3, r2]
 8005d6e:	2b22      	cmp	r3, #34	; 0x22
 8005d70:	d000      	beq.n	8005d74 <UART_RxISR_8BIT+0x20>
 8005d72:	e09a      	b.n	8005eaa <UART_RxISR_8BIT+0x156>
 8005d74:	687b      	ldr	r3, [r7, #4]
 8005d76:	681b      	ldr	r3, [r3, #0]
 8005d78:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005d7a:	213c      	movs	r1, #60	; 0x3c
 8005d7c:	187b      	adds	r3, r7, r1
 8005d7e:	801a      	strh	r2, [r3, #0]
 8005d80:	187b      	adds	r3, r7, r1
 8005d82:	881b      	ldrh	r3, [r3, #0]
 8005d84:	b2da      	uxtb	r2, r3
 8005d86:	183b      	adds	r3, r7, r0
 8005d88:	881b      	ldrh	r3, [r3, #0]
 8005d8a:	b2d9      	uxtb	r1, r3
 8005d8c:	687b      	ldr	r3, [r7, #4]
 8005d8e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005d90:	400a      	ands	r2, r1
 8005d92:	b2d2      	uxtb	r2, r2
 8005d94:	701a      	strb	r2, [r3, #0]
 8005d96:	687b      	ldr	r3, [r7, #4]
 8005d98:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005d9a:	1c5a      	adds	r2, r3, #1
 8005d9c:	687b      	ldr	r3, [r7, #4]
 8005d9e:	659a      	str	r2, [r3, #88]	; 0x58
 8005da0:	687b      	ldr	r3, [r7, #4]
 8005da2:	225e      	movs	r2, #94	; 0x5e
 8005da4:	5a9b      	ldrh	r3, [r3, r2]
 8005da6:	b29b      	uxth	r3, r3
 8005da8:	3b01      	subs	r3, #1
 8005daa:	b299      	uxth	r1, r3
 8005dac:	687b      	ldr	r3, [r7, #4]
 8005dae:	225e      	movs	r2, #94	; 0x5e
 8005db0:	5299      	strh	r1, [r3, r2]
 8005db2:	687b      	ldr	r3, [r7, #4]
 8005db4:	225e      	movs	r2, #94	; 0x5e
 8005db6:	5a9b      	ldrh	r3, [r3, r2]
 8005db8:	b29b      	uxth	r3, r3
 8005dba:	2b00      	cmp	r3, #0
 8005dbc:	d000      	beq.n	8005dc0 <UART_RxISR_8BIT+0x6c>
 8005dbe:	e07c      	b.n	8005eba <UART_RxISR_8BIT+0x166>
 8005dc0:	f3ef 8310 	mrs	r3, PRIMASK
 8005dc4:	61bb      	str	r3, [r7, #24]
 8005dc6:	69bb      	ldr	r3, [r7, #24]
 8005dc8:	63bb      	str	r3, [r7, #56]	; 0x38
 8005dca:	2301      	movs	r3, #1
 8005dcc:	61fb      	str	r3, [r7, #28]
 8005dce:	69fb      	ldr	r3, [r7, #28]
 8005dd0:	f383 8810 	msr	PRIMASK, r3
 8005dd4:	46c0      	nop			; (mov r8, r8)
 8005dd6:	687b      	ldr	r3, [r7, #4]
 8005dd8:	681b      	ldr	r3, [r3, #0]
 8005dda:	681a      	ldr	r2, [r3, #0]
 8005ddc:	687b      	ldr	r3, [r7, #4]
 8005dde:	681b      	ldr	r3, [r3, #0]
 8005de0:	4938      	ldr	r1, [pc, #224]	; (8005ec4 <UART_RxISR_8BIT+0x170>)
 8005de2:	400a      	ands	r2, r1
 8005de4:	601a      	str	r2, [r3, #0]
 8005de6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005de8:	623b      	str	r3, [r7, #32]
 8005dea:	6a3b      	ldr	r3, [r7, #32]
 8005dec:	f383 8810 	msr	PRIMASK, r3
 8005df0:	46c0      	nop			; (mov r8, r8)
 8005df2:	f3ef 8310 	mrs	r3, PRIMASK
 8005df6:	627b      	str	r3, [r7, #36]	; 0x24
 8005df8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005dfa:	637b      	str	r3, [r7, #52]	; 0x34
 8005dfc:	2301      	movs	r3, #1
 8005dfe:	62bb      	str	r3, [r7, #40]	; 0x28
 8005e00:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005e02:	f383 8810 	msr	PRIMASK, r3
 8005e06:	46c0      	nop			; (mov r8, r8)
 8005e08:	687b      	ldr	r3, [r7, #4]
 8005e0a:	681b      	ldr	r3, [r3, #0]
 8005e0c:	689a      	ldr	r2, [r3, #8]
 8005e0e:	687b      	ldr	r3, [r7, #4]
 8005e10:	681b      	ldr	r3, [r3, #0]
 8005e12:	2101      	movs	r1, #1
 8005e14:	438a      	bics	r2, r1
 8005e16:	609a      	str	r2, [r3, #8]
 8005e18:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005e1a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005e1c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005e1e:	f383 8810 	msr	PRIMASK, r3
 8005e22:	46c0      	nop			; (mov r8, r8)
 8005e24:	687b      	ldr	r3, [r7, #4]
 8005e26:	228c      	movs	r2, #140	; 0x8c
 8005e28:	2120      	movs	r1, #32
 8005e2a:	5099      	str	r1, [r3, r2]
 8005e2c:	687b      	ldr	r3, [r7, #4]
 8005e2e:	2200      	movs	r2, #0
 8005e30:	675a      	str	r2, [r3, #116]	; 0x74
 8005e32:	687b      	ldr	r3, [r7, #4]
 8005e34:	2200      	movs	r2, #0
 8005e36:	671a      	str	r2, [r3, #112]	; 0x70
 8005e38:	687b      	ldr	r3, [r7, #4]
 8005e3a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005e3c:	2b01      	cmp	r3, #1
 8005e3e:	d12f      	bne.n	8005ea0 <UART_RxISR_8BIT+0x14c>
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	2200      	movs	r2, #0
 8005e44:	66da      	str	r2, [r3, #108]	; 0x6c
 8005e46:	f3ef 8310 	mrs	r3, PRIMASK
 8005e4a:	60fb      	str	r3, [r7, #12]
 8005e4c:	68fb      	ldr	r3, [r7, #12]
 8005e4e:	633b      	str	r3, [r7, #48]	; 0x30
 8005e50:	2301      	movs	r3, #1
 8005e52:	613b      	str	r3, [r7, #16]
 8005e54:	693b      	ldr	r3, [r7, #16]
 8005e56:	f383 8810 	msr	PRIMASK, r3
 8005e5a:	46c0      	nop			; (mov r8, r8)
 8005e5c:	687b      	ldr	r3, [r7, #4]
 8005e5e:	681b      	ldr	r3, [r3, #0]
 8005e60:	681a      	ldr	r2, [r3, #0]
 8005e62:	687b      	ldr	r3, [r7, #4]
 8005e64:	681b      	ldr	r3, [r3, #0]
 8005e66:	2110      	movs	r1, #16
 8005e68:	438a      	bics	r2, r1
 8005e6a:	601a      	str	r2, [r3, #0]
 8005e6c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005e6e:	617b      	str	r3, [r7, #20]
 8005e70:	697b      	ldr	r3, [r7, #20]
 8005e72:	f383 8810 	msr	PRIMASK, r3
 8005e76:	46c0      	nop			; (mov r8, r8)
 8005e78:	687b      	ldr	r3, [r7, #4]
 8005e7a:	681b      	ldr	r3, [r3, #0]
 8005e7c:	69db      	ldr	r3, [r3, #28]
 8005e7e:	2210      	movs	r2, #16
 8005e80:	4013      	ands	r3, r2
 8005e82:	2b10      	cmp	r3, #16
 8005e84:	d103      	bne.n	8005e8e <UART_RxISR_8BIT+0x13a>
 8005e86:	687b      	ldr	r3, [r7, #4]
 8005e88:	681b      	ldr	r3, [r3, #0]
 8005e8a:	2210      	movs	r2, #16
 8005e8c:	621a      	str	r2, [r3, #32]
 8005e8e:	687b      	ldr	r3, [r7, #4]
 8005e90:	225c      	movs	r2, #92	; 0x5c
 8005e92:	5a9a      	ldrh	r2, [r3, r2]
 8005e94:	687b      	ldr	r3, [r7, #4]
 8005e96:	0011      	movs	r1, r2
 8005e98:	0018      	movs	r0, r3
 8005e9a:	f7ff fa4d 	bl	8005338 <HAL_UARTEx_RxEventCallback>
 8005e9e:	e00c      	b.n	8005eba <UART_RxISR_8BIT+0x166>
 8005ea0:	687b      	ldr	r3, [r7, #4]
 8005ea2:	0018      	movs	r0, r3
 8005ea4:	f7fb fe2e 	bl	8001b04 <HAL_UART_RxCpltCallback>
 8005ea8:	e007      	b.n	8005eba <UART_RxISR_8BIT+0x166>
 8005eaa:	687b      	ldr	r3, [r7, #4]
 8005eac:	681b      	ldr	r3, [r3, #0]
 8005eae:	699a      	ldr	r2, [r3, #24]
 8005eb0:	687b      	ldr	r3, [r7, #4]
 8005eb2:	681b      	ldr	r3, [r3, #0]
 8005eb4:	2108      	movs	r1, #8
 8005eb6:	430a      	orrs	r2, r1
 8005eb8:	619a      	str	r2, [r3, #24]
 8005eba:	46c0      	nop			; (mov r8, r8)
 8005ebc:	46bd      	mov	sp, r7
 8005ebe:	b010      	add	sp, #64	; 0x40
 8005ec0:	bd80      	pop	{r7, pc}
 8005ec2:	46c0      	nop			; (mov r8, r8)
 8005ec4:	fffffedf 	.word	0xfffffedf

08005ec8 <UART_RxISR_16BIT>:
 8005ec8:	b580      	push	{r7, lr}
 8005eca:	b090      	sub	sp, #64	; 0x40
 8005ecc:	af00      	add	r7, sp, #0
 8005ece:	6078      	str	r0, [r7, #4]
 8005ed0:	203e      	movs	r0, #62	; 0x3e
 8005ed2:	183b      	adds	r3, r7, r0
 8005ed4:	687a      	ldr	r2, [r7, #4]
 8005ed6:	2160      	movs	r1, #96	; 0x60
 8005ed8:	5a52      	ldrh	r2, [r2, r1]
 8005eda:	801a      	strh	r2, [r3, #0]
 8005edc:	687b      	ldr	r3, [r7, #4]
 8005ede:	228c      	movs	r2, #140	; 0x8c
 8005ee0:	589b      	ldr	r3, [r3, r2]
 8005ee2:	2b22      	cmp	r3, #34	; 0x22
 8005ee4:	d000      	beq.n	8005ee8 <UART_RxISR_16BIT+0x20>
 8005ee6:	e09a      	b.n	800601e <UART_RxISR_16BIT+0x156>
 8005ee8:	687b      	ldr	r3, [r7, #4]
 8005eea:	681b      	ldr	r3, [r3, #0]
 8005eec:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005eee:	213c      	movs	r1, #60	; 0x3c
 8005ef0:	187b      	adds	r3, r7, r1
 8005ef2:	801a      	strh	r2, [r3, #0]
 8005ef4:	687b      	ldr	r3, [r7, #4]
 8005ef6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005ef8:	63bb      	str	r3, [r7, #56]	; 0x38
 8005efa:	187b      	adds	r3, r7, r1
 8005efc:	183a      	adds	r2, r7, r0
 8005efe:	881b      	ldrh	r3, [r3, #0]
 8005f00:	8812      	ldrh	r2, [r2, #0]
 8005f02:	4013      	ands	r3, r2
 8005f04:	b29a      	uxth	r2, r3
 8005f06:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005f08:	801a      	strh	r2, [r3, #0]
 8005f0a:	687b      	ldr	r3, [r7, #4]
 8005f0c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005f0e:	1c9a      	adds	r2, r3, #2
 8005f10:	687b      	ldr	r3, [r7, #4]
 8005f12:	659a      	str	r2, [r3, #88]	; 0x58
 8005f14:	687b      	ldr	r3, [r7, #4]
 8005f16:	225e      	movs	r2, #94	; 0x5e
 8005f18:	5a9b      	ldrh	r3, [r3, r2]
 8005f1a:	b29b      	uxth	r3, r3
 8005f1c:	3b01      	subs	r3, #1
 8005f1e:	b299      	uxth	r1, r3
 8005f20:	687b      	ldr	r3, [r7, #4]
 8005f22:	225e      	movs	r2, #94	; 0x5e
 8005f24:	5299      	strh	r1, [r3, r2]
 8005f26:	687b      	ldr	r3, [r7, #4]
 8005f28:	225e      	movs	r2, #94	; 0x5e
 8005f2a:	5a9b      	ldrh	r3, [r3, r2]
 8005f2c:	b29b      	uxth	r3, r3
 8005f2e:	2b00      	cmp	r3, #0
 8005f30:	d000      	beq.n	8005f34 <UART_RxISR_16BIT+0x6c>
 8005f32:	e07c      	b.n	800602e <UART_RxISR_16BIT+0x166>
 8005f34:	f3ef 8310 	mrs	r3, PRIMASK
 8005f38:	617b      	str	r3, [r7, #20]
 8005f3a:	697b      	ldr	r3, [r7, #20]
 8005f3c:	637b      	str	r3, [r7, #52]	; 0x34
 8005f3e:	2301      	movs	r3, #1
 8005f40:	61bb      	str	r3, [r7, #24]
 8005f42:	69bb      	ldr	r3, [r7, #24]
 8005f44:	f383 8810 	msr	PRIMASK, r3
 8005f48:	46c0      	nop			; (mov r8, r8)
 8005f4a:	687b      	ldr	r3, [r7, #4]
 8005f4c:	681b      	ldr	r3, [r3, #0]
 8005f4e:	681a      	ldr	r2, [r3, #0]
 8005f50:	687b      	ldr	r3, [r7, #4]
 8005f52:	681b      	ldr	r3, [r3, #0]
 8005f54:	4938      	ldr	r1, [pc, #224]	; (8006038 <UART_RxISR_16BIT+0x170>)
 8005f56:	400a      	ands	r2, r1
 8005f58:	601a      	str	r2, [r3, #0]
 8005f5a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005f5c:	61fb      	str	r3, [r7, #28]
 8005f5e:	69fb      	ldr	r3, [r7, #28]
 8005f60:	f383 8810 	msr	PRIMASK, r3
 8005f64:	46c0      	nop			; (mov r8, r8)
 8005f66:	f3ef 8310 	mrs	r3, PRIMASK
 8005f6a:	623b      	str	r3, [r7, #32]
 8005f6c:	6a3b      	ldr	r3, [r7, #32]
 8005f6e:	633b      	str	r3, [r7, #48]	; 0x30
 8005f70:	2301      	movs	r3, #1
 8005f72:	627b      	str	r3, [r7, #36]	; 0x24
 8005f74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005f76:	f383 8810 	msr	PRIMASK, r3
 8005f7a:	46c0      	nop			; (mov r8, r8)
 8005f7c:	687b      	ldr	r3, [r7, #4]
 8005f7e:	681b      	ldr	r3, [r3, #0]
 8005f80:	689a      	ldr	r2, [r3, #8]
 8005f82:	687b      	ldr	r3, [r7, #4]
 8005f84:	681b      	ldr	r3, [r3, #0]
 8005f86:	2101      	movs	r1, #1
 8005f88:	438a      	bics	r2, r1
 8005f8a:	609a      	str	r2, [r3, #8]
 8005f8c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f8e:	62bb      	str	r3, [r7, #40]	; 0x28
 8005f90:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005f92:	f383 8810 	msr	PRIMASK, r3
 8005f96:	46c0      	nop			; (mov r8, r8)
 8005f98:	687b      	ldr	r3, [r7, #4]
 8005f9a:	228c      	movs	r2, #140	; 0x8c
 8005f9c:	2120      	movs	r1, #32
 8005f9e:	5099      	str	r1, [r3, r2]
 8005fa0:	687b      	ldr	r3, [r7, #4]
 8005fa2:	2200      	movs	r2, #0
 8005fa4:	675a      	str	r2, [r3, #116]	; 0x74
 8005fa6:	687b      	ldr	r3, [r7, #4]
 8005fa8:	2200      	movs	r2, #0
 8005faa:	671a      	str	r2, [r3, #112]	; 0x70
 8005fac:	687b      	ldr	r3, [r7, #4]
 8005fae:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005fb0:	2b01      	cmp	r3, #1
 8005fb2:	d12f      	bne.n	8006014 <UART_RxISR_16BIT+0x14c>
 8005fb4:	687b      	ldr	r3, [r7, #4]
 8005fb6:	2200      	movs	r2, #0
 8005fb8:	66da      	str	r2, [r3, #108]	; 0x6c
 8005fba:	f3ef 8310 	mrs	r3, PRIMASK
 8005fbe:	60bb      	str	r3, [r7, #8]
 8005fc0:	68bb      	ldr	r3, [r7, #8]
 8005fc2:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005fc4:	2301      	movs	r3, #1
 8005fc6:	60fb      	str	r3, [r7, #12]
 8005fc8:	68fb      	ldr	r3, [r7, #12]
 8005fca:	f383 8810 	msr	PRIMASK, r3
 8005fce:	46c0      	nop			; (mov r8, r8)
 8005fd0:	687b      	ldr	r3, [r7, #4]
 8005fd2:	681b      	ldr	r3, [r3, #0]
 8005fd4:	681a      	ldr	r2, [r3, #0]
 8005fd6:	687b      	ldr	r3, [r7, #4]
 8005fd8:	681b      	ldr	r3, [r3, #0]
 8005fda:	2110      	movs	r1, #16
 8005fdc:	438a      	bics	r2, r1
 8005fde:	601a      	str	r2, [r3, #0]
 8005fe0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005fe2:	613b      	str	r3, [r7, #16]
 8005fe4:	693b      	ldr	r3, [r7, #16]
 8005fe6:	f383 8810 	msr	PRIMASK, r3
 8005fea:	46c0      	nop			; (mov r8, r8)
 8005fec:	687b      	ldr	r3, [r7, #4]
 8005fee:	681b      	ldr	r3, [r3, #0]
 8005ff0:	69db      	ldr	r3, [r3, #28]
 8005ff2:	2210      	movs	r2, #16
 8005ff4:	4013      	ands	r3, r2
 8005ff6:	2b10      	cmp	r3, #16
 8005ff8:	d103      	bne.n	8006002 <UART_RxISR_16BIT+0x13a>
 8005ffa:	687b      	ldr	r3, [r7, #4]
 8005ffc:	681b      	ldr	r3, [r3, #0]
 8005ffe:	2210      	movs	r2, #16
 8006000:	621a      	str	r2, [r3, #32]
 8006002:	687b      	ldr	r3, [r7, #4]
 8006004:	225c      	movs	r2, #92	; 0x5c
 8006006:	5a9a      	ldrh	r2, [r3, r2]
 8006008:	687b      	ldr	r3, [r7, #4]
 800600a:	0011      	movs	r1, r2
 800600c:	0018      	movs	r0, r3
 800600e:	f7ff f993 	bl	8005338 <HAL_UARTEx_RxEventCallback>
 8006012:	e00c      	b.n	800602e <UART_RxISR_16BIT+0x166>
 8006014:	687b      	ldr	r3, [r7, #4]
 8006016:	0018      	movs	r0, r3
 8006018:	f7fb fd74 	bl	8001b04 <HAL_UART_RxCpltCallback>
 800601c:	e007      	b.n	800602e <UART_RxISR_16BIT+0x166>
 800601e:	687b      	ldr	r3, [r7, #4]
 8006020:	681b      	ldr	r3, [r3, #0]
 8006022:	699a      	ldr	r2, [r3, #24]
 8006024:	687b      	ldr	r3, [r7, #4]
 8006026:	681b      	ldr	r3, [r3, #0]
 8006028:	2108      	movs	r1, #8
 800602a:	430a      	orrs	r2, r1
 800602c:	619a      	str	r2, [r3, #24]
 800602e:	46c0      	nop			; (mov r8, r8)
 8006030:	46bd      	mov	sp, r7
 8006032:	b010      	add	sp, #64	; 0x40
 8006034:	bd80      	pop	{r7, pc}
 8006036:	46c0      	nop			; (mov r8, r8)
 8006038:	fffffedf 	.word	0xfffffedf

0800603c <UART_RxISR_8BIT_FIFOEN>:
 800603c:	b580      	push	{r7, lr}
 800603e:	b09c      	sub	sp, #112	; 0x70
 8006040:	af00      	add	r7, sp, #0
 8006042:	6078      	str	r0, [r7, #4]
 8006044:	236a      	movs	r3, #106	; 0x6a
 8006046:	18fb      	adds	r3, r7, r3
 8006048:	687a      	ldr	r2, [r7, #4]
 800604a:	2160      	movs	r1, #96	; 0x60
 800604c:	5a52      	ldrh	r2, [r2, r1]
 800604e:	801a      	strh	r2, [r3, #0]
 8006050:	687b      	ldr	r3, [r7, #4]
 8006052:	681b      	ldr	r3, [r3, #0]
 8006054:	69db      	ldr	r3, [r3, #28]
 8006056:	66fb      	str	r3, [r7, #108]	; 0x6c
 8006058:	687b      	ldr	r3, [r7, #4]
 800605a:	681b      	ldr	r3, [r3, #0]
 800605c:	681b      	ldr	r3, [r3, #0]
 800605e:	667b      	str	r3, [r7, #100]	; 0x64
 8006060:	687b      	ldr	r3, [r7, #4]
 8006062:	681b      	ldr	r3, [r3, #0]
 8006064:	689b      	ldr	r3, [r3, #8]
 8006066:	663b      	str	r3, [r7, #96]	; 0x60
 8006068:	687b      	ldr	r3, [r7, #4]
 800606a:	228c      	movs	r2, #140	; 0x8c
 800606c:	589b      	ldr	r3, [r3, r2]
 800606e:	2b22      	cmp	r3, #34	; 0x22
 8006070:	d000      	beq.n	8006074 <UART_RxISR_8BIT_FIFOEN+0x38>
 8006072:	e144      	b.n	80062fe <UART_RxISR_8BIT_FIFOEN+0x2c2>
 8006074:	235e      	movs	r3, #94	; 0x5e
 8006076:	18fb      	adds	r3, r7, r3
 8006078:	687a      	ldr	r2, [r7, #4]
 800607a:	2168      	movs	r1, #104	; 0x68
 800607c:	5a52      	ldrh	r2, [r2, r1]
 800607e:	801a      	strh	r2, [r3, #0]
 8006080:	e0eb      	b.n	800625a <UART_RxISR_8BIT_FIFOEN+0x21e>
 8006082:	687b      	ldr	r3, [r7, #4]
 8006084:	681b      	ldr	r3, [r3, #0]
 8006086:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006088:	215c      	movs	r1, #92	; 0x5c
 800608a:	187b      	adds	r3, r7, r1
 800608c:	801a      	strh	r2, [r3, #0]
 800608e:	187b      	adds	r3, r7, r1
 8006090:	881b      	ldrh	r3, [r3, #0]
 8006092:	b2da      	uxtb	r2, r3
 8006094:	236a      	movs	r3, #106	; 0x6a
 8006096:	18fb      	adds	r3, r7, r3
 8006098:	881b      	ldrh	r3, [r3, #0]
 800609a:	b2d9      	uxtb	r1, r3
 800609c:	687b      	ldr	r3, [r7, #4]
 800609e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80060a0:	400a      	ands	r2, r1
 80060a2:	b2d2      	uxtb	r2, r2
 80060a4:	701a      	strb	r2, [r3, #0]
 80060a6:	687b      	ldr	r3, [r7, #4]
 80060a8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80060aa:	1c5a      	adds	r2, r3, #1
 80060ac:	687b      	ldr	r3, [r7, #4]
 80060ae:	659a      	str	r2, [r3, #88]	; 0x58
 80060b0:	687b      	ldr	r3, [r7, #4]
 80060b2:	225e      	movs	r2, #94	; 0x5e
 80060b4:	5a9b      	ldrh	r3, [r3, r2]
 80060b6:	b29b      	uxth	r3, r3
 80060b8:	3b01      	subs	r3, #1
 80060ba:	b299      	uxth	r1, r3
 80060bc:	687b      	ldr	r3, [r7, #4]
 80060be:	225e      	movs	r2, #94	; 0x5e
 80060c0:	5299      	strh	r1, [r3, r2]
 80060c2:	687b      	ldr	r3, [r7, #4]
 80060c4:	681b      	ldr	r3, [r3, #0]
 80060c6:	69db      	ldr	r3, [r3, #28]
 80060c8:	66fb      	str	r3, [r7, #108]	; 0x6c
 80060ca:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80060cc:	2207      	movs	r2, #7
 80060ce:	4013      	ands	r3, r2
 80060d0:	d049      	beq.n	8006166 <UART_RxISR_8BIT_FIFOEN+0x12a>
 80060d2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80060d4:	2201      	movs	r2, #1
 80060d6:	4013      	ands	r3, r2
 80060d8:	d010      	beq.n	80060fc <UART_RxISR_8BIT_FIFOEN+0xc0>
 80060da:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 80060dc:	2380      	movs	r3, #128	; 0x80
 80060de:	005b      	lsls	r3, r3, #1
 80060e0:	4013      	ands	r3, r2
 80060e2:	d00b      	beq.n	80060fc <UART_RxISR_8BIT_FIFOEN+0xc0>
 80060e4:	687b      	ldr	r3, [r7, #4]
 80060e6:	681b      	ldr	r3, [r3, #0]
 80060e8:	2201      	movs	r2, #1
 80060ea:	621a      	str	r2, [r3, #32]
 80060ec:	687b      	ldr	r3, [r7, #4]
 80060ee:	2290      	movs	r2, #144	; 0x90
 80060f0:	589b      	ldr	r3, [r3, r2]
 80060f2:	2201      	movs	r2, #1
 80060f4:	431a      	orrs	r2, r3
 80060f6:	687b      	ldr	r3, [r7, #4]
 80060f8:	2190      	movs	r1, #144	; 0x90
 80060fa:	505a      	str	r2, [r3, r1]
 80060fc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80060fe:	2202      	movs	r2, #2
 8006100:	4013      	ands	r3, r2
 8006102:	d00f      	beq.n	8006124 <UART_RxISR_8BIT_FIFOEN+0xe8>
 8006104:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8006106:	2201      	movs	r2, #1
 8006108:	4013      	ands	r3, r2
 800610a:	d00b      	beq.n	8006124 <UART_RxISR_8BIT_FIFOEN+0xe8>
 800610c:	687b      	ldr	r3, [r7, #4]
 800610e:	681b      	ldr	r3, [r3, #0]
 8006110:	2202      	movs	r2, #2
 8006112:	621a      	str	r2, [r3, #32]
 8006114:	687b      	ldr	r3, [r7, #4]
 8006116:	2290      	movs	r2, #144	; 0x90
 8006118:	589b      	ldr	r3, [r3, r2]
 800611a:	2204      	movs	r2, #4
 800611c:	431a      	orrs	r2, r3
 800611e:	687b      	ldr	r3, [r7, #4]
 8006120:	2190      	movs	r1, #144	; 0x90
 8006122:	505a      	str	r2, [r3, r1]
 8006124:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006126:	2204      	movs	r2, #4
 8006128:	4013      	ands	r3, r2
 800612a:	d00f      	beq.n	800614c <UART_RxISR_8BIT_FIFOEN+0x110>
 800612c:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800612e:	2201      	movs	r2, #1
 8006130:	4013      	ands	r3, r2
 8006132:	d00b      	beq.n	800614c <UART_RxISR_8BIT_FIFOEN+0x110>
 8006134:	687b      	ldr	r3, [r7, #4]
 8006136:	681b      	ldr	r3, [r3, #0]
 8006138:	2204      	movs	r2, #4
 800613a:	621a      	str	r2, [r3, #32]
 800613c:	687b      	ldr	r3, [r7, #4]
 800613e:	2290      	movs	r2, #144	; 0x90
 8006140:	589b      	ldr	r3, [r3, r2]
 8006142:	2202      	movs	r2, #2
 8006144:	431a      	orrs	r2, r3
 8006146:	687b      	ldr	r3, [r7, #4]
 8006148:	2190      	movs	r1, #144	; 0x90
 800614a:	505a      	str	r2, [r3, r1]
 800614c:	687b      	ldr	r3, [r7, #4]
 800614e:	2290      	movs	r2, #144	; 0x90
 8006150:	589b      	ldr	r3, [r3, r2]
 8006152:	2b00      	cmp	r3, #0
 8006154:	d007      	beq.n	8006166 <UART_RxISR_8BIT_FIFOEN+0x12a>
 8006156:	687b      	ldr	r3, [r7, #4]
 8006158:	0018      	movs	r0, r3
 800615a:	f7ff f8e5 	bl	8005328 <HAL_UART_ErrorCallback>
 800615e:	687b      	ldr	r3, [r7, #4]
 8006160:	2290      	movs	r2, #144	; 0x90
 8006162:	2100      	movs	r1, #0
 8006164:	5099      	str	r1, [r3, r2]
 8006166:	687b      	ldr	r3, [r7, #4]
 8006168:	225e      	movs	r2, #94	; 0x5e
 800616a:	5a9b      	ldrh	r3, [r3, r2]
 800616c:	b29b      	uxth	r3, r3
 800616e:	2b00      	cmp	r3, #0
 8006170:	d173      	bne.n	800625a <UART_RxISR_8BIT_FIFOEN+0x21e>
 8006172:	f3ef 8310 	mrs	r3, PRIMASK
 8006176:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006178:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800617a:	65bb      	str	r3, [r7, #88]	; 0x58
 800617c:	2301      	movs	r3, #1
 800617e:	633b      	str	r3, [r7, #48]	; 0x30
 8006180:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006182:	f383 8810 	msr	PRIMASK, r3
 8006186:	46c0      	nop			; (mov r8, r8)
 8006188:	687b      	ldr	r3, [r7, #4]
 800618a:	681b      	ldr	r3, [r3, #0]
 800618c:	681a      	ldr	r2, [r3, #0]
 800618e:	687b      	ldr	r3, [r7, #4]
 8006190:	681b      	ldr	r3, [r3, #0]
 8006192:	4961      	ldr	r1, [pc, #388]	; (8006318 <UART_RxISR_8BIT_FIFOEN+0x2dc>)
 8006194:	400a      	ands	r2, r1
 8006196:	601a      	str	r2, [r3, #0]
 8006198:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800619a:	637b      	str	r3, [r7, #52]	; 0x34
 800619c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800619e:	f383 8810 	msr	PRIMASK, r3
 80061a2:	46c0      	nop			; (mov r8, r8)
 80061a4:	f3ef 8310 	mrs	r3, PRIMASK
 80061a8:	63bb      	str	r3, [r7, #56]	; 0x38
 80061aa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80061ac:	657b      	str	r3, [r7, #84]	; 0x54
 80061ae:	2301      	movs	r3, #1
 80061b0:	63fb      	str	r3, [r7, #60]	; 0x3c
 80061b2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80061b4:	f383 8810 	msr	PRIMASK, r3
 80061b8:	46c0      	nop			; (mov r8, r8)
 80061ba:	687b      	ldr	r3, [r7, #4]
 80061bc:	681b      	ldr	r3, [r3, #0]
 80061be:	689a      	ldr	r2, [r3, #8]
 80061c0:	687b      	ldr	r3, [r7, #4]
 80061c2:	681b      	ldr	r3, [r3, #0]
 80061c4:	4955      	ldr	r1, [pc, #340]	; (800631c <UART_RxISR_8BIT_FIFOEN+0x2e0>)
 80061c6:	400a      	ands	r2, r1
 80061c8:	609a      	str	r2, [r3, #8]
 80061ca:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80061cc:	643b      	str	r3, [r7, #64]	; 0x40
 80061ce:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80061d0:	f383 8810 	msr	PRIMASK, r3
 80061d4:	46c0      	nop			; (mov r8, r8)
 80061d6:	687b      	ldr	r3, [r7, #4]
 80061d8:	228c      	movs	r2, #140	; 0x8c
 80061da:	2120      	movs	r1, #32
 80061dc:	5099      	str	r1, [r3, r2]
 80061de:	687b      	ldr	r3, [r7, #4]
 80061e0:	2200      	movs	r2, #0
 80061e2:	675a      	str	r2, [r3, #116]	; 0x74
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	2200      	movs	r2, #0
 80061e8:	671a      	str	r2, [r3, #112]	; 0x70
 80061ea:	687b      	ldr	r3, [r7, #4]
 80061ec:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80061ee:	2b01      	cmp	r3, #1
 80061f0:	d12f      	bne.n	8006252 <UART_RxISR_8BIT_FIFOEN+0x216>
 80061f2:	687b      	ldr	r3, [r7, #4]
 80061f4:	2200      	movs	r2, #0
 80061f6:	66da      	str	r2, [r3, #108]	; 0x6c
 80061f8:	f3ef 8310 	mrs	r3, PRIMASK
 80061fc:	623b      	str	r3, [r7, #32]
 80061fe:	6a3b      	ldr	r3, [r7, #32]
 8006200:	653b      	str	r3, [r7, #80]	; 0x50
 8006202:	2301      	movs	r3, #1
 8006204:	627b      	str	r3, [r7, #36]	; 0x24
 8006206:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006208:	f383 8810 	msr	PRIMASK, r3
 800620c:	46c0      	nop			; (mov r8, r8)
 800620e:	687b      	ldr	r3, [r7, #4]
 8006210:	681b      	ldr	r3, [r3, #0]
 8006212:	681a      	ldr	r2, [r3, #0]
 8006214:	687b      	ldr	r3, [r7, #4]
 8006216:	681b      	ldr	r3, [r3, #0]
 8006218:	2110      	movs	r1, #16
 800621a:	438a      	bics	r2, r1
 800621c:	601a      	str	r2, [r3, #0]
 800621e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8006220:	62bb      	str	r3, [r7, #40]	; 0x28
 8006222:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006224:	f383 8810 	msr	PRIMASK, r3
 8006228:	46c0      	nop			; (mov r8, r8)
 800622a:	687b      	ldr	r3, [r7, #4]
 800622c:	681b      	ldr	r3, [r3, #0]
 800622e:	69db      	ldr	r3, [r3, #28]
 8006230:	2210      	movs	r2, #16
 8006232:	4013      	ands	r3, r2
 8006234:	2b10      	cmp	r3, #16
 8006236:	d103      	bne.n	8006240 <UART_RxISR_8BIT_FIFOEN+0x204>
 8006238:	687b      	ldr	r3, [r7, #4]
 800623a:	681b      	ldr	r3, [r3, #0]
 800623c:	2210      	movs	r2, #16
 800623e:	621a      	str	r2, [r3, #32]
 8006240:	687b      	ldr	r3, [r7, #4]
 8006242:	225c      	movs	r2, #92	; 0x5c
 8006244:	5a9a      	ldrh	r2, [r3, r2]
 8006246:	687b      	ldr	r3, [r7, #4]
 8006248:	0011      	movs	r1, r2
 800624a:	0018      	movs	r0, r3
 800624c:	f7ff f874 	bl	8005338 <HAL_UARTEx_RxEventCallback>
 8006250:	e003      	b.n	800625a <UART_RxISR_8BIT_FIFOEN+0x21e>
 8006252:	687b      	ldr	r3, [r7, #4]
 8006254:	0018      	movs	r0, r3
 8006256:	f7fb fc55 	bl	8001b04 <HAL_UART_RxCpltCallback>
 800625a:	235e      	movs	r3, #94	; 0x5e
 800625c:	18fb      	adds	r3, r7, r3
 800625e:	881b      	ldrh	r3, [r3, #0]
 8006260:	2b00      	cmp	r3, #0
 8006262:	d004      	beq.n	800626e <UART_RxISR_8BIT_FIFOEN+0x232>
 8006264:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006266:	2220      	movs	r2, #32
 8006268:	4013      	ands	r3, r2
 800626a:	d000      	beq.n	800626e <UART_RxISR_8BIT_FIFOEN+0x232>
 800626c:	e709      	b.n	8006082 <UART_RxISR_8BIT_FIFOEN+0x46>
 800626e:	204e      	movs	r0, #78	; 0x4e
 8006270:	183b      	adds	r3, r7, r0
 8006272:	687a      	ldr	r2, [r7, #4]
 8006274:	215e      	movs	r1, #94	; 0x5e
 8006276:	5a52      	ldrh	r2, [r2, r1]
 8006278:	801a      	strh	r2, [r3, #0]
 800627a:	0001      	movs	r1, r0
 800627c:	187b      	adds	r3, r7, r1
 800627e:	881b      	ldrh	r3, [r3, #0]
 8006280:	2b00      	cmp	r3, #0
 8006282:	d044      	beq.n	800630e <UART_RxISR_8BIT_FIFOEN+0x2d2>
 8006284:	687b      	ldr	r3, [r7, #4]
 8006286:	2268      	movs	r2, #104	; 0x68
 8006288:	5a9b      	ldrh	r3, [r3, r2]
 800628a:	187a      	adds	r2, r7, r1
 800628c:	8812      	ldrh	r2, [r2, #0]
 800628e:	429a      	cmp	r2, r3
 8006290:	d23d      	bcs.n	800630e <UART_RxISR_8BIT_FIFOEN+0x2d2>
 8006292:	f3ef 8310 	mrs	r3, PRIMASK
 8006296:	60bb      	str	r3, [r7, #8]
 8006298:	68bb      	ldr	r3, [r7, #8]
 800629a:	64bb      	str	r3, [r7, #72]	; 0x48
 800629c:	2301      	movs	r3, #1
 800629e:	60fb      	str	r3, [r7, #12]
 80062a0:	68fb      	ldr	r3, [r7, #12]
 80062a2:	f383 8810 	msr	PRIMASK, r3
 80062a6:	46c0      	nop			; (mov r8, r8)
 80062a8:	687b      	ldr	r3, [r7, #4]
 80062aa:	681b      	ldr	r3, [r3, #0]
 80062ac:	689a      	ldr	r2, [r3, #8]
 80062ae:	687b      	ldr	r3, [r7, #4]
 80062b0:	681b      	ldr	r3, [r3, #0]
 80062b2:	491b      	ldr	r1, [pc, #108]	; (8006320 <UART_RxISR_8BIT_FIFOEN+0x2e4>)
 80062b4:	400a      	ands	r2, r1
 80062b6:	609a      	str	r2, [r3, #8]
 80062b8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80062ba:	613b      	str	r3, [r7, #16]
 80062bc:	693b      	ldr	r3, [r7, #16]
 80062be:	f383 8810 	msr	PRIMASK, r3
 80062c2:	46c0      	nop			; (mov r8, r8)
 80062c4:	687b      	ldr	r3, [r7, #4]
 80062c6:	4a17      	ldr	r2, [pc, #92]	; (8006324 <UART_RxISR_8BIT_FIFOEN+0x2e8>)
 80062c8:	675a      	str	r2, [r3, #116]	; 0x74
 80062ca:	f3ef 8310 	mrs	r3, PRIMASK
 80062ce:	617b      	str	r3, [r7, #20]
 80062d0:	697b      	ldr	r3, [r7, #20]
 80062d2:	647b      	str	r3, [r7, #68]	; 0x44
 80062d4:	2301      	movs	r3, #1
 80062d6:	61bb      	str	r3, [r7, #24]
 80062d8:	69bb      	ldr	r3, [r7, #24]
 80062da:	f383 8810 	msr	PRIMASK, r3
 80062de:	46c0      	nop			; (mov r8, r8)
 80062e0:	687b      	ldr	r3, [r7, #4]
 80062e2:	681b      	ldr	r3, [r3, #0]
 80062e4:	681a      	ldr	r2, [r3, #0]
 80062e6:	687b      	ldr	r3, [r7, #4]
 80062e8:	681b      	ldr	r3, [r3, #0]
 80062ea:	2120      	movs	r1, #32
 80062ec:	430a      	orrs	r2, r1
 80062ee:	601a      	str	r2, [r3, #0]
 80062f0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80062f2:	61fb      	str	r3, [r7, #28]
 80062f4:	69fb      	ldr	r3, [r7, #28]
 80062f6:	f383 8810 	msr	PRIMASK, r3
 80062fa:	46c0      	nop			; (mov r8, r8)
 80062fc:	e007      	b.n	800630e <UART_RxISR_8BIT_FIFOEN+0x2d2>
 80062fe:	687b      	ldr	r3, [r7, #4]
 8006300:	681b      	ldr	r3, [r3, #0]
 8006302:	699a      	ldr	r2, [r3, #24]
 8006304:	687b      	ldr	r3, [r7, #4]
 8006306:	681b      	ldr	r3, [r3, #0]
 8006308:	2108      	movs	r1, #8
 800630a:	430a      	orrs	r2, r1
 800630c:	619a      	str	r2, [r3, #24]
 800630e:	46c0      	nop			; (mov r8, r8)
 8006310:	46bd      	mov	sp, r7
 8006312:	b01c      	add	sp, #112	; 0x70
 8006314:	bd80      	pop	{r7, pc}
 8006316:	46c0      	nop			; (mov r8, r8)
 8006318:	fffffeff 	.word	0xfffffeff
 800631c:	effffffe 	.word	0xeffffffe
 8006320:	efffffff 	.word	0xefffffff
 8006324:	08005d55 	.word	0x08005d55

08006328 <UART_RxISR_16BIT_FIFOEN>:
 8006328:	b580      	push	{r7, lr}
 800632a:	b09e      	sub	sp, #120	; 0x78
 800632c:	af00      	add	r7, sp, #0
 800632e:	6078      	str	r0, [r7, #4]
 8006330:	2372      	movs	r3, #114	; 0x72
 8006332:	18fb      	adds	r3, r7, r3
 8006334:	687a      	ldr	r2, [r7, #4]
 8006336:	2160      	movs	r1, #96	; 0x60
 8006338:	5a52      	ldrh	r2, [r2, r1]
 800633a:	801a      	strh	r2, [r3, #0]
 800633c:	687b      	ldr	r3, [r7, #4]
 800633e:	681b      	ldr	r3, [r3, #0]
 8006340:	69db      	ldr	r3, [r3, #28]
 8006342:	677b      	str	r3, [r7, #116]	; 0x74
 8006344:	687b      	ldr	r3, [r7, #4]
 8006346:	681b      	ldr	r3, [r3, #0]
 8006348:	681b      	ldr	r3, [r3, #0]
 800634a:	66fb      	str	r3, [r7, #108]	; 0x6c
 800634c:	687b      	ldr	r3, [r7, #4]
 800634e:	681b      	ldr	r3, [r3, #0]
 8006350:	689b      	ldr	r3, [r3, #8]
 8006352:	66bb      	str	r3, [r7, #104]	; 0x68
 8006354:	687b      	ldr	r3, [r7, #4]
 8006356:	228c      	movs	r2, #140	; 0x8c
 8006358:	589b      	ldr	r3, [r3, r2]
 800635a:	2b22      	cmp	r3, #34	; 0x22
 800635c:	d000      	beq.n	8006360 <UART_RxISR_16BIT_FIFOEN+0x38>
 800635e:	e144      	b.n	80065ea <UART_RxISR_16BIT_FIFOEN+0x2c2>
 8006360:	2366      	movs	r3, #102	; 0x66
 8006362:	18fb      	adds	r3, r7, r3
 8006364:	687a      	ldr	r2, [r7, #4]
 8006366:	2168      	movs	r1, #104	; 0x68
 8006368:	5a52      	ldrh	r2, [r2, r1]
 800636a:	801a      	strh	r2, [r3, #0]
 800636c:	e0eb      	b.n	8006546 <UART_RxISR_16BIT_FIFOEN+0x21e>
 800636e:	687b      	ldr	r3, [r7, #4]
 8006370:	681b      	ldr	r3, [r3, #0]
 8006372:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006374:	2164      	movs	r1, #100	; 0x64
 8006376:	187b      	adds	r3, r7, r1
 8006378:	801a      	strh	r2, [r3, #0]
 800637a:	687b      	ldr	r3, [r7, #4]
 800637c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800637e:	663b      	str	r3, [r7, #96]	; 0x60
 8006380:	187b      	adds	r3, r7, r1
 8006382:	2272      	movs	r2, #114	; 0x72
 8006384:	18ba      	adds	r2, r7, r2
 8006386:	881b      	ldrh	r3, [r3, #0]
 8006388:	8812      	ldrh	r2, [r2, #0]
 800638a:	4013      	ands	r3, r2
 800638c:	b29a      	uxth	r2, r3
 800638e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8006390:	801a      	strh	r2, [r3, #0]
 8006392:	687b      	ldr	r3, [r7, #4]
 8006394:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006396:	1c9a      	adds	r2, r3, #2
 8006398:	687b      	ldr	r3, [r7, #4]
 800639a:	659a      	str	r2, [r3, #88]	; 0x58
 800639c:	687b      	ldr	r3, [r7, #4]
 800639e:	225e      	movs	r2, #94	; 0x5e
 80063a0:	5a9b      	ldrh	r3, [r3, r2]
 80063a2:	b29b      	uxth	r3, r3
 80063a4:	3b01      	subs	r3, #1
 80063a6:	b299      	uxth	r1, r3
 80063a8:	687b      	ldr	r3, [r7, #4]
 80063aa:	225e      	movs	r2, #94	; 0x5e
 80063ac:	5299      	strh	r1, [r3, r2]
 80063ae:	687b      	ldr	r3, [r7, #4]
 80063b0:	681b      	ldr	r3, [r3, #0]
 80063b2:	69db      	ldr	r3, [r3, #28]
 80063b4:	677b      	str	r3, [r7, #116]	; 0x74
 80063b6:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80063b8:	2207      	movs	r2, #7
 80063ba:	4013      	ands	r3, r2
 80063bc:	d049      	beq.n	8006452 <UART_RxISR_16BIT_FIFOEN+0x12a>
 80063be:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80063c0:	2201      	movs	r2, #1
 80063c2:	4013      	ands	r3, r2
 80063c4:	d010      	beq.n	80063e8 <UART_RxISR_16BIT_FIFOEN+0xc0>
 80063c6:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80063c8:	2380      	movs	r3, #128	; 0x80
 80063ca:	005b      	lsls	r3, r3, #1
 80063cc:	4013      	ands	r3, r2
 80063ce:	d00b      	beq.n	80063e8 <UART_RxISR_16BIT_FIFOEN+0xc0>
 80063d0:	687b      	ldr	r3, [r7, #4]
 80063d2:	681b      	ldr	r3, [r3, #0]
 80063d4:	2201      	movs	r2, #1
 80063d6:	621a      	str	r2, [r3, #32]
 80063d8:	687b      	ldr	r3, [r7, #4]
 80063da:	2290      	movs	r2, #144	; 0x90
 80063dc:	589b      	ldr	r3, [r3, r2]
 80063de:	2201      	movs	r2, #1
 80063e0:	431a      	orrs	r2, r3
 80063e2:	687b      	ldr	r3, [r7, #4]
 80063e4:	2190      	movs	r1, #144	; 0x90
 80063e6:	505a      	str	r2, [r3, r1]
 80063e8:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80063ea:	2202      	movs	r2, #2
 80063ec:	4013      	ands	r3, r2
 80063ee:	d00f      	beq.n	8006410 <UART_RxISR_16BIT_FIFOEN+0xe8>
 80063f0:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80063f2:	2201      	movs	r2, #1
 80063f4:	4013      	ands	r3, r2
 80063f6:	d00b      	beq.n	8006410 <UART_RxISR_16BIT_FIFOEN+0xe8>
 80063f8:	687b      	ldr	r3, [r7, #4]
 80063fa:	681b      	ldr	r3, [r3, #0]
 80063fc:	2202      	movs	r2, #2
 80063fe:	621a      	str	r2, [r3, #32]
 8006400:	687b      	ldr	r3, [r7, #4]
 8006402:	2290      	movs	r2, #144	; 0x90
 8006404:	589b      	ldr	r3, [r3, r2]
 8006406:	2204      	movs	r2, #4
 8006408:	431a      	orrs	r2, r3
 800640a:	687b      	ldr	r3, [r7, #4]
 800640c:	2190      	movs	r1, #144	; 0x90
 800640e:	505a      	str	r2, [r3, r1]
 8006410:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8006412:	2204      	movs	r2, #4
 8006414:	4013      	ands	r3, r2
 8006416:	d00f      	beq.n	8006438 <UART_RxISR_16BIT_FIFOEN+0x110>
 8006418:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800641a:	2201      	movs	r2, #1
 800641c:	4013      	ands	r3, r2
 800641e:	d00b      	beq.n	8006438 <UART_RxISR_16BIT_FIFOEN+0x110>
 8006420:	687b      	ldr	r3, [r7, #4]
 8006422:	681b      	ldr	r3, [r3, #0]
 8006424:	2204      	movs	r2, #4
 8006426:	621a      	str	r2, [r3, #32]
 8006428:	687b      	ldr	r3, [r7, #4]
 800642a:	2290      	movs	r2, #144	; 0x90
 800642c:	589b      	ldr	r3, [r3, r2]
 800642e:	2202      	movs	r2, #2
 8006430:	431a      	orrs	r2, r3
 8006432:	687b      	ldr	r3, [r7, #4]
 8006434:	2190      	movs	r1, #144	; 0x90
 8006436:	505a      	str	r2, [r3, r1]
 8006438:	687b      	ldr	r3, [r7, #4]
 800643a:	2290      	movs	r2, #144	; 0x90
 800643c:	589b      	ldr	r3, [r3, r2]
 800643e:	2b00      	cmp	r3, #0
 8006440:	d007      	beq.n	8006452 <UART_RxISR_16BIT_FIFOEN+0x12a>
 8006442:	687b      	ldr	r3, [r7, #4]
 8006444:	0018      	movs	r0, r3
 8006446:	f7fe ff6f 	bl	8005328 <HAL_UART_ErrorCallback>
 800644a:	687b      	ldr	r3, [r7, #4]
 800644c:	2290      	movs	r2, #144	; 0x90
 800644e:	2100      	movs	r1, #0
 8006450:	5099      	str	r1, [r3, r2]
 8006452:	687b      	ldr	r3, [r7, #4]
 8006454:	225e      	movs	r2, #94	; 0x5e
 8006456:	5a9b      	ldrh	r3, [r3, r2]
 8006458:	b29b      	uxth	r3, r3
 800645a:	2b00      	cmp	r3, #0
 800645c:	d173      	bne.n	8006546 <UART_RxISR_16BIT_FIFOEN+0x21e>
 800645e:	f3ef 8310 	mrs	r3, PRIMASK
 8006462:	633b      	str	r3, [r7, #48]	; 0x30
 8006464:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006466:	65fb      	str	r3, [r7, #92]	; 0x5c
 8006468:	2301      	movs	r3, #1
 800646a:	637b      	str	r3, [r7, #52]	; 0x34
 800646c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800646e:	f383 8810 	msr	PRIMASK, r3
 8006472:	46c0      	nop			; (mov r8, r8)
 8006474:	687b      	ldr	r3, [r7, #4]
 8006476:	681b      	ldr	r3, [r3, #0]
 8006478:	681a      	ldr	r2, [r3, #0]
 800647a:	687b      	ldr	r3, [r7, #4]
 800647c:	681b      	ldr	r3, [r3, #0]
 800647e:	4961      	ldr	r1, [pc, #388]	; (8006604 <UART_RxISR_16BIT_FIFOEN+0x2dc>)
 8006480:	400a      	ands	r2, r1
 8006482:	601a      	str	r2, [r3, #0]
 8006484:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8006486:	63bb      	str	r3, [r7, #56]	; 0x38
 8006488:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800648a:	f383 8810 	msr	PRIMASK, r3
 800648e:	46c0      	nop			; (mov r8, r8)
 8006490:	f3ef 8310 	mrs	r3, PRIMASK
 8006494:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006496:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006498:	65bb      	str	r3, [r7, #88]	; 0x58
 800649a:	2301      	movs	r3, #1
 800649c:	643b      	str	r3, [r7, #64]	; 0x40
 800649e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80064a0:	f383 8810 	msr	PRIMASK, r3
 80064a4:	46c0      	nop			; (mov r8, r8)
 80064a6:	687b      	ldr	r3, [r7, #4]
 80064a8:	681b      	ldr	r3, [r3, #0]
 80064aa:	689a      	ldr	r2, [r3, #8]
 80064ac:	687b      	ldr	r3, [r7, #4]
 80064ae:	681b      	ldr	r3, [r3, #0]
 80064b0:	4955      	ldr	r1, [pc, #340]	; (8006608 <UART_RxISR_16BIT_FIFOEN+0x2e0>)
 80064b2:	400a      	ands	r2, r1
 80064b4:	609a      	str	r2, [r3, #8]
 80064b6:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80064b8:	647b      	str	r3, [r7, #68]	; 0x44
 80064ba:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80064bc:	f383 8810 	msr	PRIMASK, r3
 80064c0:	46c0      	nop			; (mov r8, r8)
 80064c2:	687b      	ldr	r3, [r7, #4]
 80064c4:	228c      	movs	r2, #140	; 0x8c
 80064c6:	2120      	movs	r1, #32
 80064c8:	5099      	str	r1, [r3, r2]
 80064ca:	687b      	ldr	r3, [r7, #4]
 80064cc:	2200      	movs	r2, #0
 80064ce:	675a      	str	r2, [r3, #116]	; 0x74
 80064d0:	687b      	ldr	r3, [r7, #4]
 80064d2:	2200      	movs	r2, #0
 80064d4:	671a      	str	r2, [r3, #112]	; 0x70
 80064d6:	687b      	ldr	r3, [r7, #4]
 80064d8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80064da:	2b01      	cmp	r3, #1
 80064dc:	d12f      	bne.n	800653e <UART_RxISR_16BIT_FIFOEN+0x216>
 80064de:	687b      	ldr	r3, [r7, #4]
 80064e0:	2200      	movs	r2, #0
 80064e2:	66da      	str	r2, [r3, #108]	; 0x6c
 80064e4:	f3ef 8310 	mrs	r3, PRIMASK
 80064e8:	627b      	str	r3, [r7, #36]	; 0x24
 80064ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80064ec:	657b      	str	r3, [r7, #84]	; 0x54
 80064ee:	2301      	movs	r3, #1
 80064f0:	62bb      	str	r3, [r7, #40]	; 0x28
 80064f2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80064f4:	f383 8810 	msr	PRIMASK, r3
 80064f8:	46c0      	nop			; (mov r8, r8)
 80064fa:	687b      	ldr	r3, [r7, #4]
 80064fc:	681b      	ldr	r3, [r3, #0]
 80064fe:	681a      	ldr	r2, [r3, #0]
 8006500:	687b      	ldr	r3, [r7, #4]
 8006502:	681b      	ldr	r3, [r3, #0]
 8006504:	2110      	movs	r1, #16
 8006506:	438a      	bics	r2, r1
 8006508:	601a      	str	r2, [r3, #0]
 800650a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800650c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800650e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006510:	f383 8810 	msr	PRIMASK, r3
 8006514:	46c0      	nop			; (mov r8, r8)
 8006516:	687b      	ldr	r3, [r7, #4]
 8006518:	681b      	ldr	r3, [r3, #0]
 800651a:	69db      	ldr	r3, [r3, #28]
 800651c:	2210      	movs	r2, #16
 800651e:	4013      	ands	r3, r2
 8006520:	2b10      	cmp	r3, #16
 8006522:	d103      	bne.n	800652c <UART_RxISR_16BIT_FIFOEN+0x204>
 8006524:	687b      	ldr	r3, [r7, #4]
 8006526:	681b      	ldr	r3, [r3, #0]
 8006528:	2210      	movs	r2, #16
 800652a:	621a      	str	r2, [r3, #32]
 800652c:	687b      	ldr	r3, [r7, #4]
 800652e:	225c      	movs	r2, #92	; 0x5c
 8006530:	5a9a      	ldrh	r2, [r3, r2]
 8006532:	687b      	ldr	r3, [r7, #4]
 8006534:	0011      	movs	r1, r2
 8006536:	0018      	movs	r0, r3
 8006538:	f7fe fefe 	bl	8005338 <HAL_UARTEx_RxEventCallback>
 800653c:	e003      	b.n	8006546 <UART_RxISR_16BIT_FIFOEN+0x21e>
 800653e:	687b      	ldr	r3, [r7, #4]
 8006540:	0018      	movs	r0, r3
 8006542:	f7fb fadf 	bl	8001b04 <HAL_UART_RxCpltCallback>
 8006546:	2366      	movs	r3, #102	; 0x66
 8006548:	18fb      	adds	r3, r7, r3
 800654a:	881b      	ldrh	r3, [r3, #0]
 800654c:	2b00      	cmp	r3, #0
 800654e:	d004      	beq.n	800655a <UART_RxISR_16BIT_FIFOEN+0x232>
 8006550:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8006552:	2220      	movs	r2, #32
 8006554:	4013      	ands	r3, r2
 8006556:	d000      	beq.n	800655a <UART_RxISR_16BIT_FIFOEN+0x232>
 8006558:	e709      	b.n	800636e <UART_RxISR_16BIT_FIFOEN+0x46>
 800655a:	2052      	movs	r0, #82	; 0x52
 800655c:	183b      	adds	r3, r7, r0
 800655e:	687a      	ldr	r2, [r7, #4]
 8006560:	215e      	movs	r1, #94	; 0x5e
 8006562:	5a52      	ldrh	r2, [r2, r1]
 8006564:	801a      	strh	r2, [r3, #0]
 8006566:	0001      	movs	r1, r0
 8006568:	187b      	adds	r3, r7, r1
 800656a:	881b      	ldrh	r3, [r3, #0]
 800656c:	2b00      	cmp	r3, #0
 800656e:	d044      	beq.n	80065fa <UART_RxISR_16BIT_FIFOEN+0x2d2>
 8006570:	687b      	ldr	r3, [r7, #4]
 8006572:	2268      	movs	r2, #104	; 0x68
 8006574:	5a9b      	ldrh	r3, [r3, r2]
 8006576:	187a      	adds	r2, r7, r1
 8006578:	8812      	ldrh	r2, [r2, #0]
 800657a:	429a      	cmp	r2, r3
 800657c:	d23d      	bcs.n	80065fa <UART_RxISR_16BIT_FIFOEN+0x2d2>
 800657e:	f3ef 8310 	mrs	r3, PRIMASK
 8006582:	60fb      	str	r3, [r7, #12]
 8006584:	68fb      	ldr	r3, [r7, #12]
 8006586:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006588:	2301      	movs	r3, #1
 800658a:	613b      	str	r3, [r7, #16]
 800658c:	693b      	ldr	r3, [r7, #16]
 800658e:	f383 8810 	msr	PRIMASK, r3
 8006592:	46c0      	nop			; (mov r8, r8)
 8006594:	687b      	ldr	r3, [r7, #4]
 8006596:	681b      	ldr	r3, [r3, #0]
 8006598:	689a      	ldr	r2, [r3, #8]
 800659a:	687b      	ldr	r3, [r7, #4]
 800659c:	681b      	ldr	r3, [r3, #0]
 800659e:	491b      	ldr	r1, [pc, #108]	; (800660c <UART_RxISR_16BIT_FIFOEN+0x2e4>)
 80065a0:	400a      	ands	r2, r1
 80065a2:	609a      	str	r2, [r3, #8]
 80065a4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80065a6:	617b      	str	r3, [r7, #20]
 80065a8:	697b      	ldr	r3, [r7, #20]
 80065aa:	f383 8810 	msr	PRIMASK, r3
 80065ae:	46c0      	nop			; (mov r8, r8)
 80065b0:	687b      	ldr	r3, [r7, #4]
 80065b2:	4a17      	ldr	r2, [pc, #92]	; (8006610 <UART_RxISR_16BIT_FIFOEN+0x2e8>)
 80065b4:	675a      	str	r2, [r3, #116]	; 0x74
 80065b6:	f3ef 8310 	mrs	r3, PRIMASK
 80065ba:	61bb      	str	r3, [r7, #24]
 80065bc:	69bb      	ldr	r3, [r7, #24]
 80065be:	64bb      	str	r3, [r7, #72]	; 0x48
 80065c0:	2301      	movs	r3, #1
 80065c2:	61fb      	str	r3, [r7, #28]
 80065c4:	69fb      	ldr	r3, [r7, #28]
 80065c6:	f383 8810 	msr	PRIMASK, r3
 80065ca:	46c0      	nop			; (mov r8, r8)
 80065cc:	687b      	ldr	r3, [r7, #4]
 80065ce:	681b      	ldr	r3, [r3, #0]
 80065d0:	681a      	ldr	r2, [r3, #0]
 80065d2:	687b      	ldr	r3, [r7, #4]
 80065d4:	681b      	ldr	r3, [r3, #0]
 80065d6:	2120      	movs	r1, #32
 80065d8:	430a      	orrs	r2, r1
 80065da:	601a      	str	r2, [r3, #0]
 80065dc:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80065de:	623b      	str	r3, [r7, #32]
 80065e0:	6a3b      	ldr	r3, [r7, #32]
 80065e2:	f383 8810 	msr	PRIMASK, r3
 80065e6:	46c0      	nop			; (mov r8, r8)
 80065e8:	e007      	b.n	80065fa <UART_RxISR_16BIT_FIFOEN+0x2d2>
 80065ea:	687b      	ldr	r3, [r7, #4]
 80065ec:	681b      	ldr	r3, [r3, #0]
 80065ee:	699a      	ldr	r2, [r3, #24]
 80065f0:	687b      	ldr	r3, [r7, #4]
 80065f2:	681b      	ldr	r3, [r3, #0]
 80065f4:	2108      	movs	r1, #8
 80065f6:	430a      	orrs	r2, r1
 80065f8:	619a      	str	r2, [r3, #24]
 80065fa:	46c0      	nop			; (mov r8, r8)
 80065fc:	46bd      	mov	sp, r7
 80065fe:	b01e      	add	sp, #120	; 0x78
 8006600:	bd80      	pop	{r7, pc}
 8006602:	46c0      	nop			; (mov r8, r8)
 8006604:	fffffeff 	.word	0xfffffeff
 8006608:	effffffe 	.word	0xeffffffe
 800660c:	efffffff 	.word	0xefffffff
 8006610:	08005ec9 	.word	0x08005ec9

08006614 <HAL_UARTEx_WakeupCallback>:
 8006614:	b580      	push	{r7, lr}
 8006616:	b082      	sub	sp, #8
 8006618:	af00      	add	r7, sp, #0
 800661a:	6078      	str	r0, [r7, #4]
 800661c:	46c0      	nop			; (mov r8, r8)
 800661e:	46bd      	mov	sp, r7
 8006620:	b002      	add	sp, #8
 8006622:	bd80      	pop	{r7, pc}

08006624 <HAL_UARTEx_RxFifoFullCallback>:
 8006624:	b580      	push	{r7, lr}
 8006626:	b082      	sub	sp, #8
 8006628:	af00      	add	r7, sp, #0
 800662a:	6078      	str	r0, [r7, #4]
 800662c:	46c0      	nop			; (mov r8, r8)
 800662e:	46bd      	mov	sp, r7
 8006630:	b002      	add	sp, #8
 8006632:	bd80      	pop	{r7, pc}

08006634 <HAL_UARTEx_TxFifoEmptyCallback>:
 8006634:	b580      	push	{r7, lr}
 8006636:	b082      	sub	sp, #8
 8006638:	af00      	add	r7, sp, #0
 800663a:	6078      	str	r0, [r7, #4]
 800663c:	46c0      	nop			; (mov r8, r8)
 800663e:	46bd      	mov	sp, r7
 8006640:	b002      	add	sp, #8
 8006642:	bd80      	pop	{r7, pc}

08006644 <HAL_UARTEx_DisableFifoMode>:
 8006644:	b580      	push	{r7, lr}
 8006646:	b084      	sub	sp, #16
 8006648:	af00      	add	r7, sp, #0
 800664a:	6078      	str	r0, [r7, #4]
 800664c:	687b      	ldr	r3, [r7, #4]
 800664e:	2284      	movs	r2, #132	; 0x84
 8006650:	5c9b      	ldrb	r3, [r3, r2]
 8006652:	2b01      	cmp	r3, #1
 8006654:	d101      	bne.n	800665a <HAL_UARTEx_DisableFifoMode+0x16>
 8006656:	2302      	movs	r3, #2
 8006658:	e027      	b.n	80066aa <HAL_UARTEx_DisableFifoMode+0x66>
 800665a:	687b      	ldr	r3, [r7, #4]
 800665c:	2284      	movs	r2, #132	; 0x84
 800665e:	2101      	movs	r1, #1
 8006660:	5499      	strb	r1, [r3, r2]
 8006662:	687b      	ldr	r3, [r7, #4]
 8006664:	2288      	movs	r2, #136	; 0x88
 8006666:	2124      	movs	r1, #36	; 0x24
 8006668:	5099      	str	r1, [r3, r2]
 800666a:	687b      	ldr	r3, [r7, #4]
 800666c:	681b      	ldr	r3, [r3, #0]
 800666e:	681b      	ldr	r3, [r3, #0]
 8006670:	60fb      	str	r3, [r7, #12]
 8006672:	687b      	ldr	r3, [r7, #4]
 8006674:	681b      	ldr	r3, [r3, #0]
 8006676:	681a      	ldr	r2, [r3, #0]
 8006678:	687b      	ldr	r3, [r7, #4]
 800667a:	681b      	ldr	r3, [r3, #0]
 800667c:	2101      	movs	r1, #1
 800667e:	438a      	bics	r2, r1
 8006680:	601a      	str	r2, [r3, #0]
 8006682:	68fb      	ldr	r3, [r7, #12]
 8006684:	4a0b      	ldr	r2, [pc, #44]	; (80066b4 <HAL_UARTEx_DisableFifoMode+0x70>)
 8006686:	4013      	ands	r3, r2
 8006688:	60fb      	str	r3, [r7, #12]
 800668a:	687b      	ldr	r3, [r7, #4]
 800668c:	2200      	movs	r2, #0
 800668e:	665a      	str	r2, [r3, #100]	; 0x64
 8006690:	687b      	ldr	r3, [r7, #4]
 8006692:	681b      	ldr	r3, [r3, #0]
 8006694:	68fa      	ldr	r2, [r7, #12]
 8006696:	601a      	str	r2, [r3, #0]
 8006698:	687b      	ldr	r3, [r7, #4]
 800669a:	2288      	movs	r2, #136	; 0x88
 800669c:	2120      	movs	r1, #32
 800669e:	5099      	str	r1, [r3, r2]
 80066a0:	687b      	ldr	r3, [r7, #4]
 80066a2:	2284      	movs	r2, #132	; 0x84
 80066a4:	2100      	movs	r1, #0
 80066a6:	5499      	strb	r1, [r3, r2]
 80066a8:	2300      	movs	r3, #0
 80066aa:	0018      	movs	r0, r3
 80066ac:	46bd      	mov	sp, r7
 80066ae:	b004      	add	sp, #16
 80066b0:	bd80      	pop	{r7, pc}
 80066b2:	46c0      	nop			; (mov r8, r8)
 80066b4:	dfffffff 	.word	0xdfffffff

080066b8 <HAL_UARTEx_SetTxFifoThreshold>:
 80066b8:	b580      	push	{r7, lr}
 80066ba:	b084      	sub	sp, #16
 80066bc:	af00      	add	r7, sp, #0
 80066be:	6078      	str	r0, [r7, #4]
 80066c0:	6039      	str	r1, [r7, #0]
 80066c2:	687b      	ldr	r3, [r7, #4]
 80066c4:	2284      	movs	r2, #132	; 0x84
 80066c6:	5c9b      	ldrb	r3, [r3, r2]
 80066c8:	2b01      	cmp	r3, #1
 80066ca:	d101      	bne.n	80066d0 <HAL_UARTEx_SetTxFifoThreshold+0x18>
 80066cc:	2302      	movs	r3, #2
 80066ce:	e02e      	b.n	800672e <HAL_UARTEx_SetTxFifoThreshold+0x76>
 80066d0:	687b      	ldr	r3, [r7, #4]
 80066d2:	2284      	movs	r2, #132	; 0x84
 80066d4:	2101      	movs	r1, #1
 80066d6:	5499      	strb	r1, [r3, r2]
 80066d8:	687b      	ldr	r3, [r7, #4]
 80066da:	2288      	movs	r2, #136	; 0x88
 80066dc:	2124      	movs	r1, #36	; 0x24
 80066de:	5099      	str	r1, [r3, r2]
 80066e0:	687b      	ldr	r3, [r7, #4]
 80066e2:	681b      	ldr	r3, [r3, #0]
 80066e4:	681b      	ldr	r3, [r3, #0]
 80066e6:	60fb      	str	r3, [r7, #12]
 80066e8:	687b      	ldr	r3, [r7, #4]
 80066ea:	681b      	ldr	r3, [r3, #0]
 80066ec:	681a      	ldr	r2, [r3, #0]
 80066ee:	687b      	ldr	r3, [r7, #4]
 80066f0:	681b      	ldr	r3, [r3, #0]
 80066f2:	2101      	movs	r1, #1
 80066f4:	438a      	bics	r2, r1
 80066f6:	601a      	str	r2, [r3, #0]
 80066f8:	687b      	ldr	r3, [r7, #4]
 80066fa:	681b      	ldr	r3, [r3, #0]
 80066fc:	689b      	ldr	r3, [r3, #8]
 80066fe:	00db      	lsls	r3, r3, #3
 8006700:	08d9      	lsrs	r1, r3, #3
 8006702:	687b      	ldr	r3, [r7, #4]
 8006704:	681b      	ldr	r3, [r3, #0]
 8006706:	683a      	ldr	r2, [r7, #0]
 8006708:	430a      	orrs	r2, r1
 800670a:	609a      	str	r2, [r3, #8]
 800670c:	687b      	ldr	r3, [r7, #4]
 800670e:	0018      	movs	r0, r3
 8006710:	f000 f854 	bl	80067bc <UARTEx_SetNbDataToProcess>
 8006714:	687b      	ldr	r3, [r7, #4]
 8006716:	681b      	ldr	r3, [r3, #0]
 8006718:	68fa      	ldr	r2, [r7, #12]
 800671a:	601a      	str	r2, [r3, #0]
 800671c:	687b      	ldr	r3, [r7, #4]
 800671e:	2288      	movs	r2, #136	; 0x88
 8006720:	2120      	movs	r1, #32
 8006722:	5099      	str	r1, [r3, r2]
 8006724:	687b      	ldr	r3, [r7, #4]
 8006726:	2284      	movs	r2, #132	; 0x84
 8006728:	2100      	movs	r1, #0
 800672a:	5499      	strb	r1, [r3, r2]
 800672c:	2300      	movs	r3, #0
 800672e:	0018      	movs	r0, r3
 8006730:	46bd      	mov	sp, r7
 8006732:	b004      	add	sp, #16
 8006734:	bd80      	pop	{r7, pc}
	...

08006738 <HAL_UARTEx_SetRxFifoThreshold>:
 8006738:	b580      	push	{r7, lr}
 800673a:	b084      	sub	sp, #16
 800673c:	af00      	add	r7, sp, #0
 800673e:	6078      	str	r0, [r7, #4]
 8006740:	6039      	str	r1, [r7, #0]
 8006742:	687b      	ldr	r3, [r7, #4]
 8006744:	2284      	movs	r2, #132	; 0x84
 8006746:	5c9b      	ldrb	r3, [r3, r2]
 8006748:	2b01      	cmp	r3, #1
 800674a:	d101      	bne.n	8006750 <HAL_UARTEx_SetRxFifoThreshold+0x18>
 800674c:	2302      	movs	r3, #2
 800674e:	e02f      	b.n	80067b0 <HAL_UARTEx_SetRxFifoThreshold+0x78>
 8006750:	687b      	ldr	r3, [r7, #4]
 8006752:	2284      	movs	r2, #132	; 0x84
 8006754:	2101      	movs	r1, #1
 8006756:	5499      	strb	r1, [r3, r2]
 8006758:	687b      	ldr	r3, [r7, #4]
 800675a:	2288      	movs	r2, #136	; 0x88
 800675c:	2124      	movs	r1, #36	; 0x24
 800675e:	5099      	str	r1, [r3, r2]
 8006760:	687b      	ldr	r3, [r7, #4]
 8006762:	681b      	ldr	r3, [r3, #0]
 8006764:	681b      	ldr	r3, [r3, #0]
 8006766:	60fb      	str	r3, [r7, #12]
 8006768:	687b      	ldr	r3, [r7, #4]
 800676a:	681b      	ldr	r3, [r3, #0]
 800676c:	681a      	ldr	r2, [r3, #0]
 800676e:	687b      	ldr	r3, [r7, #4]
 8006770:	681b      	ldr	r3, [r3, #0]
 8006772:	2101      	movs	r1, #1
 8006774:	438a      	bics	r2, r1
 8006776:	601a      	str	r2, [r3, #0]
 8006778:	687b      	ldr	r3, [r7, #4]
 800677a:	681b      	ldr	r3, [r3, #0]
 800677c:	689b      	ldr	r3, [r3, #8]
 800677e:	4a0e      	ldr	r2, [pc, #56]	; (80067b8 <HAL_UARTEx_SetRxFifoThreshold+0x80>)
 8006780:	4013      	ands	r3, r2
 8006782:	0019      	movs	r1, r3
 8006784:	687b      	ldr	r3, [r7, #4]
 8006786:	681b      	ldr	r3, [r3, #0]
 8006788:	683a      	ldr	r2, [r7, #0]
 800678a:	430a      	orrs	r2, r1
 800678c:	609a      	str	r2, [r3, #8]
 800678e:	687b      	ldr	r3, [r7, #4]
 8006790:	0018      	movs	r0, r3
 8006792:	f000 f813 	bl	80067bc <UARTEx_SetNbDataToProcess>
 8006796:	687b      	ldr	r3, [r7, #4]
 8006798:	681b      	ldr	r3, [r3, #0]
 800679a:	68fa      	ldr	r2, [r7, #12]
 800679c:	601a      	str	r2, [r3, #0]
 800679e:	687b      	ldr	r3, [r7, #4]
 80067a0:	2288      	movs	r2, #136	; 0x88
 80067a2:	2120      	movs	r1, #32
 80067a4:	5099      	str	r1, [r3, r2]
 80067a6:	687b      	ldr	r3, [r7, #4]
 80067a8:	2284      	movs	r2, #132	; 0x84
 80067aa:	2100      	movs	r1, #0
 80067ac:	5499      	strb	r1, [r3, r2]
 80067ae:	2300      	movs	r3, #0
 80067b0:	0018      	movs	r0, r3
 80067b2:	46bd      	mov	sp, r7
 80067b4:	b004      	add	sp, #16
 80067b6:	bd80      	pop	{r7, pc}
 80067b8:	f1ffffff 	.word	0xf1ffffff

080067bc <UARTEx_SetNbDataToProcess>:
 80067bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80067be:	b085      	sub	sp, #20
 80067c0:	af00      	add	r7, sp, #0
 80067c2:	6078      	str	r0, [r7, #4]
 80067c4:	687b      	ldr	r3, [r7, #4]
 80067c6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80067c8:	2b00      	cmp	r3, #0
 80067ca:	d108      	bne.n	80067de <UARTEx_SetNbDataToProcess+0x22>
 80067cc:	687b      	ldr	r3, [r7, #4]
 80067ce:	226a      	movs	r2, #106	; 0x6a
 80067d0:	2101      	movs	r1, #1
 80067d2:	5299      	strh	r1, [r3, r2]
 80067d4:	687b      	ldr	r3, [r7, #4]
 80067d6:	2268      	movs	r2, #104	; 0x68
 80067d8:	2101      	movs	r1, #1
 80067da:	5299      	strh	r1, [r3, r2]
 80067dc:	e043      	b.n	8006866 <UARTEx_SetNbDataToProcess+0xaa>
 80067de:	260f      	movs	r6, #15
 80067e0:	19bb      	adds	r3, r7, r6
 80067e2:	2208      	movs	r2, #8
 80067e4:	701a      	strb	r2, [r3, #0]
 80067e6:	200e      	movs	r0, #14
 80067e8:	183b      	adds	r3, r7, r0
 80067ea:	2208      	movs	r2, #8
 80067ec:	701a      	strb	r2, [r3, #0]
 80067ee:	687b      	ldr	r3, [r7, #4]
 80067f0:	681b      	ldr	r3, [r3, #0]
 80067f2:	689b      	ldr	r3, [r3, #8]
 80067f4:	0e5b      	lsrs	r3, r3, #25
 80067f6:	b2da      	uxtb	r2, r3
 80067f8:	240d      	movs	r4, #13
 80067fa:	193b      	adds	r3, r7, r4
 80067fc:	2107      	movs	r1, #7
 80067fe:	400a      	ands	r2, r1
 8006800:	701a      	strb	r2, [r3, #0]
 8006802:	687b      	ldr	r3, [r7, #4]
 8006804:	681b      	ldr	r3, [r3, #0]
 8006806:	689b      	ldr	r3, [r3, #8]
 8006808:	0f5b      	lsrs	r3, r3, #29
 800680a:	b2da      	uxtb	r2, r3
 800680c:	250c      	movs	r5, #12
 800680e:	197b      	adds	r3, r7, r5
 8006810:	2107      	movs	r1, #7
 8006812:	400a      	ands	r2, r1
 8006814:	701a      	strb	r2, [r3, #0]
 8006816:	183b      	adds	r3, r7, r0
 8006818:	781b      	ldrb	r3, [r3, #0]
 800681a:	197a      	adds	r2, r7, r5
 800681c:	7812      	ldrb	r2, [r2, #0]
 800681e:	4914      	ldr	r1, [pc, #80]	; (8006870 <UARTEx_SetNbDataToProcess+0xb4>)
 8006820:	5c8a      	ldrb	r2, [r1, r2]
 8006822:	435a      	muls	r2, r3
 8006824:	0010      	movs	r0, r2
 8006826:	197b      	adds	r3, r7, r5
 8006828:	781b      	ldrb	r3, [r3, #0]
 800682a:	4a12      	ldr	r2, [pc, #72]	; (8006874 <UARTEx_SetNbDataToProcess+0xb8>)
 800682c:	5cd3      	ldrb	r3, [r2, r3]
 800682e:	0019      	movs	r1, r3
 8006830:	f7f9 fcfa 	bl	8000228 <__divsi3>
 8006834:	0003      	movs	r3, r0
 8006836:	b299      	uxth	r1, r3
 8006838:	687b      	ldr	r3, [r7, #4]
 800683a:	226a      	movs	r2, #106	; 0x6a
 800683c:	5299      	strh	r1, [r3, r2]
 800683e:	19bb      	adds	r3, r7, r6
 8006840:	781b      	ldrb	r3, [r3, #0]
 8006842:	193a      	adds	r2, r7, r4
 8006844:	7812      	ldrb	r2, [r2, #0]
 8006846:	490a      	ldr	r1, [pc, #40]	; (8006870 <UARTEx_SetNbDataToProcess+0xb4>)
 8006848:	5c8a      	ldrb	r2, [r1, r2]
 800684a:	435a      	muls	r2, r3
 800684c:	0010      	movs	r0, r2
 800684e:	193b      	adds	r3, r7, r4
 8006850:	781b      	ldrb	r3, [r3, #0]
 8006852:	4a08      	ldr	r2, [pc, #32]	; (8006874 <UARTEx_SetNbDataToProcess+0xb8>)
 8006854:	5cd3      	ldrb	r3, [r2, r3]
 8006856:	0019      	movs	r1, r3
 8006858:	f7f9 fce6 	bl	8000228 <__divsi3>
 800685c:	0003      	movs	r3, r0
 800685e:	b299      	uxth	r1, r3
 8006860:	687b      	ldr	r3, [r7, #4]
 8006862:	2268      	movs	r2, #104	; 0x68
 8006864:	5299      	strh	r1, [r3, r2]
 8006866:	46c0      	nop			; (mov r8, r8)
 8006868:	46bd      	mov	sp, r7
 800686a:	b005      	add	sp, #20
 800686c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800686e:	46c0      	nop			; (mov r8, r8)
 8006870:	0800738c 	.word	0x0800738c
 8006874:	08007394 	.word	0x08007394

08006878 <sbrk_aligned>:
 8006878:	b570      	push	{r4, r5, r6, lr}
 800687a:	4e0f      	ldr	r6, [pc, #60]	; (80068b8 <sbrk_aligned+0x40>)
 800687c:	000d      	movs	r5, r1
 800687e:	6831      	ldr	r1, [r6, #0]
 8006880:	0004      	movs	r4, r0
 8006882:	2900      	cmp	r1, #0
 8006884:	d102      	bne.n	800688c <sbrk_aligned+0x14>
 8006886:	f000 f8d3 	bl	8006a30 <_sbrk_r>
 800688a:	6030      	str	r0, [r6, #0]
 800688c:	0029      	movs	r1, r5
 800688e:	0020      	movs	r0, r4
 8006890:	f000 f8ce 	bl	8006a30 <_sbrk_r>
 8006894:	1c43      	adds	r3, r0, #1
 8006896:	d00a      	beq.n	80068ae <sbrk_aligned+0x36>
 8006898:	2303      	movs	r3, #3
 800689a:	1cc5      	adds	r5, r0, #3
 800689c:	439d      	bics	r5, r3
 800689e:	42a8      	cmp	r0, r5
 80068a0:	d007      	beq.n	80068b2 <sbrk_aligned+0x3a>
 80068a2:	1a29      	subs	r1, r5, r0
 80068a4:	0020      	movs	r0, r4
 80068a6:	f000 f8c3 	bl	8006a30 <_sbrk_r>
 80068aa:	3001      	adds	r0, #1
 80068ac:	d101      	bne.n	80068b2 <sbrk_aligned+0x3a>
 80068ae:	2501      	movs	r5, #1
 80068b0:	426d      	negs	r5, r5
 80068b2:	0028      	movs	r0, r5
 80068b4:	bd70      	pop	{r4, r5, r6, pc}
 80068b6:	46c0      	nop			; (mov r8, r8)
 80068b8:	2000027c 	.word	0x2000027c

080068bc <_malloc_r>:
 80068bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80068be:	2203      	movs	r2, #3
 80068c0:	1ccb      	adds	r3, r1, #3
 80068c2:	4393      	bics	r3, r2
 80068c4:	3308      	adds	r3, #8
 80068c6:	0006      	movs	r6, r0
 80068c8:	001f      	movs	r7, r3
 80068ca:	2b0c      	cmp	r3, #12
 80068cc:	d238      	bcs.n	8006940 <_malloc_r+0x84>
 80068ce:	270c      	movs	r7, #12
 80068d0:	42b9      	cmp	r1, r7
 80068d2:	d837      	bhi.n	8006944 <_malloc_r+0x88>
 80068d4:	0030      	movs	r0, r6
 80068d6:	f000 f873 	bl	80069c0 <__malloc_lock>
 80068da:	4b38      	ldr	r3, [pc, #224]	; (80069bc <_malloc_r+0x100>)
 80068dc:	9300      	str	r3, [sp, #0]
 80068de:	681b      	ldr	r3, [r3, #0]
 80068e0:	001c      	movs	r4, r3
 80068e2:	2c00      	cmp	r4, #0
 80068e4:	d133      	bne.n	800694e <_malloc_r+0x92>
 80068e6:	0039      	movs	r1, r7
 80068e8:	0030      	movs	r0, r6
 80068ea:	f7ff ffc5 	bl	8006878 <sbrk_aligned>
 80068ee:	0004      	movs	r4, r0
 80068f0:	1c43      	adds	r3, r0, #1
 80068f2:	d15e      	bne.n	80069b2 <_malloc_r+0xf6>
 80068f4:	9b00      	ldr	r3, [sp, #0]
 80068f6:	681c      	ldr	r4, [r3, #0]
 80068f8:	0025      	movs	r5, r4
 80068fa:	2d00      	cmp	r5, #0
 80068fc:	d14e      	bne.n	800699c <_malloc_r+0xe0>
 80068fe:	2c00      	cmp	r4, #0
 8006900:	d051      	beq.n	80069a6 <_malloc_r+0xea>
 8006902:	6823      	ldr	r3, [r4, #0]
 8006904:	0029      	movs	r1, r5
 8006906:	18e3      	adds	r3, r4, r3
 8006908:	0030      	movs	r0, r6
 800690a:	9301      	str	r3, [sp, #4]
 800690c:	f000 f890 	bl	8006a30 <_sbrk_r>
 8006910:	9b01      	ldr	r3, [sp, #4]
 8006912:	4283      	cmp	r3, r0
 8006914:	d147      	bne.n	80069a6 <_malloc_r+0xea>
 8006916:	6823      	ldr	r3, [r4, #0]
 8006918:	0030      	movs	r0, r6
 800691a:	1aff      	subs	r7, r7, r3
 800691c:	0039      	movs	r1, r7
 800691e:	f7ff ffab 	bl	8006878 <sbrk_aligned>
 8006922:	3001      	adds	r0, #1
 8006924:	d03f      	beq.n	80069a6 <_malloc_r+0xea>
 8006926:	6823      	ldr	r3, [r4, #0]
 8006928:	19db      	adds	r3, r3, r7
 800692a:	6023      	str	r3, [r4, #0]
 800692c:	9b00      	ldr	r3, [sp, #0]
 800692e:	681b      	ldr	r3, [r3, #0]
 8006930:	2b00      	cmp	r3, #0
 8006932:	d040      	beq.n	80069b6 <_malloc_r+0xfa>
 8006934:	685a      	ldr	r2, [r3, #4]
 8006936:	42a2      	cmp	r2, r4
 8006938:	d133      	bne.n	80069a2 <_malloc_r+0xe6>
 800693a:	2200      	movs	r2, #0
 800693c:	605a      	str	r2, [r3, #4]
 800693e:	e014      	b.n	800696a <_malloc_r+0xae>
 8006940:	2b00      	cmp	r3, #0
 8006942:	dac5      	bge.n	80068d0 <_malloc_r+0x14>
 8006944:	230c      	movs	r3, #12
 8006946:	2500      	movs	r5, #0
 8006948:	6033      	str	r3, [r6, #0]
 800694a:	0028      	movs	r0, r5
 800694c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800694e:	6821      	ldr	r1, [r4, #0]
 8006950:	1bc9      	subs	r1, r1, r7
 8006952:	d420      	bmi.n	8006996 <_malloc_r+0xda>
 8006954:	290b      	cmp	r1, #11
 8006956:	d918      	bls.n	800698a <_malloc_r+0xce>
 8006958:	19e2      	adds	r2, r4, r7
 800695a:	6027      	str	r7, [r4, #0]
 800695c:	42a3      	cmp	r3, r4
 800695e:	d112      	bne.n	8006986 <_malloc_r+0xca>
 8006960:	9b00      	ldr	r3, [sp, #0]
 8006962:	601a      	str	r2, [r3, #0]
 8006964:	6863      	ldr	r3, [r4, #4]
 8006966:	6011      	str	r1, [r2, #0]
 8006968:	6053      	str	r3, [r2, #4]
 800696a:	0030      	movs	r0, r6
 800696c:	0025      	movs	r5, r4
 800696e:	f000 f82f 	bl	80069d0 <__malloc_unlock>
 8006972:	2207      	movs	r2, #7
 8006974:	350b      	adds	r5, #11
 8006976:	1d23      	adds	r3, r4, #4
 8006978:	4395      	bics	r5, r2
 800697a:	1aea      	subs	r2, r5, r3
 800697c:	429d      	cmp	r5, r3
 800697e:	d0e4      	beq.n	800694a <_malloc_r+0x8e>
 8006980:	1b5b      	subs	r3, r3, r5
 8006982:	50a3      	str	r3, [r4, r2]
 8006984:	e7e1      	b.n	800694a <_malloc_r+0x8e>
 8006986:	605a      	str	r2, [r3, #4]
 8006988:	e7ec      	b.n	8006964 <_malloc_r+0xa8>
 800698a:	6862      	ldr	r2, [r4, #4]
 800698c:	42a3      	cmp	r3, r4
 800698e:	d1d5      	bne.n	800693c <_malloc_r+0x80>
 8006990:	9b00      	ldr	r3, [sp, #0]
 8006992:	601a      	str	r2, [r3, #0]
 8006994:	e7e9      	b.n	800696a <_malloc_r+0xae>
 8006996:	0023      	movs	r3, r4
 8006998:	6864      	ldr	r4, [r4, #4]
 800699a:	e7a2      	b.n	80068e2 <_malloc_r+0x26>
 800699c:	002c      	movs	r4, r5
 800699e:	686d      	ldr	r5, [r5, #4]
 80069a0:	e7ab      	b.n	80068fa <_malloc_r+0x3e>
 80069a2:	0013      	movs	r3, r2
 80069a4:	e7c4      	b.n	8006930 <_malloc_r+0x74>
 80069a6:	230c      	movs	r3, #12
 80069a8:	0030      	movs	r0, r6
 80069aa:	6033      	str	r3, [r6, #0]
 80069ac:	f000 f810 	bl	80069d0 <__malloc_unlock>
 80069b0:	e7cb      	b.n	800694a <_malloc_r+0x8e>
 80069b2:	6027      	str	r7, [r4, #0]
 80069b4:	e7d9      	b.n	800696a <_malloc_r+0xae>
 80069b6:	605b      	str	r3, [r3, #4]
 80069b8:	deff      	udf	#255	; 0xff
 80069ba:	46c0      	nop			; (mov r8, r8)
 80069bc:	20000278 	.word	0x20000278

080069c0 <__malloc_lock>:
 80069c0:	b510      	push	{r4, lr}
 80069c2:	4802      	ldr	r0, [pc, #8]	; (80069cc <__malloc_lock+0xc>)
 80069c4:	f000 f870 	bl	8006aa8 <__retarget_lock_acquire_recursive>
 80069c8:	bd10      	pop	{r4, pc}
 80069ca:	46c0      	nop			; (mov r8, r8)
 80069cc:	200003bc 	.word	0x200003bc

080069d0 <__malloc_unlock>:
 80069d0:	b510      	push	{r4, lr}
 80069d2:	4802      	ldr	r0, [pc, #8]	; (80069dc <__malloc_unlock+0xc>)
 80069d4:	f000 f869 	bl	8006aaa <__retarget_lock_release_recursive>
 80069d8:	bd10      	pop	{r4, pc}
 80069da:	46c0      	nop			; (mov r8, r8)
 80069dc:	200003bc 	.word	0x200003bc

080069e0 <siprintf>:
 80069e0:	b40e      	push	{r1, r2, r3}
 80069e2:	b500      	push	{lr}
 80069e4:	490b      	ldr	r1, [pc, #44]	; (8006a14 <siprintf+0x34>)
 80069e6:	b09c      	sub	sp, #112	; 0x70
 80069e8:	ab1d      	add	r3, sp, #116	; 0x74
 80069ea:	9002      	str	r0, [sp, #8]
 80069ec:	9006      	str	r0, [sp, #24]
 80069ee:	9107      	str	r1, [sp, #28]
 80069f0:	9104      	str	r1, [sp, #16]
 80069f2:	4809      	ldr	r0, [pc, #36]	; (8006a18 <siprintf+0x38>)
 80069f4:	4909      	ldr	r1, [pc, #36]	; (8006a1c <siprintf+0x3c>)
 80069f6:	cb04      	ldmia	r3!, {r2}
 80069f8:	9105      	str	r1, [sp, #20]
 80069fa:	6800      	ldr	r0, [r0, #0]
 80069fc:	a902      	add	r1, sp, #8
 80069fe:	9301      	str	r3, [sp, #4]
 8006a00:	f000 f90a 	bl	8006c18 <_svfiprintf_r>
 8006a04:	2200      	movs	r2, #0
 8006a06:	9b02      	ldr	r3, [sp, #8]
 8006a08:	701a      	strb	r2, [r3, #0]
 8006a0a:	b01c      	add	sp, #112	; 0x70
 8006a0c:	bc08      	pop	{r3}
 8006a0e:	b003      	add	sp, #12
 8006a10:	4718      	bx	r3
 8006a12:	46c0      	nop			; (mov r8, r8)
 8006a14:	7fffffff 	.word	0x7fffffff
 8006a18:	20000058 	.word	0x20000058
 8006a1c:	ffff0208 	.word	0xffff0208

08006a20 <memset>:
 8006a20:	0003      	movs	r3, r0
 8006a22:	1882      	adds	r2, r0, r2
 8006a24:	4293      	cmp	r3, r2
 8006a26:	d100      	bne.n	8006a2a <memset+0xa>
 8006a28:	4770      	bx	lr
 8006a2a:	7019      	strb	r1, [r3, #0]
 8006a2c:	3301      	adds	r3, #1
 8006a2e:	e7f9      	b.n	8006a24 <memset+0x4>

08006a30 <_sbrk_r>:
 8006a30:	2300      	movs	r3, #0
 8006a32:	b570      	push	{r4, r5, r6, lr}
 8006a34:	4d06      	ldr	r5, [pc, #24]	; (8006a50 <_sbrk_r+0x20>)
 8006a36:	0004      	movs	r4, r0
 8006a38:	0008      	movs	r0, r1
 8006a3a:	602b      	str	r3, [r5, #0]
 8006a3c:	f7fb f9ee 	bl	8001e1c <_sbrk>
 8006a40:	1c43      	adds	r3, r0, #1
 8006a42:	d103      	bne.n	8006a4c <_sbrk_r+0x1c>
 8006a44:	682b      	ldr	r3, [r5, #0]
 8006a46:	2b00      	cmp	r3, #0
 8006a48:	d000      	beq.n	8006a4c <_sbrk_r+0x1c>
 8006a4a:	6023      	str	r3, [r4, #0]
 8006a4c:	bd70      	pop	{r4, r5, r6, pc}
 8006a4e:	46c0      	nop			; (mov r8, r8)
 8006a50:	200003b8 	.word	0x200003b8

08006a54 <__errno>:
 8006a54:	4b01      	ldr	r3, [pc, #4]	; (8006a5c <__errno+0x8>)
 8006a56:	6818      	ldr	r0, [r3, #0]
 8006a58:	4770      	bx	lr
 8006a5a:	46c0      	nop			; (mov r8, r8)
 8006a5c:	20000058 	.word	0x20000058

08006a60 <__libc_init_array>:
 8006a60:	b570      	push	{r4, r5, r6, lr}
 8006a62:	2600      	movs	r6, #0
 8006a64:	4c0c      	ldr	r4, [pc, #48]	; (8006a98 <__libc_init_array+0x38>)
 8006a66:	4d0d      	ldr	r5, [pc, #52]	; (8006a9c <__libc_init_array+0x3c>)
 8006a68:	1b64      	subs	r4, r4, r5
 8006a6a:	10a4      	asrs	r4, r4, #2
 8006a6c:	42a6      	cmp	r6, r4
 8006a6e:	d109      	bne.n	8006a84 <__libc_init_array+0x24>
 8006a70:	2600      	movs	r6, #0
 8006a72:	f000 fba7 	bl	80071c4 <_init>
 8006a76:	4c0a      	ldr	r4, [pc, #40]	; (8006aa0 <__libc_init_array+0x40>)
 8006a78:	4d0a      	ldr	r5, [pc, #40]	; (8006aa4 <__libc_init_array+0x44>)
 8006a7a:	1b64      	subs	r4, r4, r5
 8006a7c:	10a4      	asrs	r4, r4, #2
 8006a7e:	42a6      	cmp	r6, r4
 8006a80:	d105      	bne.n	8006a8e <__libc_init_array+0x2e>
 8006a82:	bd70      	pop	{r4, r5, r6, pc}
 8006a84:	00b3      	lsls	r3, r6, #2
 8006a86:	58eb      	ldr	r3, [r5, r3]
 8006a88:	4798      	blx	r3
 8006a8a:	3601      	adds	r6, #1
 8006a8c:	e7ee      	b.n	8006a6c <__libc_init_array+0xc>
 8006a8e:	00b3      	lsls	r3, r6, #2
 8006a90:	58eb      	ldr	r3, [r5, r3]
 8006a92:	4798      	blx	r3
 8006a94:	3601      	adds	r6, #1
 8006a96:	e7f2      	b.n	8006a7e <__libc_init_array+0x1e>
 8006a98:	080073d0 	.word	0x080073d0
 8006a9c:	080073d0 	.word	0x080073d0
 8006aa0:	080073d4 	.word	0x080073d4
 8006aa4:	080073d0 	.word	0x080073d0

08006aa8 <__retarget_lock_acquire_recursive>:
 8006aa8:	4770      	bx	lr

08006aaa <__retarget_lock_release_recursive>:
 8006aaa:	4770      	bx	lr

08006aac <memcpy>:
 8006aac:	2300      	movs	r3, #0
 8006aae:	b510      	push	{r4, lr}
 8006ab0:	429a      	cmp	r2, r3
 8006ab2:	d100      	bne.n	8006ab6 <memcpy+0xa>
 8006ab4:	bd10      	pop	{r4, pc}
 8006ab6:	5ccc      	ldrb	r4, [r1, r3]
 8006ab8:	54c4      	strb	r4, [r0, r3]
 8006aba:	3301      	adds	r3, #1
 8006abc:	e7f8      	b.n	8006ab0 <memcpy+0x4>
	...

08006ac0 <_free_r>:
 8006ac0:	b570      	push	{r4, r5, r6, lr}
 8006ac2:	0005      	movs	r5, r0
 8006ac4:	2900      	cmp	r1, #0
 8006ac6:	d010      	beq.n	8006aea <_free_r+0x2a>
 8006ac8:	1f0c      	subs	r4, r1, #4
 8006aca:	6823      	ldr	r3, [r4, #0]
 8006acc:	2b00      	cmp	r3, #0
 8006ace:	da00      	bge.n	8006ad2 <_free_r+0x12>
 8006ad0:	18e4      	adds	r4, r4, r3
 8006ad2:	0028      	movs	r0, r5
 8006ad4:	f7ff ff74 	bl	80069c0 <__malloc_lock>
 8006ad8:	4a1d      	ldr	r2, [pc, #116]	; (8006b50 <_free_r+0x90>)
 8006ada:	6813      	ldr	r3, [r2, #0]
 8006adc:	2b00      	cmp	r3, #0
 8006ade:	d105      	bne.n	8006aec <_free_r+0x2c>
 8006ae0:	6063      	str	r3, [r4, #4]
 8006ae2:	6014      	str	r4, [r2, #0]
 8006ae4:	0028      	movs	r0, r5
 8006ae6:	f7ff ff73 	bl	80069d0 <__malloc_unlock>
 8006aea:	bd70      	pop	{r4, r5, r6, pc}
 8006aec:	42a3      	cmp	r3, r4
 8006aee:	d908      	bls.n	8006b02 <_free_r+0x42>
 8006af0:	6820      	ldr	r0, [r4, #0]
 8006af2:	1821      	adds	r1, r4, r0
 8006af4:	428b      	cmp	r3, r1
 8006af6:	d1f3      	bne.n	8006ae0 <_free_r+0x20>
 8006af8:	6819      	ldr	r1, [r3, #0]
 8006afa:	685b      	ldr	r3, [r3, #4]
 8006afc:	1809      	adds	r1, r1, r0
 8006afe:	6021      	str	r1, [r4, #0]
 8006b00:	e7ee      	b.n	8006ae0 <_free_r+0x20>
 8006b02:	001a      	movs	r2, r3
 8006b04:	685b      	ldr	r3, [r3, #4]
 8006b06:	2b00      	cmp	r3, #0
 8006b08:	d001      	beq.n	8006b0e <_free_r+0x4e>
 8006b0a:	42a3      	cmp	r3, r4
 8006b0c:	d9f9      	bls.n	8006b02 <_free_r+0x42>
 8006b0e:	6811      	ldr	r1, [r2, #0]
 8006b10:	1850      	adds	r0, r2, r1
 8006b12:	42a0      	cmp	r0, r4
 8006b14:	d10b      	bne.n	8006b2e <_free_r+0x6e>
 8006b16:	6820      	ldr	r0, [r4, #0]
 8006b18:	1809      	adds	r1, r1, r0
 8006b1a:	1850      	adds	r0, r2, r1
 8006b1c:	6011      	str	r1, [r2, #0]
 8006b1e:	4283      	cmp	r3, r0
 8006b20:	d1e0      	bne.n	8006ae4 <_free_r+0x24>
 8006b22:	6818      	ldr	r0, [r3, #0]
 8006b24:	685b      	ldr	r3, [r3, #4]
 8006b26:	1841      	adds	r1, r0, r1
 8006b28:	6011      	str	r1, [r2, #0]
 8006b2a:	6053      	str	r3, [r2, #4]
 8006b2c:	e7da      	b.n	8006ae4 <_free_r+0x24>
 8006b2e:	42a0      	cmp	r0, r4
 8006b30:	d902      	bls.n	8006b38 <_free_r+0x78>
 8006b32:	230c      	movs	r3, #12
 8006b34:	602b      	str	r3, [r5, #0]
 8006b36:	e7d5      	b.n	8006ae4 <_free_r+0x24>
 8006b38:	6820      	ldr	r0, [r4, #0]
 8006b3a:	1821      	adds	r1, r4, r0
 8006b3c:	428b      	cmp	r3, r1
 8006b3e:	d103      	bne.n	8006b48 <_free_r+0x88>
 8006b40:	6819      	ldr	r1, [r3, #0]
 8006b42:	685b      	ldr	r3, [r3, #4]
 8006b44:	1809      	adds	r1, r1, r0
 8006b46:	6021      	str	r1, [r4, #0]
 8006b48:	6063      	str	r3, [r4, #4]
 8006b4a:	6054      	str	r4, [r2, #4]
 8006b4c:	e7ca      	b.n	8006ae4 <_free_r+0x24>
 8006b4e:	46c0      	nop			; (mov r8, r8)
 8006b50:	20000278 	.word	0x20000278

08006b54 <__ssputs_r>:
 8006b54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006b56:	b085      	sub	sp, #20
 8006b58:	9301      	str	r3, [sp, #4]
 8006b5a:	9203      	str	r2, [sp, #12]
 8006b5c:	688e      	ldr	r6, [r1, #8]
 8006b5e:	9a01      	ldr	r2, [sp, #4]
 8006b60:	0007      	movs	r7, r0
 8006b62:	000c      	movs	r4, r1
 8006b64:	680b      	ldr	r3, [r1, #0]
 8006b66:	4296      	cmp	r6, r2
 8006b68:	d831      	bhi.n	8006bce <__ssputs_r+0x7a>
 8006b6a:	898a      	ldrh	r2, [r1, #12]
 8006b6c:	2190      	movs	r1, #144	; 0x90
 8006b6e:	00c9      	lsls	r1, r1, #3
 8006b70:	420a      	tst	r2, r1
 8006b72:	d029      	beq.n	8006bc8 <__ssputs_r+0x74>
 8006b74:	2003      	movs	r0, #3
 8006b76:	6921      	ldr	r1, [r4, #16]
 8006b78:	1a5b      	subs	r3, r3, r1
 8006b7a:	9302      	str	r3, [sp, #8]
 8006b7c:	6963      	ldr	r3, [r4, #20]
 8006b7e:	4343      	muls	r3, r0
 8006b80:	0fdd      	lsrs	r5, r3, #31
 8006b82:	18ed      	adds	r5, r5, r3
 8006b84:	9b01      	ldr	r3, [sp, #4]
 8006b86:	9802      	ldr	r0, [sp, #8]
 8006b88:	3301      	adds	r3, #1
 8006b8a:	181b      	adds	r3, r3, r0
 8006b8c:	106d      	asrs	r5, r5, #1
 8006b8e:	42ab      	cmp	r3, r5
 8006b90:	d900      	bls.n	8006b94 <__ssputs_r+0x40>
 8006b92:	001d      	movs	r5, r3
 8006b94:	0552      	lsls	r2, r2, #21
 8006b96:	d529      	bpl.n	8006bec <__ssputs_r+0x98>
 8006b98:	0029      	movs	r1, r5
 8006b9a:	0038      	movs	r0, r7
 8006b9c:	f7ff fe8e 	bl	80068bc <_malloc_r>
 8006ba0:	1e06      	subs	r6, r0, #0
 8006ba2:	d02d      	beq.n	8006c00 <__ssputs_r+0xac>
 8006ba4:	9a02      	ldr	r2, [sp, #8]
 8006ba6:	6921      	ldr	r1, [r4, #16]
 8006ba8:	f7ff ff80 	bl	8006aac <memcpy>
 8006bac:	89a2      	ldrh	r2, [r4, #12]
 8006bae:	4b19      	ldr	r3, [pc, #100]	; (8006c14 <__ssputs_r+0xc0>)
 8006bb0:	401a      	ands	r2, r3
 8006bb2:	2380      	movs	r3, #128	; 0x80
 8006bb4:	4313      	orrs	r3, r2
 8006bb6:	81a3      	strh	r3, [r4, #12]
 8006bb8:	9b02      	ldr	r3, [sp, #8]
 8006bba:	6126      	str	r6, [r4, #16]
 8006bbc:	18f6      	adds	r6, r6, r3
 8006bbe:	6026      	str	r6, [r4, #0]
 8006bc0:	6165      	str	r5, [r4, #20]
 8006bc2:	9e01      	ldr	r6, [sp, #4]
 8006bc4:	1aed      	subs	r5, r5, r3
 8006bc6:	60a5      	str	r5, [r4, #8]
 8006bc8:	9b01      	ldr	r3, [sp, #4]
 8006bca:	429e      	cmp	r6, r3
 8006bcc:	d900      	bls.n	8006bd0 <__ssputs_r+0x7c>
 8006bce:	9e01      	ldr	r6, [sp, #4]
 8006bd0:	0032      	movs	r2, r6
 8006bd2:	9903      	ldr	r1, [sp, #12]
 8006bd4:	6820      	ldr	r0, [r4, #0]
 8006bd6:	f000 fa9f 	bl	8007118 <memmove>
 8006bda:	2000      	movs	r0, #0
 8006bdc:	68a3      	ldr	r3, [r4, #8]
 8006bde:	1b9b      	subs	r3, r3, r6
 8006be0:	60a3      	str	r3, [r4, #8]
 8006be2:	6823      	ldr	r3, [r4, #0]
 8006be4:	199b      	adds	r3, r3, r6
 8006be6:	6023      	str	r3, [r4, #0]
 8006be8:	b005      	add	sp, #20
 8006bea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006bec:	002a      	movs	r2, r5
 8006bee:	0038      	movs	r0, r7
 8006bf0:	f000 fab0 	bl	8007154 <_realloc_r>
 8006bf4:	1e06      	subs	r6, r0, #0
 8006bf6:	d1df      	bne.n	8006bb8 <__ssputs_r+0x64>
 8006bf8:	0038      	movs	r0, r7
 8006bfa:	6921      	ldr	r1, [r4, #16]
 8006bfc:	f7ff ff60 	bl	8006ac0 <_free_r>
 8006c00:	230c      	movs	r3, #12
 8006c02:	2001      	movs	r0, #1
 8006c04:	603b      	str	r3, [r7, #0]
 8006c06:	89a2      	ldrh	r2, [r4, #12]
 8006c08:	3334      	adds	r3, #52	; 0x34
 8006c0a:	4313      	orrs	r3, r2
 8006c0c:	81a3      	strh	r3, [r4, #12]
 8006c0e:	4240      	negs	r0, r0
 8006c10:	e7ea      	b.n	8006be8 <__ssputs_r+0x94>
 8006c12:	46c0      	nop			; (mov r8, r8)
 8006c14:	fffffb7f 	.word	0xfffffb7f

08006c18 <_svfiprintf_r>:
 8006c18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006c1a:	b0a1      	sub	sp, #132	; 0x84
 8006c1c:	9003      	str	r0, [sp, #12]
 8006c1e:	001d      	movs	r5, r3
 8006c20:	898b      	ldrh	r3, [r1, #12]
 8006c22:	000f      	movs	r7, r1
 8006c24:	0016      	movs	r6, r2
 8006c26:	061b      	lsls	r3, r3, #24
 8006c28:	d511      	bpl.n	8006c4e <_svfiprintf_r+0x36>
 8006c2a:	690b      	ldr	r3, [r1, #16]
 8006c2c:	2b00      	cmp	r3, #0
 8006c2e:	d10e      	bne.n	8006c4e <_svfiprintf_r+0x36>
 8006c30:	2140      	movs	r1, #64	; 0x40
 8006c32:	f7ff fe43 	bl	80068bc <_malloc_r>
 8006c36:	6038      	str	r0, [r7, #0]
 8006c38:	6138      	str	r0, [r7, #16]
 8006c3a:	2800      	cmp	r0, #0
 8006c3c:	d105      	bne.n	8006c4a <_svfiprintf_r+0x32>
 8006c3e:	230c      	movs	r3, #12
 8006c40:	9a03      	ldr	r2, [sp, #12]
 8006c42:	3801      	subs	r0, #1
 8006c44:	6013      	str	r3, [r2, #0]
 8006c46:	b021      	add	sp, #132	; 0x84
 8006c48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006c4a:	2340      	movs	r3, #64	; 0x40
 8006c4c:	617b      	str	r3, [r7, #20]
 8006c4e:	2300      	movs	r3, #0
 8006c50:	ac08      	add	r4, sp, #32
 8006c52:	6163      	str	r3, [r4, #20]
 8006c54:	3320      	adds	r3, #32
 8006c56:	7663      	strb	r3, [r4, #25]
 8006c58:	3310      	adds	r3, #16
 8006c5a:	76a3      	strb	r3, [r4, #26]
 8006c5c:	9507      	str	r5, [sp, #28]
 8006c5e:	0035      	movs	r5, r6
 8006c60:	782b      	ldrb	r3, [r5, #0]
 8006c62:	2b00      	cmp	r3, #0
 8006c64:	d001      	beq.n	8006c6a <_svfiprintf_r+0x52>
 8006c66:	2b25      	cmp	r3, #37	; 0x25
 8006c68:	d148      	bne.n	8006cfc <_svfiprintf_r+0xe4>
 8006c6a:	1bab      	subs	r3, r5, r6
 8006c6c:	9305      	str	r3, [sp, #20]
 8006c6e:	42b5      	cmp	r5, r6
 8006c70:	d00b      	beq.n	8006c8a <_svfiprintf_r+0x72>
 8006c72:	0032      	movs	r2, r6
 8006c74:	0039      	movs	r1, r7
 8006c76:	9803      	ldr	r0, [sp, #12]
 8006c78:	f7ff ff6c 	bl	8006b54 <__ssputs_r>
 8006c7c:	3001      	adds	r0, #1
 8006c7e:	d100      	bne.n	8006c82 <_svfiprintf_r+0x6a>
 8006c80:	e0af      	b.n	8006de2 <_svfiprintf_r+0x1ca>
 8006c82:	6963      	ldr	r3, [r4, #20]
 8006c84:	9a05      	ldr	r2, [sp, #20]
 8006c86:	189b      	adds	r3, r3, r2
 8006c88:	6163      	str	r3, [r4, #20]
 8006c8a:	782b      	ldrb	r3, [r5, #0]
 8006c8c:	2b00      	cmp	r3, #0
 8006c8e:	d100      	bne.n	8006c92 <_svfiprintf_r+0x7a>
 8006c90:	e0a7      	b.n	8006de2 <_svfiprintf_r+0x1ca>
 8006c92:	2201      	movs	r2, #1
 8006c94:	2300      	movs	r3, #0
 8006c96:	4252      	negs	r2, r2
 8006c98:	6062      	str	r2, [r4, #4]
 8006c9a:	a904      	add	r1, sp, #16
 8006c9c:	3254      	adds	r2, #84	; 0x54
 8006c9e:	1852      	adds	r2, r2, r1
 8006ca0:	1c6e      	adds	r6, r5, #1
 8006ca2:	6023      	str	r3, [r4, #0]
 8006ca4:	60e3      	str	r3, [r4, #12]
 8006ca6:	60a3      	str	r3, [r4, #8]
 8006ca8:	7013      	strb	r3, [r2, #0]
 8006caa:	65a3      	str	r3, [r4, #88]	; 0x58
 8006cac:	4b55      	ldr	r3, [pc, #340]	; (8006e04 <_svfiprintf_r+0x1ec>)
 8006cae:	2205      	movs	r2, #5
 8006cb0:	0018      	movs	r0, r3
 8006cb2:	7831      	ldrb	r1, [r6, #0]
 8006cb4:	9305      	str	r3, [sp, #20]
 8006cb6:	f000 fa42 	bl	800713e <memchr>
 8006cba:	1c75      	adds	r5, r6, #1
 8006cbc:	2800      	cmp	r0, #0
 8006cbe:	d11f      	bne.n	8006d00 <_svfiprintf_r+0xe8>
 8006cc0:	6822      	ldr	r2, [r4, #0]
 8006cc2:	06d3      	lsls	r3, r2, #27
 8006cc4:	d504      	bpl.n	8006cd0 <_svfiprintf_r+0xb8>
 8006cc6:	2353      	movs	r3, #83	; 0x53
 8006cc8:	a904      	add	r1, sp, #16
 8006cca:	185b      	adds	r3, r3, r1
 8006ccc:	2120      	movs	r1, #32
 8006cce:	7019      	strb	r1, [r3, #0]
 8006cd0:	0713      	lsls	r3, r2, #28
 8006cd2:	d504      	bpl.n	8006cde <_svfiprintf_r+0xc6>
 8006cd4:	2353      	movs	r3, #83	; 0x53
 8006cd6:	a904      	add	r1, sp, #16
 8006cd8:	185b      	adds	r3, r3, r1
 8006cda:	212b      	movs	r1, #43	; 0x2b
 8006cdc:	7019      	strb	r1, [r3, #0]
 8006cde:	7833      	ldrb	r3, [r6, #0]
 8006ce0:	2b2a      	cmp	r3, #42	; 0x2a
 8006ce2:	d016      	beq.n	8006d12 <_svfiprintf_r+0xfa>
 8006ce4:	0035      	movs	r5, r6
 8006ce6:	2100      	movs	r1, #0
 8006ce8:	200a      	movs	r0, #10
 8006cea:	68e3      	ldr	r3, [r4, #12]
 8006cec:	782a      	ldrb	r2, [r5, #0]
 8006cee:	1c6e      	adds	r6, r5, #1
 8006cf0:	3a30      	subs	r2, #48	; 0x30
 8006cf2:	2a09      	cmp	r2, #9
 8006cf4:	d94e      	bls.n	8006d94 <_svfiprintf_r+0x17c>
 8006cf6:	2900      	cmp	r1, #0
 8006cf8:	d111      	bne.n	8006d1e <_svfiprintf_r+0x106>
 8006cfa:	e017      	b.n	8006d2c <_svfiprintf_r+0x114>
 8006cfc:	3501      	adds	r5, #1
 8006cfe:	e7af      	b.n	8006c60 <_svfiprintf_r+0x48>
 8006d00:	9b05      	ldr	r3, [sp, #20]
 8006d02:	6822      	ldr	r2, [r4, #0]
 8006d04:	1ac0      	subs	r0, r0, r3
 8006d06:	2301      	movs	r3, #1
 8006d08:	4083      	lsls	r3, r0
 8006d0a:	4313      	orrs	r3, r2
 8006d0c:	002e      	movs	r6, r5
 8006d0e:	6023      	str	r3, [r4, #0]
 8006d10:	e7cc      	b.n	8006cac <_svfiprintf_r+0x94>
 8006d12:	9b07      	ldr	r3, [sp, #28]
 8006d14:	1d19      	adds	r1, r3, #4
 8006d16:	681b      	ldr	r3, [r3, #0]
 8006d18:	9107      	str	r1, [sp, #28]
 8006d1a:	2b00      	cmp	r3, #0
 8006d1c:	db01      	blt.n	8006d22 <_svfiprintf_r+0x10a>
 8006d1e:	930b      	str	r3, [sp, #44]	; 0x2c
 8006d20:	e004      	b.n	8006d2c <_svfiprintf_r+0x114>
 8006d22:	425b      	negs	r3, r3
 8006d24:	60e3      	str	r3, [r4, #12]
 8006d26:	2302      	movs	r3, #2
 8006d28:	4313      	orrs	r3, r2
 8006d2a:	6023      	str	r3, [r4, #0]
 8006d2c:	782b      	ldrb	r3, [r5, #0]
 8006d2e:	2b2e      	cmp	r3, #46	; 0x2e
 8006d30:	d10a      	bne.n	8006d48 <_svfiprintf_r+0x130>
 8006d32:	786b      	ldrb	r3, [r5, #1]
 8006d34:	2b2a      	cmp	r3, #42	; 0x2a
 8006d36:	d135      	bne.n	8006da4 <_svfiprintf_r+0x18c>
 8006d38:	9b07      	ldr	r3, [sp, #28]
 8006d3a:	3502      	adds	r5, #2
 8006d3c:	1d1a      	adds	r2, r3, #4
 8006d3e:	681b      	ldr	r3, [r3, #0]
 8006d40:	9207      	str	r2, [sp, #28]
 8006d42:	2b00      	cmp	r3, #0
 8006d44:	db2b      	blt.n	8006d9e <_svfiprintf_r+0x186>
 8006d46:	9309      	str	r3, [sp, #36]	; 0x24
 8006d48:	4e2f      	ldr	r6, [pc, #188]	; (8006e08 <_svfiprintf_r+0x1f0>)
 8006d4a:	2203      	movs	r2, #3
 8006d4c:	0030      	movs	r0, r6
 8006d4e:	7829      	ldrb	r1, [r5, #0]
 8006d50:	f000 f9f5 	bl	800713e <memchr>
 8006d54:	2800      	cmp	r0, #0
 8006d56:	d006      	beq.n	8006d66 <_svfiprintf_r+0x14e>
 8006d58:	2340      	movs	r3, #64	; 0x40
 8006d5a:	1b80      	subs	r0, r0, r6
 8006d5c:	4083      	lsls	r3, r0
 8006d5e:	6822      	ldr	r2, [r4, #0]
 8006d60:	3501      	adds	r5, #1
 8006d62:	4313      	orrs	r3, r2
 8006d64:	6023      	str	r3, [r4, #0]
 8006d66:	7829      	ldrb	r1, [r5, #0]
 8006d68:	2206      	movs	r2, #6
 8006d6a:	4828      	ldr	r0, [pc, #160]	; (8006e0c <_svfiprintf_r+0x1f4>)
 8006d6c:	1c6e      	adds	r6, r5, #1
 8006d6e:	7621      	strb	r1, [r4, #24]
 8006d70:	f000 f9e5 	bl	800713e <memchr>
 8006d74:	2800      	cmp	r0, #0
 8006d76:	d03c      	beq.n	8006df2 <_svfiprintf_r+0x1da>
 8006d78:	4b25      	ldr	r3, [pc, #148]	; (8006e10 <_svfiprintf_r+0x1f8>)
 8006d7a:	2b00      	cmp	r3, #0
 8006d7c:	d125      	bne.n	8006dca <_svfiprintf_r+0x1b2>
 8006d7e:	2207      	movs	r2, #7
 8006d80:	9b07      	ldr	r3, [sp, #28]
 8006d82:	3307      	adds	r3, #7
 8006d84:	4393      	bics	r3, r2
 8006d86:	3308      	adds	r3, #8
 8006d88:	9307      	str	r3, [sp, #28]
 8006d8a:	6963      	ldr	r3, [r4, #20]
 8006d8c:	9a04      	ldr	r2, [sp, #16]
 8006d8e:	189b      	adds	r3, r3, r2
 8006d90:	6163      	str	r3, [r4, #20]
 8006d92:	e764      	b.n	8006c5e <_svfiprintf_r+0x46>
 8006d94:	4343      	muls	r3, r0
 8006d96:	0035      	movs	r5, r6
 8006d98:	2101      	movs	r1, #1
 8006d9a:	189b      	adds	r3, r3, r2
 8006d9c:	e7a6      	b.n	8006cec <_svfiprintf_r+0xd4>
 8006d9e:	2301      	movs	r3, #1
 8006da0:	425b      	negs	r3, r3
 8006da2:	e7d0      	b.n	8006d46 <_svfiprintf_r+0x12e>
 8006da4:	2300      	movs	r3, #0
 8006da6:	200a      	movs	r0, #10
 8006da8:	001a      	movs	r2, r3
 8006daa:	3501      	adds	r5, #1
 8006dac:	6063      	str	r3, [r4, #4]
 8006dae:	7829      	ldrb	r1, [r5, #0]
 8006db0:	1c6e      	adds	r6, r5, #1
 8006db2:	3930      	subs	r1, #48	; 0x30
 8006db4:	2909      	cmp	r1, #9
 8006db6:	d903      	bls.n	8006dc0 <_svfiprintf_r+0x1a8>
 8006db8:	2b00      	cmp	r3, #0
 8006dba:	d0c5      	beq.n	8006d48 <_svfiprintf_r+0x130>
 8006dbc:	9209      	str	r2, [sp, #36]	; 0x24
 8006dbe:	e7c3      	b.n	8006d48 <_svfiprintf_r+0x130>
 8006dc0:	4342      	muls	r2, r0
 8006dc2:	0035      	movs	r5, r6
 8006dc4:	2301      	movs	r3, #1
 8006dc6:	1852      	adds	r2, r2, r1
 8006dc8:	e7f1      	b.n	8006dae <_svfiprintf_r+0x196>
 8006dca:	aa07      	add	r2, sp, #28
 8006dcc:	9200      	str	r2, [sp, #0]
 8006dce:	0021      	movs	r1, r4
 8006dd0:	003a      	movs	r2, r7
 8006dd2:	4b10      	ldr	r3, [pc, #64]	; (8006e14 <_svfiprintf_r+0x1fc>)
 8006dd4:	9803      	ldr	r0, [sp, #12]
 8006dd6:	e000      	b.n	8006dda <_svfiprintf_r+0x1c2>
 8006dd8:	bf00      	nop
 8006dda:	9004      	str	r0, [sp, #16]
 8006ddc:	9b04      	ldr	r3, [sp, #16]
 8006dde:	3301      	adds	r3, #1
 8006de0:	d1d3      	bne.n	8006d8a <_svfiprintf_r+0x172>
 8006de2:	89bb      	ldrh	r3, [r7, #12]
 8006de4:	980d      	ldr	r0, [sp, #52]	; 0x34
 8006de6:	065b      	lsls	r3, r3, #25
 8006de8:	d400      	bmi.n	8006dec <_svfiprintf_r+0x1d4>
 8006dea:	e72c      	b.n	8006c46 <_svfiprintf_r+0x2e>
 8006dec:	2001      	movs	r0, #1
 8006dee:	4240      	negs	r0, r0
 8006df0:	e729      	b.n	8006c46 <_svfiprintf_r+0x2e>
 8006df2:	aa07      	add	r2, sp, #28
 8006df4:	9200      	str	r2, [sp, #0]
 8006df6:	0021      	movs	r1, r4
 8006df8:	003a      	movs	r2, r7
 8006dfa:	4b06      	ldr	r3, [pc, #24]	; (8006e14 <_svfiprintf_r+0x1fc>)
 8006dfc:	9803      	ldr	r0, [sp, #12]
 8006dfe:	f000 f87b 	bl	8006ef8 <_printf_i>
 8006e02:	e7ea      	b.n	8006dda <_svfiprintf_r+0x1c2>
 8006e04:	0800739c 	.word	0x0800739c
 8006e08:	080073a2 	.word	0x080073a2
 8006e0c:	080073a6 	.word	0x080073a6
 8006e10:	00000000 	.word	0x00000000
 8006e14:	08006b55 	.word	0x08006b55

08006e18 <_printf_common>:
 8006e18:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006e1a:	0016      	movs	r6, r2
 8006e1c:	9301      	str	r3, [sp, #4]
 8006e1e:	688a      	ldr	r2, [r1, #8]
 8006e20:	690b      	ldr	r3, [r1, #16]
 8006e22:	000c      	movs	r4, r1
 8006e24:	9000      	str	r0, [sp, #0]
 8006e26:	4293      	cmp	r3, r2
 8006e28:	da00      	bge.n	8006e2c <_printf_common+0x14>
 8006e2a:	0013      	movs	r3, r2
 8006e2c:	0022      	movs	r2, r4
 8006e2e:	6033      	str	r3, [r6, #0]
 8006e30:	3243      	adds	r2, #67	; 0x43
 8006e32:	7812      	ldrb	r2, [r2, #0]
 8006e34:	2a00      	cmp	r2, #0
 8006e36:	d001      	beq.n	8006e3c <_printf_common+0x24>
 8006e38:	3301      	adds	r3, #1
 8006e3a:	6033      	str	r3, [r6, #0]
 8006e3c:	6823      	ldr	r3, [r4, #0]
 8006e3e:	069b      	lsls	r3, r3, #26
 8006e40:	d502      	bpl.n	8006e48 <_printf_common+0x30>
 8006e42:	6833      	ldr	r3, [r6, #0]
 8006e44:	3302      	adds	r3, #2
 8006e46:	6033      	str	r3, [r6, #0]
 8006e48:	6822      	ldr	r2, [r4, #0]
 8006e4a:	2306      	movs	r3, #6
 8006e4c:	0015      	movs	r5, r2
 8006e4e:	401d      	ands	r5, r3
 8006e50:	421a      	tst	r2, r3
 8006e52:	d027      	beq.n	8006ea4 <_printf_common+0x8c>
 8006e54:	0023      	movs	r3, r4
 8006e56:	3343      	adds	r3, #67	; 0x43
 8006e58:	781b      	ldrb	r3, [r3, #0]
 8006e5a:	1e5a      	subs	r2, r3, #1
 8006e5c:	4193      	sbcs	r3, r2
 8006e5e:	6822      	ldr	r2, [r4, #0]
 8006e60:	0692      	lsls	r2, r2, #26
 8006e62:	d430      	bmi.n	8006ec6 <_printf_common+0xae>
 8006e64:	0022      	movs	r2, r4
 8006e66:	9901      	ldr	r1, [sp, #4]
 8006e68:	9800      	ldr	r0, [sp, #0]
 8006e6a:	9d08      	ldr	r5, [sp, #32]
 8006e6c:	3243      	adds	r2, #67	; 0x43
 8006e6e:	47a8      	blx	r5
 8006e70:	3001      	adds	r0, #1
 8006e72:	d025      	beq.n	8006ec0 <_printf_common+0xa8>
 8006e74:	2206      	movs	r2, #6
 8006e76:	6823      	ldr	r3, [r4, #0]
 8006e78:	2500      	movs	r5, #0
 8006e7a:	4013      	ands	r3, r2
 8006e7c:	2b04      	cmp	r3, #4
 8006e7e:	d105      	bne.n	8006e8c <_printf_common+0x74>
 8006e80:	6833      	ldr	r3, [r6, #0]
 8006e82:	68e5      	ldr	r5, [r4, #12]
 8006e84:	1aed      	subs	r5, r5, r3
 8006e86:	43eb      	mvns	r3, r5
 8006e88:	17db      	asrs	r3, r3, #31
 8006e8a:	401d      	ands	r5, r3
 8006e8c:	68a3      	ldr	r3, [r4, #8]
 8006e8e:	6922      	ldr	r2, [r4, #16]
 8006e90:	4293      	cmp	r3, r2
 8006e92:	dd01      	ble.n	8006e98 <_printf_common+0x80>
 8006e94:	1a9b      	subs	r3, r3, r2
 8006e96:	18ed      	adds	r5, r5, r3
 8006e98:	2600      	movs	r6, #0
 8006e9a:	42b5      	cmp	r5, r6
 8006e9c:	d120      	bne.n	8006ee0 <_printf_common+0xc8>
 8006e9e:	2000      	movs	r0, #0
 8006ea0:	e010      	b.n	8006ec4 <_printf_common+0xac>
 8006ea2:	3501      	adds	r5, #1
 8006ea4:	68e3      	ldr	r3, [r4, #12]
 8006ea6:	6832      	ldr	r2, [r6, #0]
 8006ea8:	1a9b      	subs	r3, r3, r2
 8006eaa:	42ab      	cmp	r3, r5
 8006eac:	ddd2      	ble.n	8006e54 <_printf_common+0x3c>
 8006eae:	0022      	movs	r2, r4
 8006eb0:	2301      	movs	r3, #1
 8006eb2:	9901      	ldr	r1, [sp, #4]
 8006eb4:	9800      	ldr	r0, [sp, #0]
 8006eb6:	9f08      	ldr	r7, [sp, #32]
 8006eb8:	3219      	adds	r2, #25
 8006eba:	47b8      	blx	r7
 8006ebc:	3001      	adds	r0, #1
 8006ebe:	d1f0      	bne.n	8006ea2 <_printf_common+0x8a>
 8006ec0:	2001      	movs	r0, #1
 8006ec2:	4240      	negs	r0, r0
 8006ec4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006ec6:	2030      	movs	r0, #48	; 0x30
 8006ec8:	18e1      	adds	r1, r4, r3
 8006eca:	3143      	adds	r1, #67	; 0x43
 8006ecc:	7008      	strb	r0, [r1, #0]
 8006ece:	0021      	movs	r1, r4
 8006ed0:	1c5a      	adds	r2, r3, #1
 8006ed2:	3145      	adds	r1, #69	; 0x45
 8006ed4:	7809      	ldrb	r1, [r1, #0]
 8006ed6:	18a2      	adds	r2, r4, r2
 8006ed8:	3243      	adds	r2, #67	; 0x43
 8006eda:	3302      	adds	r3, #2
 8006edc:	7011      	strb	r1, [r2, #0]
 8006ede:	e7c1      	b.n	8006e64 <_printf_common+0x4c>
 8006ee0:	0022      	movs	r2, r4
 8006ee2:	2301      	movs	r3, #1
 8006ee4:	9901      	ldr	r1, [sp, #4]
 8006ee6:	9800      	ldr	r0, [sp, #0]
 8006ee8:	9f08      	ldr	r7, [sp, #32]
 8006eea:	321a      	adds	r2, #26
 8006eec:	47b8      	blx	r7
 8006eee:	3001      	adds	r0, #1
 8006ef0:	d0e6      	beq.n	8006ec0 <_printf_common+0xa8>
 8006ef2:	3601      	adds	r6, #1
 8006ef4:	e7d1      	b.n	8006e9a <_printf_common+0x82>
	...

08006ef8 <_printf_i>:
 8006ef8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006efa:	b08b      	sub	sp, #44	; 0x2c
 8006efc:	9206      	str	r2, [sp, #24]
 8006efe:	000a      	movs	r2, r1
 8006f00:	3243      	adds	r2, #67	; 0x43
 8006f02:	9307      	str	r3, [sp, #28]
 8006f04:	9005      	str	r0, [sp, #20]
 8006f06:	9204      	str	r2, [sp, #16]
 8006f08:	7e0a      	ldrb	r2, [r1, #24]
 8006f0a:	000c      	movs	r4, r1
 8006f0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006f0e:	2a78      	cmp	r2, #120	; 0x78
 8006f10:	d809      	bhi.n	8006f26 <_printf_i+0x2e>
 8006f12:	2a62      	cmp	r2, #98	; 0x62
 8006f14:	d80b      	bhi.n	8006f2e <_printf_i+0x36>
 8006f16:	2a00      	cmp	r2, #0
 8006f18:	d100      	bne.n	8006f1c <_printf_i+0x24>
 8006f1a:	e0be      	b.n	800709a <_printf_i+0x1a2>
 8006f1c:	497c      	ldr	r1, [pc, #496]	; (8007110 <_printf_i+0x218>)
 8006f1e:	9103      	str	r1, [sp, #12]
 8006f20:	2a58      	cmp	r2, #88	; 0x58
 8006f22:	d100      	bne.n	8006f26 <_printf_i+0x2e>
 8006f24:	e093      	b.n	800704e <_printf_i+0x156>
 8006f26:	0026      	movs	r6, r4
 8006f28:	3642      	adds	r6, #66	; 0x42
 8006f2a:	7032      	strb	r2, [r6, #0]
 8006f2c:	e022      	b.n	8006f74 <_printf_i+0x7c>
 8006f2e:	0010      	movs	r0, r2
 8006f30:	3863      	subs	r0, #99	; 0x63
 8006f32:	2815      	cmp	r0, #21
 8006f34:	d8f7      	bhi.n	8006f26 <_printf_i+0x2e>
 8006f36:	f7f9 f8e3 	bl	8000100 <__gnu_thumb1_case_shi>
 8006f3a:	0016      	.short	0x0016
 8006f3c:	fff6001f 	.word	0xfff6001f
 8006f40:	fff6fff6 	.word	0xfff6fff6
 8006f44:	001ffff6 	.word	0x001ffff6
 8006f48:	fff6fff6 	.word	0xfff6fff6
 8006f4c:	fff6fff6 	.word	0xfff6fff6
 8006f50:	003600a3 	.word	0x003600a3
 8006f54:	fff60083 	.word	0xfff60083
 8006f58:	00b4fff6 	.word	0x00b4fff6
 8006f5c:	0036fff6 	.word	0x0036fff6
 8006f60:	fff6fff6 	.word	0xfff6fff6
 8006f64:	0087      	.short	0x0087
 8006f66:	0026      	movs	r6, r4
 8006f68:	681a      	ldr	r2, [r3, #0]
 8006f6a:	3642      	adds	r6, #66	; 0x42
 8006f6c:	1d11      	adds	r1, r2, #4
 8006f6e:	6019      	str	r1, [r3, #0]
 8006f70:	6813      	ldr	r3, [r2, #0]
 8006f72:	7033      	strb	r3, [r6, #0]
 8006f74:	2301      	movs	r3, #1
 8006f76:	e0a2      	b.n	80070be <_printf_i+0x1c6>
 8006f78:	6818      	ldr	r0, [r3, #0]
 8006f7a:	6809      	ldr	r1, [r1, #0]
 8006f7c:	1d02      	adds	r2, r0, #4
 8006f7e:	060d      	lsls	r5, r1, #24
 8006f80:	d50b      	bpl.n	8006f9a <_printf_i+0xa2>
 8006f82:	6805      	ldr	r5, [r0, #0]
 8006f84:	601a      	str	r2, [r3, #0]
 8006f86:	2d00      	cmp	r5, #0
 8006f88:	da03      	bge.n	8006f92 <_printf_i+0x9a>
 8006f8a:	232d      	movs	r3, #45	; 0x2d
 8006f8c:	9a04      	ldr	r2, [sp, #16]
 8006f8e:	426d      	negs	r5, r5
 8006f90:	7013      	strb	r3, [r2, #0]
 8006f92:	4b5f      	ldr	r3, [pc, #380]	; (8007110 <_printf_i+0x218>)
 8006f94:	270a      	movs	r7, #10
 8006f96:	9303      	str	r3, [sp, #12]
 8006f98:	e01b      	b.n	8006fd2 <_printf_i+0xda>
 8006f9a:	6805      	ldr	r5, [r0, #0]
 8006f9c:	601a      	str	r2, [r3, #0]
 8006f9e:	0649      	lsls	r1, r1, #25
 8006fa0:	d5f1      	bpl.n	8006f86 <_printf_i+0x8e>
 8006fa2:	b22d      	sxth	r5, r5
 8006fa4:	e7ef      	b.n	8006f86 <_printf_i+0x8e>
 8006fa6:	680d      	ldr	r5, [r1, #0]
 8006fa8:	6819      	ldr	r1, [r3, #0]
 8006faa:	1d08      	adds	r0, r1, #4
 8006fac:	6018      	str	r0, [r3, #0]
 8006fae:	062e      	lsls	r6, r5, #24
 8006fb0:	d501      	bpl.n	8006fb6 <_printf_i+0xbe>
 8006fb2:	680d      	ldr	r5, [r1, #0]
 8006fb4:	e003      	b.n	8006fbe <_printf_i+0xc6>
 8006fb6:	066d      	lsls	r5, r5, #25
 8006fb8:	d5fb      	bpl.n	8006fb2 <_printf_i+0xba>
 8006fba:	680d      	ldr	r5, [r1, #0]
 8006fbc:	b2ad      	uxth	r5, r5
 8006fbe:	4b54      	ldr	r3, [pc, #336]	; (8007110 <_printf_i+0x218>)
 8006fc0:	2708      	movs	r7, #8
 8006fc2:	9303      	str	r3, [sp, #12]
 8006fc4:	2a6f      	cmp	r2, #111	; 0x6f
 8006fc6:	d000      	beq.n	8006fca <_printf_i+0xd2>
 8006fc8:	3702      	adds	r7, #2
 8006fca:	0023      	movs	r3, r4
 8006fcc:	2200      	movs	r2, #0
 8006fce:	3343      	adds	r3, #67	; 0x43
 8006fd0:	701a      	strb	r2, [r3, #0]
 8006fd2:	6863      	ldr	r3, [r4, #4]
 8006fd4:	60a3      	str	r3, [r4, #8]
 8006fd6:	2b00      	cmp	r3, #0
 8006fd8:	db03      	blt.n	8006fe2 <_printf_i+0xea>
 8006fda:	2104      	movs	r1, #4
 8006fdc:	6822      	ldr	r2, [r4, #0]
 8006fde:	438a      	bics	r2, r1
 8006fe0:	6022      	str	r2, [r4, #0]
 8006fe2:	2d00      	cmp	r5, #0
 8006fe4:	d102      	bne.n	8006fec <_printf_i+0xf4>
 8006fe6:	9e04      	ldr	r6, [sp, #16]
 8006fe8:	2b00      	cmp	r3, #0
 8006fea:	d00c      	beq.n	8007006 <_printf_i+0x10e>
 8006fec:	9e04      	ldr	r6, [sp, #16]
 8006fee:	0028      	movs	r0, r5
 8006ff0:	0039      	movs	r1, r7
 8006ff2:	f7f9 f915 	bl	8000220 <__aeabi_uidivmod>
 8006ff6:	9b03      	ldr	r3, [sp, #12]
 8006ff8:	3e01      	subs	r6, #1
 8006ffa:	5c5b      	ldrb	r3, [r3, r1]
 8006ffc:	7033      	strb	r3, [r6, #0]
 8006ffe:	002b      	movs	r3, r5
 8007000:	0005      	movs	r5, r0
 8007002:	429f      	cmp	r7, r3
 8007004:	d9f3      	bls.n	8006fee <_printf_i+0xf6>
 8007006:	2f08      	cmp	r7, #8
 8007008:	d109      	bne.n	800701e <_printf_i+0x126>
 800700a:	6823      	ldr	r3, [r4, #0]
 800700c:	07db      	lsls	r3, r3, #31
 800700e:	d506      	bpl.n	800701e <_printf_i+0x126>
 8007010:	6862      	ldr	r2, [r4, #4]
 8007012:	6923      	ldr	r3, [r4, #16]
 8007014:	429a      	cmp	r2, r3
 8007016:	dc02      	bgt.n	800701e <_printf_i+0x126>
 8007018:	2330      	movs	r3, #48	; 0x30
 800701a:	3e01      	subs	r6, #1
 800701c:	7033      	strb	r3, [r6, #0]
 800701e:	9b04      	ldr	r3, [sp, #16]
 8007020:	1b9b      	subs	r3, r3, r6
 8007022:	6123      	str	r3, [r4, #16]
 8007024:	9b07      	ldr	r3, [sp, #28]
 8007026:	0021      	movs	r1, r4
 8007028:	9300      	str	r3, [sp, #0]
 800702a:	9805      	ldr	r0, [sp, #20]
 800702c:	9b06      	ldr	r3, [sp, #24]
 800702e:	aa09      	add	r2, sp, #36	; 0x24
 8007030:	f7ff fef2 	bl	8006e18 <_printf_common>
 8007034:	3001      	adds	r0, #1
 8007036:	d147      	bne.n	80070c8 <_printf_i+0x1d0>
 8007038:	2001      	movs	r0, #1
 800703a:	4240      	negs	r0, r0
 800703c:	b00b      	add	sp, #44	; 0x2c
 800703e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007040:	2220      	movs	r2, #32
 8007042:	6809      	ldr	r1, [r1, #0]
 8007044:	430a      	orrs	r2, r1
 8007046:	6022      	str	r2, [r4, #0]
 8007048:	2278      	movs	r2, #120	; 0x78
 800704a:	4932      	ldr	r1, [pc, #200]	; (8007114 <_printf_i+0x21c>)
 800704c:	9103      	str	r1, [sp, #12]
 800704e:	0021      	movs	r1, r4
 8007050:	3145      	adds	r1, #69	; 0x45
 8007052:	700a      	strb	r2, [r1, #0]
 8007054:	6819      	ldr	r1, [r3, #0]
 8007056:	6822      	ldr	r2, [r4, #0]
 8007058:	c920      	ldmia	r1!, {r5}
 800705a:	0610      	lsls	r0, r2, #24
 800705c:	d402      	bmi.n	8007064 <_printf_i+0x16c>
 800705e:	0650      	lsls	r0, r2, #25
 8007060:	d500      	bpl.n	8007064 <_printf_i+0x16c>
 8007062:	b2ad      	uxth	r5, r5
 8007064:	6019      	str	r1, [r3, #0]
 8007066:	07d3      	lsls	r3, r2, #31
 8007068:	d502      	bpl.n	8007070 <_printf_i+0x178>
 800706a:	2320      	movs	r3, #32
 800706c:	4313      	orrs	r3, r2
 800706e:	6023      	str	r3, [r4, #0]
 8007070:	2710      	movs	r7, #16
 8007072:	2d00      	cmp	r5, #0
 8007074:	d1a9      	bne.n	8006fca <_printf_i+0xd2>
 8007076:	2220      	movs	r2, #32
 8007078:	6823      	ldr	r3, [r4, #0]
 800707a:	4393      	bics	r3, r2
 800707c:	6023      	str	r3, [r4, #0]
 800707e:	e7a4      	b.n	8006fca <_printf_i+0xd2>
 8007080:	681a      	ldr	r2, [r3, #0]
 8007082:	680d      	ldr	r5, [r1, #0]
 8007084:	1d10      	adds	r0, r2, #4
 8007086:	6949      	ldr	r1, [r1, #20]
 8007088:	6018      	str	r0, [r3, #0]
 800708a:	6813      	ldr	r3, [r2, #0]
 800708c:	062e      	lsls	r6, r5, #24
 800708e:	d501      	bpl.n	8007094 <_printf_i+0x19c>
 8007090:	6019      	str	r1, [r3, #0]
 8007092:	e002      	b.n	800709a <_printf_i+0x1a2>
 8007094:	066d      	lsls	r5, r5, #25
 8007096:	d5fb      	bpl.n	8007090 <_printf_i+0x198>
 8007098:	8019      	strh	r1, [r3, #0]
 800709a:	2300      	movs	r3, #0
 800709c:	9e04      	ldr	r6, [sp, #16]
 800709e:	6123      	str	r3, [r4, #16]
 80070a0:	e7c0      	b.n	8007024 <_printf_i+0x12c>
 80070a2:	681a      	ldr	r2, [r3, #0]
 80070a4:	1d11      	adds	r1, r2, #4
 80070a6:	6019      	str	r1, [r3, #0]
 80070a8:	6816      	ldr	r6, [r2, #0]
 80070aa:	2100      	movs	r1, #0
 80070ac:	0030      	movs	r0, r6
 80070ae:	6862      	ldr	r2, [r4, #4]
 80070b0:	f000 f845 	bl	800713e <memchr>
 80070b4:	2800      	cmp	r0, #0
 80070b6:	d001      	beq.n	80070bc <_printf_i+0x1c4>
 80070b8:	1b80      	subs	r0, r0, r6
 80070ba:	6060      	str	r0, [r4, #4]
 80070bc:	6863      	ldr	r3, [r4, #4]
 80070be:	6123      	str	r3, [r4, #16]
 80070c0:	2300      	movs	r3, #0
 80070c2:	9a04      	ldr	r2, [sp, #16]
 80070c4:	7013      	strb	r3, [r2, #0]
 80070c6:	e7ad      	b.n	8007024 <_printf_i+0x12c>
 80070c8:	0032      	movs	r2, r6
 80070ca:	6923      	ldr	r3, [r4, #16]
 80070cc:	9906      	ldr	r1, [sp, #24]
 80070ce:	9805      	ldr	r0, [sp, #20]
 80070d0:	9d07      	ldr	r5, [sp, #28]
 80070d2:	47a8      	blx	r5
 80070d4:	3001      	adds	r0, #1
 80070d6:	d0af      	beq.n	8007038 <_printf_i+0x140>
 80070d8:	6823      	ldr	r3, [r4, #0]
 80070da:	079b      	lsls	r3, r3, #30
 80070dc:	d415      	bmi.n	800710a <_printf_i+0x212>
 80070de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80070e0:	68e0      	ldr	r0, [r4, #12]
 80070e2:	4298      	cmp	r0, r3
 80070e4:	daaa      	bge.n	800703c <_printf_i+0x144>
 80070e6:	0018      	movs	r0, r3
 80070e8:	e7a8      	b.n	800703c <_printf_i+0x144>
 80070ea:	0022      	movs	r2, r4
 80070ec:	2301      	movs	r3, #1
 80070ee:	9906      	ldr	r1, [sp, #24]
 80070f0:	9805      	ldr	r0, [sp, #20]
 80070f2:	9e07      	ldr	r6, [sp, #28]
 80070f4:	3219      	adds	r2, #25
 80070f6:	47b0      	blx	r6
 80070f8:	3001      	adds	r0, #1
 80070fa:	d09d      	beq.n	8007038 <_printf_i+0x140>
 80070fc:	3501      	adds	r5, #1
 80070fe:	68e3      	ldr	r3, [r4, #12]
 8007100:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007102:	1a9b      	subs	r3, r3, r2
 8007104:	42ab      	cmp	r3, r5
 8007106:	dcf0      	bgt.n	80070ea <_printf_i+0x1f2>
 8007108:	e7e9      	b.n	80070de <_printf_i+0x1e6>
 800710a:	2500      	movs	r5, #0
 800710c:	e7f7      	b.n	80070fe <_printf_i+0x206>
 800710e:	46c0      	nop			; (mov r8, r8)
 8007110:	080073ad 	.word	0x080073ad
 8007114:	080073be 	.word	0x080073be

08007118 <memmove>:
 8007118:	b510      	push	{r4, lr}
 800711a:	4288      	cmp	r0, r1
 800711c:	d902      	bls.n	8007124 <memmove+0xc>
 800711e:	188b      	adds	r3, r1, r2
 8007120:	4298      	cmp	r0, r3
 8007122:	d303      	bcc.n	800712c <memmove+0x14>
 8007124:	2300      	movs	r3, #0
 8007126:	e007      	b.n	8007138 <memmove+0x20>
 8007128:	5c8b      	ldrb	r3, [r1, r2]
 800712a:	5483      	strb	r3, [r0, r2]
 800712c:	3a01      	subs	r2, #1
 800712e:	d2fb      	bcs.n	8007128 <memmove+0x10>
 8007130:	bd10      	pop	{r4, pc}
 8007132:	5ccc      	ldrb	r4, [r1, r3]
 8007134:	54c4      	strb	r4, [r0, r3]
 8007136:	3301      	adds	r3, #1
 8007138:	429a      	cmp	r2, r3
 800713a:	d1fa      	bne.n	8007132 <memmove+0x1a>
 800713c:	e7f8      	b.n	8007130 <memmove+0x18>

0800713e <memchr>:
 800713e:	b2c9      	uxtb	r1, r1
 8007140:	1882      	adds	r2, r0, r2
 8007142:	4290      	cmp	r0, r2
 8007144:	d101      	bne.n	800714a <memchr+0xc>
 8007146:	2000      	movs	r0, #0
 8007148:	4770      	bx	lr
 800714a:	7803      	ldrb	r3, [r0, #0]
 800714c:	428b      	cmp	r3, r1
 800714e:	d0fb      	beq.n	8007148 <memchr+0xa>
 8007150:	3001      	adds	r0, #1
 8007152:	e7f6      	b.n	8007142 <memchr+0x4>

08007154 <_realloc_r>:
 8007154:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007156:	0007      	movs	r7, r0
 8007158:	000e      	movs	r6, r1
 800715a:	0014      	movs	r4, r2
 800715c:	2900      	cmp	r1, #0
 800715e:	d105      	bne.n	800716c <_realloc_r+0x18>
 8007160:	0011      	movs	r1, r2
 8007162:	f7ff fbab 	bl	80068bc <_malloc_r>
 8007166:	0005      	movs	r5, r0
 8007168:	0028      	movs	r0, r5
 800716a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800716c:	2a00      	cmp	r2, #0
 800716e:	d103      	bne.n	8007178 <_realloc_r+0x24>
 8007170:	f7ff fca6 	bl	8006ac0 <_free_r>
 8007174:	0025      	movs	r5, r4
 8007176:	e7f7      	b.n	8007168 <_realloc_r+0x14>
 8007178:	f000 f81b 	bl	80071b2 <_malloc_usable_size_r>
 800717c:	9001      	str	r0, [sp, #4]
 800717e:	4284      	cmp	r4, r0
 8007180:	d803      	bhi.n	800718a <_realloc_r+0x36>
 8007182:	0035      	movs	r5, r6
 8007184:	0843      	lsrs	r3, r0, #1
 8007186:	42a3      	cmp	r3, r4
 8007188:	d3ee      	bcc.n	8007168 <_realloc_r+0x14>
 800718a:	0021      	movs	r1, r4
 800718c:	0038      	movs	r0, r7
 800718e:	f7ff fb95 	bl	80068bc <_malloc_r>
 8007192:	1e05      	subs	r5, r0, #0
 8007194:	d0e8      	beq.n	8007168 <_realloc_r+0x14>
 8007196:	9b01      	ldr	r3, [sp, #4]
 8007198:	0022      	movs	r2, r4
 800719a:	429c      	cmp	r4, r3
 800719c:	d900      	bls.n	80071a0 <_realloc_r+0x4c>
 800719e:	001a      	movs	r2, r3
 80071a0:	0031      	movs	r1, r6
 80071a2:	0028      	movs	r0, r5
 80071a4:	f7ff fc82 	bl	8006aac <memcpy>
 80071a8:	0031      	movs	r1, r6
 80071aa:	0038      	movs	r0, r7
 80071ac:	f7ff fc88 	bl	8006ac0 <_free_r>
 80071b0:	e7da      	b.n	8007168 <_realloc_r+0x14>

080071b2 <_malloc_usable_size_r>:
 80071b2:	1f0b      	subs	r3, r1, #4
 80071b4:	681b      	ldr	r3, [r3, #0]
 80071b6:	1f18      	subs	r0, r3, #4
 80071b8:	2b00      	cmp	r3, #0
 80071ba:	da01      	bge.n	80071c0 <_malloc_usable_size_r+0xe>
 80071bc:	580b      	ldr	r3, [r1, r0]
 80071be:	18c0      	adds	r0, r0, r3
 80071c0:	4770      	bx	lr
	...

080071c4 <_init>:
 80071c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80071c6:	46c0      	nop			; (mov r8, r8)
 80071c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80071ca:	bc08      	pop	{r3}
 80071cc:	469e      	mov	lr, r3
 80071ce:	4770      	bx	lr

080071d0 <_fini>:
 80071d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80071d2:	46c0      	nop			; (mov r8, r8)
 80071d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80071d6:	bc08      	pop	{r3}
 80071d8:	469e      	mov	lr, r3
 80071da:	4770      	bx	lr
